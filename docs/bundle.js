/*! For license information please see bundle.js.LICENSE.txt */
(()=>{var t={902:t=>{t.exports="#version 300 es\nprecision highp float;\n\nuniform vec2 u_resolution;\nuniform sampler2D u_cameraTexture;\nuniform vec2 u_cameraResolution;\nuniform vec2 u_translation;\nuniform float u_scale;\nuniform vec3 u_circle1;\nuniform vec3 u_circle2;\nuniform vec2 u_cornerUpperRight;\nuniform sampler2D u_videoFrames[5];\nuniform vec3 u_backgroundColor;\n\nconst float GAMMA = 2.2;\nconst float DISPLAY_GAMMA_COEFF = 1. / GAMMA;\nvec4 gammaCorrect(vec4 rgba) {\n    return vec4((min(pow(rgba.r, DISPLAY_GAMMA_COEFF), 1.)),\n                (min(pow(rgba.g, DISPLAY_GAMMA_COEFF), 1.)),\n                (min(pow(rgba.b, DISPLAY_GAMMA_COEFF), 1.)),\n                rgba.a);\n}\n\nvec4 deGamma(vec4 rgba) {\n    return vec4((min(pow(rgba.r, GAMMA), 1.)),\n                (min(pow(rgba.g, GAMMA), 1.)),\n                (min(pow(rgba.b, GAMMA), 1.)),\n                rgba.a);\n}\n\n\nvec3 hsv2rgb(const float h, const float s, const float v){\n    vec3 c = vec3(h, s, v);\n    const vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\n    vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);\n    return c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);\n}\n\n// from Syntopia http://blog.hvidtfeldts.net/index.php/2015/01/path-tracing-3d-fractals/\nvec2 rand2n(const vec2 co, const float sampleIndex) {\n    vec2 seed = co * (sampleIndex + 1.0);\n    seed+=vec2(-1,1);\n    // implementation based on: lumina.sourceforge.net/Tutorials/Noise.html\n    return vec2(fract(sin(dot(seed.xy ,vec2(12.9898,78.233))) * 43758.5453),\n                fract(cos(dot(seed.xy ,vec2(4.898,7.23))) * 23421.631));\n}\n\nvec2 circleInversion(const vec2 pos, const vec3 circle){\n    vec2 p = pos - circle.xy;\n    float d = length(p);\n    return (p * circle.z * circle.z)/(d * d) + circle.xy;\n}\n\nconst int MAX_ITERATIONS = 20;\nvec2 iis(vec2 pos, out bool isOuter, out int numInversions) {\n    vec3 c3 = vec3(-u_circle1.xy, u_circle1.z);\n    vec3 c4 = vec3(-u_circle2.xy, u_circle2.z);\n    isOuter = false;\n\n    float x = 0.57735;\n    bool revC2 = false;\n    if(x > u_circle2.x){\n        revC2 = true;\n    }\n    for(int i = 0 ; i < MAX_ITERATIONS ; i++){\n        bool loopEnd = true;\n        if(distance(pos, c3.xy) < c3.z) {\n            pos = circleInversion(pos, c3);\n            loopEnd = false;\n            numInversions++;\n        } else if (distance(pos, u_circle1.xy) < u_circle1.z) {\n            pos = circleInversion(pos, u_circle1);\n            loopEnd = false;\n            numInversions++;\n        }\n        if(revC2) {\n            if (distance(pos, u_circle2.xy) > u_circle2.z) {\n                pos = circleInversion(pos, u_circle2);\n                loopEnd = false;\n                numInversions++;\n            }\n            if (distance(pos, c4.xy) > c4.z) {\n                pos = circleInversion(pos, c4);\n                loopEnd = false;\n                numInversions++;\n            }\n        } else {\n            if (distance(pos, u_circle2.xy) < u_circle2.z) {\n                pos = circleInversion(pos, u_circle2);\n                loopEnd = false;\n                numInversions++;\n            }\n            if (distance(pos, c4.xy) < c4.z) {\n                pos = circleInversion(pos, c4);\n                loopEnd = false;\n                numInversions++;\n            }\n        }\n\n        if(loopEnd) break;\n    }\n    if(length(pos) > 1.5) {\n        isOuter = true;\n    }\n    return pos;\n}\n\nconst float MAX_SAMPLES = 100.;\nout vec4 outColor;\nvoid main() {\n    vec4 sum = vec4(0);\n    float ratio = u_resolution.x / u_resolution.y / 2.0;\n    vec2 cornerLowerLeft = -u_cornerUpperRight;\n    vec2 tileSize = u_cornerUpperRight - cornerLowerLeft;\n    //  sum = texture(u_cameraTexture, abs((position - cornerLowerLeft) / size));\n    float cameraAspect = u_cameraResolution.y / u_cameraResolution.x;\n    float tileAspect = tileSize.y / tileSize.x;\n    vec2 cameraSizeOnScreen;\n    vec2 offset;\n    if(tileAspect >= cameraAspect) {\n        // 幅を1としてときにタイルの方が高さが大きい\n        // 横方向をクリップ\n        //cameraWidth = u_cameraResolution.x * (tileSize.x / tileSize.y);\n        //cameraHeight = u_cameraResolution.y;\n        //offsetX = (u_cameraResolution.x - cameraWidth) / 2.;\n        cameraSizeOnScreen = vec2(tileSize.y * (u_cameraResolution.x / u_cameraResolution.y), tileSize.y);\n        offset = vec2((cameraSizeOnScreen.x - tileSize.x) * 0.5, 0);\n    } else {\n        // 幅を1としてときに画像の方が高さが大きい\n        // 縦方向でクリップ\n        //cameraWidth = u_cameraResolution.x;\n        //cameraHeight = u_cameraResolution.x * tileAspect;\n        //offsetY = (u_cameraResolution.y - cameraHeight) / 2.;\n        cameraSizeOnScreen = vec2(tileSize.x, tileSize.x * (u_cameraResolution.y / u_cameraResolution.x));\n        offset = vec2(0, (cameraSizeOnScreen.y - tileSize.y) * 0.5);\n    }\n    for(float i = 0.; i < MAX_SAMPLES; i++){\n        vec2 position = ((gl_FragCoord.xy + rand2n(gl_FragCoord.xy, i)) / u_resolution.yy ) - vec2(ratio, 0.5);\n        position = position * u_scale;\n        position += u_translation;\n\n        // if(distance(position, u_circle1.xy) < u_circle1.z) {\n        //     sum += vec4(1, 0, 0, 1);\n        //     continue;\n        // }\n        // if(distance(position, u_circle2.xy) < u_circle2.z) {\n        //     sum += vec4(1, 0, 0, 1);\n        //     continue;\n        // }\n\n        //sum += texture(u_cameraTexture, gl_FragCoord.xy / u_cameraResolution);\n\n        vec2 cornerLowerLeft = -u_cornerUpperRight;\n        vec2 tileSize = u_cornerUpperRight - cornerLowerLeft;\n        //  sum = texture(u_cameraTexture, abs((position - cornerLowerLeft) / size));\n        float cameraAspect = u_cameraResolution.y / u_cameraResolution.x;\n        float tileAspect = tileSize.y / tileSize.x;\n        bool isOuter;\n        int numInversions;\n        vec2 pos = iis(position, isOuter, numInversions);\n        if(isOuter) {\n            sum += vec4(u_backgroundColor, 1);\n        } else {\n            vec2 uv = 1.0 - ((pos - cornerLowerLeft + offset) / cameraSizeOnScreen);\n            //sum += vec4(uv, 0, 1);\n            if(numInversions == 0) {\n                sum += texture(u_cameraTexture, uv);\n            } else if(numInversions == 1){\n                sum += texture(u_videoFrames[0], uv);\n            } else if(numInversions == 2){\n                sum += texture(u_videoFrames[1], uv);\n            } else if(numInversions == 3){\n                sum += texture(u_videoFrames[2], uv);\n            } else if(numInversions == 4){\n                sum += texture(u_videoFrames[3], uv);\n            } else if(numInversions >= 5){\n                sum += texture(u_videoFrames[4], uv);\n            }\n\n        }\n    }\n\n    outColor = sum / MAX_SAMPLES;\n}\n"},228:t=>{t.exports="#version 300 es\n\nin vec2 a_vertex;\nout vec2 v_texCoord;\n\nvoid main() {\n    v_texCoord = a_vertex.xy * 0.5 + 0.5;\n    gl_Position = vec4(a_vertex, 0., 1.0);\n}\n"}},e={};function n(i){var r=e[i];if(void 0!==r)return r.exports;var s=e[i]={exports:{}};return t[i](s,s.exports,n),s.exports}(()=>{"use strict";class t{constructor(e,n,i,r,s="div"){this.parent=e,this.object=n,this.property=i,this._disabled=!1,this._hidden=!1,this.initialValue=this.getValue(),this.domElement=document.createElement(s),this.domElement.classList.add("controller"),this.domElement.classList.add(r),this.$name=document.createElement("div"),this.$name.classList.add("name"),t.nextNameID=t.nextNameID||0,this.$name.id="lil-gui-name-"+ ++t.nextNameID,this.$widget=document.createElement("div"),this.$widget.classList.add("widget"),this.$disable=this.$widget,this.domElement.appendChild(this.$name),this.domElement.appendChild(this.$widget),this.domElement.addEventListener("keydown",(t=>t.stopPropagation())),this.domElement.addEventListener("keyup",(t=>t.stopPropagation())),this.parent.children.push(this),this.parent.controllers.push(this),this.parent.$children.appendChild(this.domElement),this._listenCallback=this._listenCallback.bind(this),this.name(i)}name(t){return this._name=t,this.$name.textContent=t,this}onChange(t){return this._onChange=t,this}_callOnChange(){this.parent._callOnChange(this),void 0!==this._onChange&&this._onChange.call(this,this.getValue()),this._changed=!0}onFinishChange(t){return this._onFinishChange=t,this}_callOnFinishChange(){this._changed&&(this.parent._callOnFinishChange(this),void 0!==this._onFinishChange&&this._onFinishChange.call(this,this.getValue())),this._changed=!1}reset(){return this.setValue(this.initialValue),this._callOnFinishChange(),this}enable(t=!0){return this.disable(!t)}disable(t=!0){return t===this._disabled||(this._disabled=t,this.domElement.classList.toggle("disabled",t),this.$disable.toggleAttribute("disabled",t)),this}show(t=!0){return this._hidden=!t,this.domElement.style.display=this._hidden?"none":"",this}hide(){return this.show(!1)}options(t){const e=this.parent.add(this.object,this.property,t);return e.name(this._name),this.destroy(),e}min(t){return this}max(t){return this}step(t){return this}decimals(t){return this}listen(t=!0){return this._listening=t,void 0!==this._listenCallbackID&&(cancelAnimationFrame(this._listenCallbackID),this._listenCallbackID=void 0),this._listening&&this._listenCallback(),this}_listenCallback(){this._listenCallbackID=requestAnimationFrame(this._listenCallback);const t=this.save();t!==this._listenPrevValue&&this.updateDisplay(),this._listenPrevValue=t}getValue(){return this.object[this.property]}setValue(t){return this.getValue()!==t&&(this.object[this.property]=t,this._callOnChange(),this.updateDisplay()),this}updateDisplay(){return this}load(t){return this.setValue(t),this._callOnFinishChange(),this}save(){return this.getValue()}destroy(){this.listen(!1),this.parent.children.splice(this.parent.children.indexOf(this),1),this.parent.controllers.splice(this.parent.controllers.indexOf(this),1),this.parent.$children.removeChild(this.domElement)}}class e extends t{constructor(t,e,n){super(t,e,n,"boolean","label"),this.$input=document.createElement("input"),this.$input.setAttribute("type","checkbox"),this.$input.setAttribute("aria-labelledby",this.$name.id),this.$widget.appendChild(this.$input),this.$input.addEventListener("change",(()=>{this.setValue(this.$input.checked),this._callOnFinishChange()})),this.$disable=this.$input,this.updateDisplay()}updateDisplay(){return this.$input.checked=this.getValue(),this}}function i(t){let e,n;return(e=t.match(/(#|0x)?([a-f0-9]{6})/i))?n=e[2]:(e=t.match(/rgb\(\s*(\d*)\s*,\s*(\d*)\s*,\s*(\d*)\s*\)/))?n=parseInt(e[1]).toString(16).padStart(2,0)+parseInt(e[2]).toString(16).padStart(2,0)+parseInt(e[3]).toString(16).padStart(2,0):(e=t.match(/^#?([a-f0-9])([a-f0-9])([a-f0-9])$/i))&&(n=e[1]+e[1]+e[2]+e[2]+e[3]+e[3]),!!n&&"#"+n}const r={isPrimitive:!0,match:t=>"string"==typeof t,fromHexString:i,toHexString:i},s={isPrimitive:!0,match:t=>"number"==typeof t,fromHexString:t=>parseInt(t.substring(1),16),toHexString:t=>"#"+t.toString(16).padStart(6,0)},o={isPrimitive:!1,match:t=>Array.isArray(t),fromHexString(t,e,n=1){const i=s.fromHexString(t);e[0]=(i>>16&255)/255*n,e[1]=(i>>8&255)/255*n,e[2]=(255&i)/255*n},toHexString:([t,e,n],i=1)=>s.toHexString(t*(i=255/i)<<16^e*i<<8^n*i<<0)},a={isPrimitive:!1,match:t=>Object(t)===t,fromHexString(t,e,n=1){const i=s.fromHexString(t);e.r=(i>>16&255)/255*n,e.g=(i>>8&255)/255*n,e.b=(255&i)/255*n},toHexString:({r:t,g:e,b:n},i=1)=>s.toHexString(t*(i=255/i)<<16^e*i<<8^n*i<<0)},h=[r,s,o,a];class c extends t{constructor(t,e,n,r){var s;super(t,e,n,"color"),this.$input=document.createElement("input"),this.$input.setAttribute("type","color"),this.$input.setAttribute("tabindex",-1),this.$input.setAttribute("aria-labelledby",this.$name.id),this.$text=document.createElement("input"),this.$text.setAttribute("type","text"),this.$text.setAttribute("spellcheck","false"),this.$text.setAttribute("aria-labelledby",this.$name.id),this.$display=document.createElement("div"),this.$display.classList.add("display"),this.$display.appendChild(this.$input),this.$widget.appendChild(this.$display),this.$widget.appendChild(this.$text),this._format=(s=this.initialValue,h.find((t=>t.match(s)))),this._rgbScale=r,this._initialValueHexString=this.save(),this._textFocused=!1,this.$input.addEventListener("input",(()=>{this._setValueFromHexString(this.$input.value)})),this.$input.addEventListener("blur",(()=>{this._callOnFinishChange()})),this.$text.addEventListener("input",(()=>{const t=i(this.$text.value);t&&this._setValueFromHexString(t)})),this.$text.addEventListener("focus",(()=>{this._textFocused=!0,this.$text.select()})),this.$text.addEventListener("blur",(()=>{this._textFocused=!1,this.updateDisplay(),this._callOnFinishChange()})),this.$disable=this.$text,this.updateDisplay()}reset(){return this._setValueFromHexString(this._initialValueHexString),this}_setValueFromHexString(t){if(this._format.isPrimitive){const e=this._format.fromHexString(t);this.setValue(e)}else this._format.fromHexString(t,this.getValue(),this._rgbScale),this._callOnChange(),this.updateDisplay()}save(){return this._format.toHexString(this.getValue(),this._rgbScale)}load(t){return this._setValueFromHexString(t),this._callOnFinishChange(),this}updateDisplay(){return this.$input.value=this._format.toHexString(this.getValue(),this._rgbScale),this._textFocused||(this.$text.value=this.$input.value.substring(1)),this.$display.style.backgroundColor=this.$input.value,this}}class l extends t{constructor(t,e,n){super(t,e,n,"function"),this.$button=document.createElement("button"),this.$button.appendChild(this.$name),this.$widget.appendChild(this.$button),this.$button.addEventListener("click",(t=>{t.preventDefault(),this.getValue().call(this.object),this._callOnChange()})),this.$button.addEventListener("touchstart",(()=>{}),{passive:!0}),this.$disable=this.$button}}class u extends t{constructor(t,e,n,i,r,s){super(t,e,n,"number"),this._initInput(),this.min(i),this.max(r);const o=void 0!==s;this.step(o?s:this._getImplicitStep(),o),this.updateDisplay()}decimals(t){return this._decimals=t,this.updateDisplay(),this}min(t){return this._min=t,this._onUpdateMinMax(),this}max(t){return this._max=t,this._onUpdateMinMax(),this}step(t,e=!0){return this._step=t,this._stepExplicit=e,this}updateDisplay(){const t=this.getValue();if(this._hasSlider){let e=(t-this._min)/(this._max-this._min);e=Math.max(0,Math.min(e,1)),this.$fill.style.width=100*e+"%"}return this._inputFocused||(this.$input.value=void 0===this._decimals?t:t.toFixed(this._decimals)),this}_initInput(){this.$input=document.createElement("input"),this.$input.setAttribute("type","text"),this.$input.setAttribute("aria-labelledby",this.$name.id),window.matchMedia("(pointer: coarse)").matches&&(this.$input.setAttribute("type","number"),this.$input.setAttribute("step","any")),this.$widget.appendChild(this.$input),this.$disable=this.$input;const t=t=>{const e=parseFloat(this.$input.value);isNaN(e)||(this._snapClampSetValue(e+t),this.$input.value=this.getValue())};let e,n,i,r,s,o=!1;const a=t=>{if(o){const i=t.clientX-e,r=t.clientY-n;Math.abs(r)>5?(t.preventDefault(),this.$input.blur(),o=!1,this._setDraggingStyle(!0,"vertical")):Math.abs(i)>5&&h()}if(!o){const e=t.clientY-i;s-=e*this._step*this._arrowKeyMultiplier(t),r+s>this._max?s=this._max-r:r+s<this._min&&(s=this._min-r),this._snapClampSetValue(r+s)}i=t.clientY},h=()=>{this._setDraggingStyle(!1,"vertical"),this._callOnFinishChange(),window.removeEventListener("mousemove",a),window.removeEventListener("mouseup",h)};this.$input.addEventListener("input",(()=>{let t=parseFloat(this.$input.value);isNaN(t)||(this._stepExplicit&&(t=this._snap(t)),this.setValue(this._clamp(t)))})),this.$input.addEventListener("keydown",(e=>{"Enter"===e.key&&this.$input.blur(),"ArrowUp"===e.code&&(e.preventDefault(),t(this._step*this._arrowKeyMultiplier(e))),"ArrowDown"===e.code&&(e.preventDefault(),t(this._step*this._arrowKeyMultiplier(e)*-1))})),this.$input.addEventListener("wheel",(e=>{this._inputFocused&&(e.preventDefault(),t(this._step*this._normalizeMouseWheel(e)))}),{passive:!1}),this.$input.addEventListener("mousedown",(t=>{e=t.clientX,n=i=t.clientY,o=!0,r=this.getValue(),s=0,window.addEventListener("mousemove",a),window.addEventListener("mouseup",h)})),this.$input.addEventListener("focus",(()=>{this._inputFocused=!0})),this.$input.addEventListener("blur",(()=>{this._inputFocused=!1,this.updateDisplay(),this._callOnFinishChange()}))}_initSlider(){this._hasSlider=!0,this.$slider=document.createElement("div"),this.$slider.classList.add("slider"),this.$fill=document.createElement("div"),this.$fill.classList.add("fill"),this.$slider.appendChild(this.$fill),this.$widget.insertBefore(this.$slider,this.$input),this.domElement.classList.add("hasSlider");const t=t=>{const e=this.$slider.getBoundingClientRect();let n=((t,e,n,i,r)=>(t-e)/(n-e)*(this._max-i)+i)(t,e.left,e.right,this._min);this._snapClampSetValue(n)},e=e=>{t(e.clientX)},n=()=>{this._callOnFinishChange(),this._setDraggingStyle(!1),window.removeEventListener("mousemove",e),window.removeEventListener("mouseup",n)};let i,r,s=!1;const o=e=>{e.preventDefault(),this._setDraggingStyle(!0),t(e.touches[0].clientX),s=!1},a=e=>{if(s){const t=e.touches[0].clientX-i,n=e.touches[0].clientY-r;Math.abs(t)>Math.abs(n)?o(e):(window.removeEventListener("touchmove",a),window.removeEventListener("touchend",h))}else e.preventDefault(),t(e.touches[0].clientX)},h=()=>{this._callOnFinishChange(),this._setDraggingStyle(!1),window.removeEventListener("touchmove",a),window.removeEventListener("touchend",h)},c=this._callOnFinishChange.bind(this);let l;this.$slider.addEventListener("mousedown",(i=>{this._setDraggingStyle(!0),t(i.clientX),window.addEventListener("mousemove",e),window.addEventListener("mouseup",n)})),this.$slider.addEventListener("touchstart",(t=>{t.touches.length>1||(this._hasScrollBar?(i=t.touches[0].clientX,r=t.touches[0].clientY,s=!0):o(t),window.addEventListener("touchmove",a,{passive:!1}),window.addEventListener("touchend",h))}),{passive:!1}),this.$slider.addEventListener("wheel",(t=>{if(Math.abs(t.deltaX)<Math.abs(t.deltaY)&&this._hasScrollBar)return;t.preventDefault();const e=this._normalizeMouseWheel(t)*this._step;this._snapClampSetValue(this.getValue()+e),this.$input.value=this.getValue(),clearTimeout(l),l=setTimeout(c,400)}),{passive:!1})}_setDraggingStyle(t,e="horizontal"){this.$slider&&this.$slider.classList.toggle("active",t),document.body.classList.toggle("lil-gui-dragging",t),document.body.classList.toggle(`lil-gui-${e}`,t)}_getImplicitStep(){return this._hasMin&&this._hasMax?(this._max-this._min)/1e3:.1}_onUpdateMinMax(){!this._hasSlider&&this._hasMin&&this._hasMax&&(this._stepExplicit||this.step(this._getImplicitStep(),!1),this._initSlider(),this.updateDisplay())}_normalizeMouseWheel(t){let{deltaX:e,deltaY:n}=t;return Math.floor(t.deltaY)!==t.deltaY&&t.wheelDelta&&(e=0,n=-t.wheelDelta/120,n*=this._stepExplicit?1:10),e+-n}_arrowKeyMultiplier(t){let e=this._stepExplicit?1:10;return t.shiftKey?e*=10:t.altKey&&(e/=10),e}_snap(t){const e=Math.round(t/this._step)*this._step;return parseFloat(e.toPrecision(15))}_clamp(t){return t<this._min&&(t=this._min),t>this._max&&(t=this._max),t}_snapClampSetValue(t){this.setValue(this._clamp(this._snap(t)))}get _hasScrollBar(){const t=this.parent.root.$children;return t.scrollHeight>t.clientHeight}get _hasMin(){return void 0!==this._min}get _hasMax(){return void 0!==this._max}}class d extends t{constructor(t,e,n,i){super(t,e,n,"option"),this.$select=document.createElement("select"),this.$select.setAttribute("aria-labelledby",this.$name.id),this.$display=document.createElement("div"),this.$display.classList.add("display"),this.$select.addEventListener("change",(()=>{this.setValue(this._values[this.$select.selectedIndex]),this._callOnFinishChange()})),this.$select.addEventListener("focus",(()=>{this.$display.classList.add("focus")})),this.$select.addEventListener("blur",(()=>{this.$display.classList.remove("focus")})),this.$widget.appendChild(this.$select),this.$widget.appendChild(this.$display),this.$disable=this.$select,this.options(i)}options(t){return this._values=Array.isArray(t)?t:Object.values(t),this._names=Array.isArray(t)?t:Object.keys(t),this.$select.replaceChildren(),this._names.forEach((t=>{const e=document.createElement("option");e.textContent=t,this.$select.appendChild(e)})),this.updateDisplay(),this}updateDisplay(){const t=this.getValue(),e=this._values.indexOf(t);return this.$select.selectedIndex=e,this.$display.textContent=-1===e?t:this._names[e],this}}class p extends t{constructor(t,e,n){super(t,e,n,"string"),this.$input=document.createElement("input"),this.$input.setAttribute("type","text"),this.$input.setAttribute("spellcheck","false"),this.$input.setAttribute("aria-labelledby",this.$name.id),this.$input.addEventListener("input",(()=>{this.setValue(this.$input.value)})),this.$input.addEventListener("keydown",(t=>{"Enter"===t.code&&this.$input.blur()})),this.$input.addEventListener("blur",(()=>{this._callOnFinishChange()})),this.$widget.appendChild(this.$input),this.$disable=this.$input,this.updateDisplay()}updateDisplay(){return this.$input.value=this.getValue(),this}}let f=!1;class g{constructor({parent:t,autoPlace:e=void 0===t,container:n,width:i,title:r="Controls",closeFolders:s=!1,injectStyles:o=!0,touchStyles:a=!0}={}){if(this.parent=t,this.root=t?t.root:this,this.children=[],this.controllers=[],this.folders=[],this._closed=!1,this._hidden=!1,this.domElement=document.createElement("div"),this.domElement.classList.add("lil-gui"),this.$title=document.createElement("div"),this.$title.classList.add("title"),this.$title.setAttribute("role","button"),this.$title.setAttribute("aria-expanded",!0),this.$title.setAttribute("tabindex",0),this.$title.addEventListener("click",(()=>this.openAnimated(this._closed))),this.$title.addEventListener("keydown",(t=>{"Enter"!==t.code&&"Space"!==t.code||(t.preventDefault(),this.$title.click())})),this.$title.addEventListener("touchstart",(()=>{}),{passive:!0}),this.$children=document.createElement("div"),this.$children.classList.add("children"),this.domElement.appendChild(this.$title),this.domElement.appendChild(this.$children),this.title(r),this.parent)return this.parent.children.push(this),this.parent.folders.push(this),void this.parent.$children.appendChild(this.domElement);this.domElement.classList.add("root"),a&&this.domElement.classList.add("allow-touch-styles"),!f&&o&&(function(t){const e=document.createElement("style");e.innerHTML='.lil-gui {\n  font-family: var(--font-family);\n  font-size: var(--font-size);\n  line-height: 1;\n  font-weight: normal;\n  font-style: normal;\n  text-align: left;\n  color: var(--text-color);\n  user-select: none;\n  -webkit-user-select: none;\n  touch-action: manipulation;\n  --background-color: #1f1f1f;\n  --text-color: #ebebeb;\n  --title-background-color: #111111;\n  --title-text-color: #ebebeb;\n  --widget-color: #424242;\n  --hover-color: #4f4f4f;\n  --focus-color: #595959;\n  --number-color: #2cc9ff;\n  --string-color: #a2db3c;\n  --font-size: 11px;\n  --input-font-size: 11px;\n  --font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Arial, sans-serif;\n  --font-family-mono: Menlo, Monaco, Consolas, "Droid Sans Mono", monospace;\n  --padding: 4px;\n  --spacing: 4px;\n  --widget-height: 20px;\n  --title-height: calc(var(--widget-height) + var(--spacing) * 1.25);\n  --name-width: 45%;\n  --slider-knob-width: 2px;\n  --slider-input-width: 27%;\n  --color-input-width: 27%;\n  --slider-input-min-width: 45px;\n  --color-input-min-width: 45px;\n  --folder-indent: 7px;\n  --widget-padding: 0 0 0 3px;\n  --widget-border-radius: 2px;\n  --checkbox-size: calc(0.75 * var(--widget-height));\n  --scrollbar-width: 5px;\n}\n.lil-gui, .lil-gui * {\n  box-sizing: border-box;\n  margin: 0;\n  padding: 0;\n}\n.lil-gui.root {\n  width: var(--width, 245px);\n  display: flex;\n  flex-direction: column;\n  background: var(--background-color);\n}\n.lil-gui.root > .title {\n  background: var(--title-background-color);\n  color: var(--title-text-color);\n}\n.lil-gui.root > .children {\n  overflow-x: hidden;\n  overflow-y: auto;\n}\n.lil-gui.root > .children::-webkit-scrollbar {\n  width: var(--scrollbar-width);\n  height: var(--scrollbar-width);\n  background: var(--background-color);\n}\n.lil-gui.root > .children::-webkit-scrollbar-thumb {\n  border-radius: var(--scrollbar-width);\n  background: var(--focus-color);\n}\n@media (pointer: coarse) {\n  .lil-gui.allow-touch-styles, .lil-gui.allow-touch-styles .lil-gui {\n    --widget-height: 28px;\n    --padding: 6px;\n    --spacing: 6px;\n    --font-size: 13px;\n    --input-font-size: 16px;\n    --folder-indent: 10px;\n    --scrollbar-width: 7px;\n    --slider-input-min-width: 50px;\n    --color-input-min-width: 65px;\n  }\n}\n.lil-gui.force-touch-styles, .lil-gui.force-touch-styles .lil-gui {\n  --widget-height: 28px;\n  --padding: 6px;\n  --spacing: 6px;\n  --font-size: 13px;\n  --input-font-size: 16px;\n  --folder-indent: 10px;\n  --scrollbar-width: 7px;\n  --slider-input-min-width: 50px;\n  --color-input-min-width: 65px;\n}\n.lil-gui.autoPlace {\n  max-height: 100%;\n  position: fixed;\n  top: 0;\n  right: 15px;\n  z-index: 1001;\n}\n\n.lil-gui .controller {\n  display: flex;\n  align-items: center;\n  padding: 0 var(--padding);\n  margin: var(--spacing) 0;\n}\n.lil-gui .controller.disabled {\n  opacity: 0.5;\n}\n.lil-gui .controller.disabled, .lil-gui .controller.disabled * {\n  pointer-events: none !important;\n}\n.lil-gui .controller > .name {\n  min-width: var(--name-width);\n  flex-shrink: 0;\n  white-space: pre;\n  padding-right: var(--spacing);\n  line-height: var(--widget-height);\n}\n.lil-gui .controller .widget {\n  position: relative;\n  display: flex;\n  align-items: center;\n  width: 100%;\n  min-height: var(--widget-height);\n}\n.lil-gui .controller.string input {\n  color: var(--string-color);\n}\n.lil-gui .controller.boolean {\n  cursor: pointer;\n}\n.lil-gui .controller.color .display {\n  width: 100%;\n  height: var(--widget-height);\n  border-radius: var(--widget-border-radius);\n  position: relative;\n}\n@media (hover: hover) {\n  .lil-gui .controller.color .display:hover:before {\n    content: " ";\n    display: block;\n    position: absolute;\n    border-radius: var(--widget-border-radius);\n    border: 1px solid #fff9;\n    top: 0;\n    right: 0;\n    bottom: 0;\n    left: 0;\n  }\n}\n.lil-gui .controller.color input[type=color] {\n  opacity: 0;\n  width: 100%;\n  height: 100%;\n  cursor: pointer;\n}\n.lil-gui .controller.color input[type=text] {\n  margin-left: var(--spacing);\n  font-family: var(--font-family-mono);\n  min-width: var(--color-input-min-width);\n  width: var(--color-input-width);\n  flex-shrink: 0;\n}\n.lil-gui .controller.option select {\n  opacity: 0;\n  position: absolute;\n  width: 100%;\n  max-width: 100%;\n}\n.lil-gui .controller.option .display {\n  position: relative;\n  pointer-events: none;\n  border-radius: var(--widget-border-radius);\n  height: var(--widget-height);\n  line-height: var(--widget-height);\n  max-width: 100%;\n  overflow: hidden;\n  word-break: break-all;\n  padding-left: 0.55em;\n  padding-right: 1.75em;\n  background: var(--widget-color);\n}\n@media (hover: hover) {\n  .lil-gui .controller.option .display.focus {\n    background: var(--focus-color);\n  }\n}\n.lil-gui .controller.option .display.active {\n  background: var(--focus-color);\n}\n.lil-gui .controller.option .display:after {\n  font-family: "lil-gui";\n  content: "↕";\n  position: absolute;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  padding-right: 0.375em;\n}\n.lil-gui .controller.option .widget,\n.lil-gui .controller.option select {\n  cursor: pointer;\n}\n@media (hover: hover) {\n  .lil-gui .controller.option .widget:hover .display {\n    background: var(--hover-color);\n  }\n}\n.lil-gui .controller.number input {\n  color: var(--number-color);\n}\n.lil-gui .controller.number.hasSlider input {\n  margin-left: var(--spacing);\n  width: var(--slider-input-width);\n  min-width: var(--slider-input-min-width);\n  flex-shrink: 0;\n}\n.lil-gui .controller.number .slider {\n  width: 100%;\n  height: var(--widget-height);\n  background: var(--widget-color);\n  border-radius: var(--widget-border-radius);\n  padding-right: var(--slider-knob-width);\n  overflow: hidden;\n  cursor: ew-resize;\n  touch-action: pan-y;\n}\n@media (hover: hover) {\n  .lil-gui .controller.number .slider:hover {\n    background: var(--hover-color);\n  }\n}\n.lil-gui .controller.number .slider.active {\n  background: var(--focus-color);\n}\n.lil-gui .controller.number .slider.active .fill {\n  opacity: 0.95;\n}\n.lil-gui .controller.number .fill {\n  height: 100%;\n  border-right: var(--slider-knob-width) solid var(--number-color);\n  box-sizing: content-box;\n}\n\n.lil-gui-dragging .lil-gui {\n  --hover-color: var(--widget-color);\n}\n.lil-gui-dragging * {\n  cursor: ew-resize !important;\n}\n\n.lil-gui-dragging.lil-gui-vertical * {\n  cursor: ns-resize !important;\n}\n\n.lil-gui .title {\n  height: var(--title-height);\n  line-height: calc(var(--title-height) - 4px);\n  font-weight: 600;\n  padding: 0 var(--padding);\n  -webkit-tap-highlight-color: transparent;\n  cursor: pointer;\n  outline: none;\n  text-decoration-skip: objects;\n}\n.lil-gui .title:before {\n  font-family: "lil-gui";\n  content: "▾";\n  padding-right: 2px;\n  display: inline-block;\n}\n.lil-gui .title:active {\n  background: var(--title-background-color);\n  opacity: 0.75;\n}\n@media (hover: hover) {\n  body:not(.lil-gui-dragging) .lil-gui .title:hover {\n    background: var(--title-background-color);\n    opacity: 0.85;\n  }\n  .lil-gui .title:focus {\n    text-decoration: underline var(--focus-color);\n  }\n}\n.lil-gui.root > .title:focus {\n  text-decoration: none !important;\n}\n.lil-gui.closed > .title:before {\n  content: "▸";\n}\n.lil-gui.closed > .children {\n  transform: translateY(-7px);\n  opacity: 0;\n}\n.lil-gui.closed:not(.transition) > .children {\n  display: none;\n}\n.lil-gui.transition > .children {\n  transition-duration: 300ms;\n  transition-property: height, opacity, transform;\n  transition-timing-function: cubic-bezier(0.2, 0.6, 0.35, 1);\n  overflow: hidden;\n  pointer-events: none;\n}\n.lil-gui .children:empty:before {\n  content: "Empty";\n  padding: 0 var(--padding);\n  margin: var(--spacing) 0;\n  display: block;\n  height: var(--widget-height);\n  font-style: italic;\n  line-height: var(--widget-height);\n  opacity: 0.5;\n}\n.lil-gui.root > .children > .lil-gui > .title {\n  border: 0 solid var(--widget-color);\n  border-width: 1px 0;\n  transition: border-color 300ms;\n}\n.lil-gui.root > .children > .lil-gui.closed > .title {\n  border-bottom-color: transparent;\n}\n.lil-gui + .controller {\n  border-top: 1px solid var(--widget-color);\n  margin-top: 0;\n  padding-top: var(--spacing);\n}\n.lil-gui .lil-gui .lil-gui > .title {\n  border: none;\n}\n.lil-gui .lil-gui .lil-gui > .children {\n  border: none;\n  margin-left: var(--folder-indent);\n  border-left: 2px solid var(--widget-color);\n}\n.lil-gui .lil-gui .controller {\n  border: none;\n}\n\n.lil-gui label, .lil-gui input, .lil-gui button {\n  -webkit-tap-highlight-color: transparent;\n}\n.lil-gui input {\n  border: 0;\n  outline: none;\n  font-family: var(--font-family);\n  font-size: var(--input-font-size);\n  border-radius: var(--widget-border-radius);\n  height: var(--widget-height);\n  background: var(--widget-color);\n  color: var(--text-color);\n  width: 100%;\n}\n@media (hover: hover) {\n  .lil-gui input:hover {\n    background: var(--hover-color);\n  }\n  .lil-gui input:active {\n    background: var(--focus-color);\n  }\n}\n.lil-gui input:disabled {\n  opacity: 1;\n}\n.lil-gui input[type=text],\n.lil-gui input[type=number] {\n  padding: var(--widget-padding);\n  -moz-appearance: textfield;\n}\n.lil-gui input[type=text]:focus,\n.lil-gui input[type=number]:focus {\n  background: var(--focus-color);\n}\n.lil-gui input[type=checkbox] {\n  appearance: none;\n  width: var(--checkbox-size);\n  height: var(--checkbox-size);\n  border-radius: var(--widget-border-radius);\n  text-align: center;\n  cursor: pointer;\n}\n.lil-gui input[type=checkbox]:checked:before {\n  font-family: "lil-gui";\n  content: "✓";\n  font-size: var(--checkbox-size);\n  line-height: var(--checkbox-size);\n}\n@media (hover: hover) {\n  .lil-gui input[type=checkbox]:focus {\n    box-shadow: inset 0 0 0 1px var(--focus-color);\n  }\n}\n.lil-gui button {\n  outline: none;\n  cursor: pointer;\n  font-family: var(--font-family);\n  font-size: var(--font-size);\n  color: var(--text-color);\n  width: 100%;\n  height: var(--widget-height);\n  text-transform: none;\n  background: var(--widget-color);\n  border-radius: var(--widget-border-radius);\n  border: none;\n}\n@media (hover: hover) {\n  .lil-gui button:hover {\n    background: var(--hover-color);\n  }\n  .lil-gui button:focus {\n    box-shadow: inset 0 0 0 1px var(--focus-color);\n  }\n}\n.lil-gui button:active {\n  background: var(--focus-color);\n}\n\n@font-face {\n  font-family: "lil-gui";\n  src: url("data:application/font-woff;charset=utf-8;base64,d09GRgABAAAAAAUsAAsAAAAACJwAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAABHU1VCAAABCAAAAH4AAADAImwmYE9TLzIAAAGIAAAAPwAAAGBKqH5SY21hcAAAAcgAAAD0AAACrukyyJBnbHlmAAACvAAAAF8AAACEIZpWH2hlYWQAAAMcAAAAJwAAADZfcj2zaGhlYQAAA0QAAAAYAAAAJAC5AHhobXR4AAADXAAAABAAAABMAZAAAGxvY2EAAANsAAAAFAAAACgCEgIybWF4cAAAA4AAAAAeAAAAIAEfABJuYW1lAAADoAAAASIAAAIK9SUU/XBvc3QAAATEAAAAZgAAAJCTcMc2eJxVjbEOgjAURU+hFRBK1dGRL+ALnAiToyMLEzFpnPz/eAshwSa97517c/MwwJmeB9kwPl+0cf5+uGPZXsqPu4nvZabcSZldZ6kfyWnomFY/eScKqZNWupKJO6kXN3K9uCVoL7iInPr1X5baXs3tjuMqCtzEuagm/AAlzQgPAAB4nGNgYRBlnMDAysDAYM/gBiT5oLQBAwuDJAMDEwMrMwNWEJDmmsJwgCFeXZghBcjlZMgFCzOiKOIFAB71Bb8AeJy1kjFuwkAQRZ+DwRAwBtNQRUGKQ8OdKCAWUhAgKLhIuAsVSpWz5Bbkj3dEgYiUIszqWdpZe+Z7/wB1oCYmIoboiwiLT2WjKl/jscrHfGg/pKdMkyklC5Zs2LEfHYpjcRoPzme9MWWmk3dWbK9ObkWkikOetJ554fWyoEsmdSlt+uR0pCJR34b6t/TVg1SY3sYvdf8vuiKrpyaDXDISiegp17p7579Gp3p++y7HPAiY9pmTibljrr85qSidtlg4+l25GLCaS8e6rRxNBmsnERunKbaOObRz7N72ju5vdAjYpBXHgJylOAVsMseDAPEP8LYoUHicY2BiAAEfhiAGJgZWBgZ7RnFRdnVJELCQlBSRlATJMoLV2DK4glSYs6ubq5vbKrJLSbGrgEmovDuDJVhe3VzcXFwNLCOILB/C4IuQ1xTn5FPilBTj5FPmBAB4WwoqAHicY2BkYGAA4sk1sR/j+W2+MnAzpDBgAyEMQUCSg4EJxAEAwUgFHgB4nGNgZGBgSGFggJMhDIwMqEAYAByHATJ4nGNgAIIUNEwmAABl3AGReJxjYAACIQYlBiMGJ3wQAEcQBEV4nGNgZGBgEGZgY2BiAAEQyQWEDAz/wXwGAAsPATIAAHicXdBNSsNAHAXwl35iA0UQXYnMShfS9GPZA7T7LgIu03SSpkwzYTIt1BN4Ak/gKTyAeCxfw39jZkjymzcvAwmAW/wgwHUEGDb36+jQQ3GXGot79L24jxCP4gHzF/EIr4jEIe7wxhOC3g2TMYy4Q7+Lu/SHuEd/ivt4wJd4wPxbPEKMX3GI5+DJFGaSn4qNzk8mcbKSR6xdXdhSzaOZJGtdapd4vVPbi6rP+cL7TGXOHtXKll4bY1Xl7EGnPtp7Xy2n00zyKLVHfkHBa4IcJ2oD3cgggWvt/V/FbDrUlEUJhTn/0azVWbNTNr0Ens8de1tceK9xZmfB1CPjOmPH4kitmvOubcNpmVTN3oFJyjzCvnmrwhJTzqzVj9jiSX911FjeAAB4nG3HMRKCMBBA0f0giiKi4DU8k0V2GWbIZDOh4PoWWvq6J5V8If9NVNQcaDhyouXMhY4rPTcG7jwYmXhKq8Wz+p762aNaeYXom2n3m2dLTVgsrCgFJ7OTmIkYbwIbC6vIB7WmFfAAAA==") format("woff");\n}';const n=document.querySelector("head link[rel=stylesheet], head style");n?document.head.insertBefore(e,n):document.head.appendChild(e)}(),f=!0),n?n.appendChild(this.domElement):e&&(this.domElement.classList.add("autoPlace"),document.body.appendChild(this.domElement)),i&&this.domElement.style.setProperty("--width",i+"px"),this._closeFolders=s}add(t,n,i,r,s){if(Object(i)===i)return new d(this,t,n,i);const o=t[n];switch(typeof o){case"number":return new u(this,t,n,i,r,s);case"boolean":return new e(this,t,n);case"string":return new p(this,t,n);case"function":return new l(this,t,n)}console.error("gui.add failed\n\tproperty:",n,"\n\tobject:",t,"\n\tvalue:",o)}addColor(t,e,n=1){return new c(this,t,e,n)}addFolder(t){const e=new g({parent:this,title:t});return this.root._closeFolders&&e.close(),e}load(t,e=!0){return t.controllers&&this.controllers.forEach((e=>{e instanceof l||e._name in t.controllers&&e.load(t.controllers[e._name])})),e&&t.folders&&this.folders.forEach((e=>{e._title in t.folders&&e.load(t.folders[e._title])})),this}save(t=!0){const e={controllers:{},folders:{}};return this.controllers.forEach((t=>{if(!(t instanceof l)){if(t._name in e.controllers)throw new Error(`Cannot save GUI with duplicate property "${t._name}"`);e.controllers[t._name]=t.save()}})),t&&this.folders.forEach((t=>{if(t._title in e.folders)throw new Error(`Cannot save GUI with duplicate folder "${t._title}"`);e.folders[t._title]=t.save()})),e}open(t=!0){return this._setClosed(!t),this.$title.setAttribute("aria-expanded",!this._closed),this.domElement.classList.toggle("closed",this._closed),this}close(){return this.open(!1)}_setClosed(t){this._closed!==t&&(this._closed=t,this._callOnOpenClose(this))}show(t=!0){return this._hidden=!t,this.domElement.style.display=this._hidden?"none":"",this}hide(){return this.show(!1)}openAnimated(t=!0){return this._setClosed(!t),this.$title.setAttribute("aria-expanded",!this._closed),requestAnimationFrame((()=>{const e=this.$children.clientHeight;this.$children.style.height=e+"px",this.domElement.classList.add("transition");const n=t=>{t.target===this.$children&&(this.$children.style.height="",this.domElement.classList.remove("transition"),this.$children.removeEventListener("transitionend",n))};this.$children.addEventListener("transitionend",n);const i=t?this.$children.scrollHeight:0;this.domElement.classList.toggle("closed",!t),requestAnimationFrame((()=>{this.$children.style.height=i+"px"}))})),this}title(t){return this._title=t,this.$title.textContent=t,this}reset(t=!0){return(t?this.controllersRecursive():this.controllers).forEach((t=>t.reset())),this}onChange(t){return this._onChange=t,this}_callOnChange(t){this.parent&&this.parent._callOnChange(t),void 0!==this._onChange&&this._onChange.call(this,{object:t.object,property:t.property,value:t.getValue(),controller:t})}onFinishChange(t){return this._onFinishChange=t,this}_callOnFinishChange(t){this.parent&&this.parent._callOnFinishChange(t),void 0!==this._onFinishChange&&this._onFinishChange.call(this,{object:t.object,property:t.property,value:t.getValue(),controller:t})}onOpenClose(t){return this._onOpenClose=t,this}_callOnOpenClose(t){this.parent&&this.parent._callOnOpenClose(t),void 0!==this._onOpenClose&&this._onOpenClose.call(this,t)}destroy(){this.parent&&(this.parent.children.splice(this.parent.children.indexOf(this),1),this.parent.folders.splice(this.parent.folders.indexOf(this),1)),this.domElement.parentElement&&this.domElement.parentElement.removeChild(this.domElement),Array.from(this.children).forEach((t=>t.destroy()))}controllersRecursive(){let t=Array.from(this.controllers);return this.folders.forEach((e=>{t=t.concat(e.controllersRecursive())})),t}foldersRecursive(){let t=Array.from(this.folders);return this.folders.forEach((e=>{t=t.concat(e.foldersRecursive())})),t}}const m=g;class y{constructor(){}static GetWebGL2Context(t){return t.getContext("webgl2")||(console.log("WebGL 2.0 is not supported on this device or browser! Please use another browser or device."),void alert("WebGL 2.0 is not supported on this device or browser! Please use another browser or device."))}static CreateStaticVbo(t,e){const n=t.createBuffer();return t.bindBuffer(t.ARRAY_BUFFER,n),t.bufferData(t.ARRAY_BUFFER,new Float32Array(e),t.STATIC_DRAW),t.bindBuffer(t.ARRAY_BUFFER,null),n}static CreateSquareVbo(t){return y.CreateStaticVbo(t,y.SQUARE)}static LinkProgram(t,e){if(t.linkProgram(e),!1===t.getProgramParameter(e,t.LINK_STATUS)){const n=t.getProgramInfoLog(e);console.log(`Link Program Error\n${n}`)}t.useProgram(e)}static AttachShader(t,e,n,i){const r=t.createShader(i);t.shaderSource(r,e),t.compileShader(r),!1===t.getShaderParameter(r,t.COMPILE_STATUS)&&console.log(`Shader Compilation Error\n${t.getShaderInfoLog(r)}`),t.attachShader(n,r)}static CreateTexture(t,e,n,i,r,s){const o=t.createTexture();return t.bindTexture(t.TEXTURE_2D,o),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_MAG_FILTER,t.LINEAR),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_MIN_FILTER,t.LINEAR),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_WRAP_S,t.CLAMP_TO_EDGE),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_WRAP_T,t.CLAMP_TO_EDGE),t.texImage2D(t.TEXTURE_2D,0,i,e,n,0,r,s,null),t.bindTexture(t.TEXTURE_2D,null),o}static CreateRGBTexture(t,e,n,i){return y.CreateTexture(t,e,n,t.RGB,t.RGB,i)}static CreateRGBUnsignedByteTexture(t,e,n){return y.CreateRGBTexture(t,e,n,t.UNSIGNED_BYTE)}static CreateRGBFloatTexture(t,e,n){return y.CreateRGBTexture(t,e,n,t.FLOAT)}static CreateRGBUnsignedByteTextures(t,e,n,i){const r=[];for(let s=0;s<i;s++)r.push(y.CreateRGBUnsignedByteTexture(t,e,n));return r}static CreateRGBAUnsignedByteTexture(t,e,n){return y.CreateTexture(t,e,n,t.RGBA,t.RGBA,t.UNSIGNED_BYTE)}static CreateRGBAUnsignedByteImageTexture(t,e,n,i){const r=t.createTexture();return t.bindTexture(t.TEXTURE_2D,r),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_MAG_FILTER,t.LINEAR),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_MIN_FILTER,t.LINEAR),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_WRAP_S,t.CLAMP_TO_EDGE),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_WRAP_T,t.CLAMP_TO_EDGE),t.texImage2D(t.TEXTURE_2D,0,t.RGBA,e,n,0,t.RGBA,t.UNSIGNED_BYTE,i),t.bindTexture(t.TEXTURE_2D,null),r}static CreateRGBAUnsignedByteTextures(t,e,n,i){const r=[];for(let s=0;s<i;s++)r.push(y.CreateRGBAUnsignedByteTexture(t,e,n));return r}static CreateRGBAFloatTexture(t,e,n){return y.CreateTexture(t,e,n,t.RGBA16F,t.RGBA,t.FLOAT)}static CreateRGBAFloatTextures(t,e,n,i){const r=[];for(let s=0;s<i;s++)r.push(y.CreateRGBAFloatTexture(t,e,n));return r}static get SQUARE(){return[-1,-1,-1,1,1,-1,1,1]}}class v{video;isPlayingVideo;texture;width;height;textures=new Array(5);frames=new Array(5);updateTimeMillis=0;frameDelayMillis=0;constructor(){this.video=document.createElement("video")}connectToCamera(t){navigator.mediaDevices.getUserMedia?navigator.mediaDevices.getUserMedia({video:!0,audio:!1}).then((e=>{this.video.srcObject=e;const n=()=>{this.video.play(),this.isPlayingVideo=!0,this.width=this.video.videoWidth,this.height=this.video.videoHeight,this.texture=y.CreateRGBUnsignedByteTextures(t,this.video.videoWidth,this.video.videoHeight,1)[0],this.textures=y.CreateRGBUnsignedByteTextures(t,this.video.videoWidth,this.video.videoHeight,5),this.video.removeEventListener("canplay",n)};this.video.addEventListener("canplay",n)}),(t=>{console.error(t)})):console.error("getUserMedia is not supported.")}async updateTexture(t){if(this.isPlayingVideo){const e=await createImageBitmap(this.video);if(t.activeTexture(t.TEXTURE0),t.bindTexture(t.TEXTURE_2D,this.texture),t.texImage2D(t.TEXTURE_2D,0,t.RGBA,t.RGBA,t.UNSIGNED_BYTE,e),0===this.updateTimeMillis){for(let n=0;n<this.textures.length;n++)t.activeTexture(t.TEXTURE0+n+1),t.bindTexture(t.TEXTURE_2D,this.textures[n]),t.texImage2D(t.TEXTURE_2D,0,t.RGBA,t.RGBA,t.UNSIGNED_BYTE,e),this.frames[n]=await createImageBitmap(this.video);this.updateTimeMillis=Date.now()}else if(Date.now()-this.updateTimeMillis>this.frameDelayMillis){for(let t=this.textures.length;t>=1;t--)this.frames[t]=this.frames[t-1];this.frames[0]=e;for(let e=0;e<this.textures.length;e++)t.activeTexture(t.TEXTURE0+e+1),t.bindTexture(t.TEXTURE_2D,this.textures[e]),t.texImage2D(t.TEXTURE_2D,0,t.RGBA,this.width,this.height,0,t.RGBA,t.UNSIGNED_BYTE,this.frames[e]);this.updateTimeMillis=Date.now()}}}}class _{x;y;constructor(t,e){this.x=t,this.y=e}add(t){return new _(this.x+t.x,this.y+t.y)}sub(t){return new _(this.x-t.x,this.y-t.y)}prod(t){return new _(this.x*t.x,this.y*t.y)}div(t){return new _(this.x/t.x,this.y/t.y)}scale(t){return new _(this.x*t,this.y*t)}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}lengthSq(){return this.x*this.x+this.y*this.y}normalize(){return this.scale(1/this.length())}eq(t){return Math.abs(this.x-t.x)<=_.EPSILON&&Math.abs(this.y-t.y)<=_.EPSILON}cloneDeeply(){return new _(this.x,this.y)}static normalize(t){return t.normalize()}static dot(t,e){return t.x*e.x+t.y*e.y}static distance(t,e){const n=t.sub(e);return Math.sqrt(n.x*n.x+n.y*n.y)}static get EPSILON(){return 1e-5}getUniformArray(){return[this.x,this.y]}get xx(){return new _(this.x,this.x)}get yy(){return new _(this.y,this.y)}get xy(){return new _(this.x,this.y)}get yx(){return new _(this.y,this.x)}}class A{x;y;z;constructor(t,e,n){this.x=t,this.y=e,this.z=n}add(t){return new A(this.x+t.x,this.y+t.y,this.z+t.z)}sub(t){return new A(this.x-t.x,this.y-t.y,this.z-t.z)}prod(t){return new A(this.x*t.x,this.y*t.y,this.z*t.z)}div(t){return new A(this.x/t.x,this.y/t.y,this.z/t.z)}scale(t){return new A(this.x*t,this.y*t,this.z*t)}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}normalize(){return this.scale(1/this.length())}static normalize(t){return t.normalize()}static dot(t,e){return t.x*e.x+t.y*e.y+t.z*e.z}static cross(t,e){return new A(t.y*e.z-t.z*e.y,t.z*e.x-t.x*e.z,t.x*e.y-t.y*e.x)}static distance(t,e){const n=t.sub(e);return Math.sqrt(n.x*n.x+n.y*n.y)}rotateAroundX(t){const e=Math.cos(t),n=Math.sin(t);return new A(this.x,e*this.y+-n*this.z,n*this.y+e*this.z)}rotateAroundY(t){const e=Math.cos(t),n=Math.sin(t);return new A(e*this.x+n*this.z,this.y,-n*this.x+e*this.z)}rotateAroundZ(t){const e=Math.cos(t),n=Math.sin(t);return new A(e*this.x-n*this.y,n*this.x+e*this.y,this.z)}}class b{center;r;constructor(t,e){this.center=t,this.r=e}invertOnPoint(t){const e=this.r*this.r,n=t.sub(this.center),i=n.lengthSq();return n.scale(e/i).add(this.center)}invertOnCircle(t){const e=t.r*Math.sqrt(2)/2,n=this.invertOnPoint(t.center.add(new _(e,e))),i=this.invertOnPoint(t.center.add(new _(-e,-e))),r=this.invertOnPoint(t.center.add(new _(e,-e)));return b.fromPoints(n,i,r)}static getIntersection(t,e){const n=t.center.sub(e.center),i=_.dot(n,n),r=(i+e.r*e.r-t.r*t.r)/2,s=r*r;if(i*e.r*e.r-s<0)throw new Error("Unable to compute intersections");const o=Math.sqrt(i*e.r*e.r-s);return[new _((r*n.x+n.y*o)/i+e.center.x,(r*n.y-n.x*o)/i+e.center.y),new _((r*n.x-n.y*o)/i+e.center.x,(r*n.y+n.x*o)/i+e.center.y)]}static fromPoints(t,e,n){const i=_.distance(e,n),r=_.distance(t,n),s=_.distance(t,e),o=i*i*(r*r+s*s-i*i),a=r*r*(i*i+s*s-r*r),h=s*s*(i*i+r*r-s*s),c=o+a+h,l=new _((o*t.x+a*e.x+h*n.x)/c,(o*t.y+a*e.y+h*n.y)/c),u=_.distance(l,t);return new b(l,u)}}class w{constructor(){}static project(t){const e=_.dot(t,t);return new A(2*t.x/(1+e),2*t.y/(1+e),(-1+e)/(1+e))}static reverseProject(t){return new _(t.x/(1-t.z),t.y/(1-t.z))}}class E{isect1;isect2;corner;bendX=0;bendY=0;constructor(){this.circle1=new b(new _(1.2631,0),.771643),this.circle2=new b(new _(0,1.2631),.771643),this.compute()}compute(){this.x=.57735,this.y=.57735;const t=[1,0,0,0,Math.cos(this.bendX),Math.sin(this.bendX),0,Math.sin(this.bendX),Math.cos(this.bendX)],e=[Math.cos(this.bendY),0,Math.sin(this.bendY),0,1,0,-Math.sin(this.bendY),0,Math.cos(this.bendY)];if(this.c1=this.computeCircleFromUpperAndLower(this.applyMat3(t,new A(0,this.y,Math.sqrt(1-this.y*this.y))),this.applyMat3(t,new A(0,this.y,-Math.sqrt(1-this.y*this.y)))),this.c2=this.computeCircleFromUpperAndLower(this.applyMat3(e,new A(this.x,0,Math.sqrt(1-this.x*this.x))),this.applyMat3(e,new A(this.x,0,-Math.sqrt(1-this.x*this.x)))),[this.isect1,this.isect2]=b.getIntersection(this.c1,this.c2),this.isect1.x>this.isect2.x){const t=new _(this.isect1.x,this.isect1.y);this.isect1=this.isect2,this.isect2=t}this.corner=this.isect1.length()<this.isect2.length()?this.isect1:this.isect2}computeCircleFromUpperAndLower(t,e){const n=w.reverseProject(t),i=w.reverseProject(e);return new b(n.add(i).scale(.5),.5*_.distance(n,i))}applyMat3(t,e){return new A(e.x*t[0]+e.y*t[1]+e.z*t[2],e.x*t[3]+e.y*t[4]+e.z*t[5],e.x*t[6]+e.y*t[7]+e.z*t[8])}}var x="undefined"!=typeof self?self:{};function T(t){t:{for(var e=["CLOSURE_FLAGS"],n=x,i=0;i<e.length;i++)if(null==(n=n[e[i]])){e=null;break t}e=n}return null!=(t=e&&e[t])&&t}function k(){throw Error("Invalid UTF8")}function L(t,e){return e=String.fromCharCode.apply(null,e),null==t?e:t+e}let S,C;const R="undefined"!=typeof TextDecoder;let M;const F="undefined"!=typeof TextEncoder;function D(t){if(F)t=(M||=new TextEncoder).encode(t);else{let n=0;const i=new Uint8Array(3*t.length);for(let r=0;r<t.length;r++){var e=t.charCodeAt(r);if(128>e)i[n++]=e;else{if(2048>e)i[n++]=e>>6|192;else{if(55296<=e&&57343>=e){if(56319>=e&&r<t.length){const s=t.charCodeAt(++r);if(56320<=s&&57343>=s){e=1024*(e-55296)+s-56320+65536,i[n++]=e>>18|240,i[n++]=e>>12&63|128,i[n++]=e>>6&63|128,i[n++]=63&e|128;continue}r--}e=65533}i[n++]=e>>12|224,i[n++]=e>>6&63|128}i[n++]=63&e|128}}t=n===i.length?i:i.subarray(0,n)}return t}var I,P=T(610401301),O=T(188588736);const U=x.navigator;function B(t){return!!P&&!!I&&I.brands.some((({brand:e})=>e&&-1!=e.indexOf(t)))}function N(t){var e;return(e=x.navigator)&&(e=e.userAgent)||(e=""),-1!=e.indexOf(t)}function G(){return!!P&&!!I&&0<I.brands.length}function $(){return G()?B("Chromium"):(N("Chrome")||N("CriOS"))&&!(!G()&&N("Edge"))||N("Silk")}I=U&&U.userAgentData||null;var z=!G()&&(N("Trident")||N("MSIE"));!N("Android")||$(),$(),N("Safari")&&($()||!G()&&N("Coast")||!G()&&N("Opera")||!G()&&N("Edge")||(G()?B("Microsoft Edge"):N("Edg/"))||G()&&B("Opera"));var V={},j=null;function X(){if(!j){j={};for(var t="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789".split(""),e=["+/=","+/","-_=","-_.","-_"],n=0;5>n;n++){var i=t.concat(e[n].split(""));V[n]=i;for(var r=0;r<i.length;r++){var s=i[r];void 0===j[s]&&(j[s]=r)}}}}var H="undefined"!=typeof Uint8Array,W=!z&&"function"==typeof btoa;function Y(t){if(!W){var e;void 0===e&&(e=0),X(),e=V[e];var n=Array(Math.floor(t.length/3)),i=e[64]||"";let h=0,c=0;for(;h<t.length-2;h+=3){var r=t[h],s=t[h+1],o=t[h+2],a=e[r>>2];r=e[(3&r)<<4|s>>4],s=e[(15&s)<<2|o>>6],o=e[63&o],n[c++]=a+r+s+o}switch(a=0,o=i,t.length-h){case 2:o=e[(15&(a=t[h+1]))<<2]||i;case 1:t=t[h],n[c]=e[t>>2]+e[(3&t)<<4|a>>4]+o+i}return n.join("")}for(e="",n=0,i=t.length-10240;n<i;)e+=String.fromCharCode.apply(null,t.subarray(n,n+=10240));return e+=String.fromCharCode.apply(null,n?t.subarray(n):t),btoa(e)}const K=/[-_.]/g,q={"-":"+",_:"/",".":"="};function J(t){return q[t]||""}function Z(t){if(!W)return function(t){var e=t.length,n=3*e/4;n%3?n=Math.floor(n):-1!="=.".indexOf(t[e-1])&&(n=-1!="=.".indexOf(t[e-2])?n-2:n-1);var i=new Uint8Array(n),r=0;return function(t,e){function n(e){for(;i<t.length;){var n=t.charAt(i++),r=j[n];if(null!=r)return r;if(!/^[\s\xa0]*$/.test(n))throw Error("Unknown base64 encoding at char: "+n)}return e}X();for(var i=0;;){var r=n(-1),s=n(0),o=n(64),a=n(64);if(64===a&&-1===r)break;e(r<<2|s>>4),64!=o&&(e(s<<4&240|o>>2),64!=a&&e(o<<6&192|a))}}(t,(function(t){i[r++]=t})),r!==n?i.subarray(0,r):i}(t);K.test(t)&&(t=t.replace(K,J)),t=atob(t);const e=new Uint8Array(t.length);for(let n=0;n<t.length;n++)e[n]=t.charCodeAt(n);return e}function Q(t){return H&&null!=t&&t instanceof Uint8Array}let tt;function et(){return tt||=new Uint8Array(0)}var nt={};let it;function rt(t){if(t!==nt)throw Error("illegal external caller")}function st(){return it||=new at(null,nt)}function ot(t){rt(nt);var e=t.g;return null==(e=null==e||Q(e)?e:"string"==typeof e?Z(e):null)?e:t.g=e}var at=class{constructor(t,e){if(rt(e),this.g=t,null!=t&&0===t.length)throw Error("ByteString should be constructed with non-empty values")}h(){const t=ot(this);return t?new Uint8Array(t):et()}};function ht(t,e){return Error(`Invalid wire type: ${t} (at position ${e})`)}function ct(){return Error("Failed to read varint, encoding is invalid.")}function lt(t,e){return Error(`Tried to read past the end of the data ${e} > ${t}`)}function ut(t){if("string"==typeof t)return{buffer:Z(t),N:!1};if(Array.isArray(t))return{buffer:new Uint8Array(t),N:!1};if(t.constructor===Uint8Array)return{buffer:t,N:!1};if(t.constructor===ArrayBuffer)return{buffer:new Uint8Array(t),N:!1};if(t.constructor===at)return{buffer:ot(t)||et(),N:!0};if(t instanceof Uint8Array)return{buffer:new Uint8Array(t.buffer,t.byteOffset,t.byteLength),N:!1};throw Error("Type not convertible to a Uint8Array, expected a Uint8Array, an ArrayBuffer, a base64 encoded string, a ByteString or an Array of numbers")}function dt(){return"function"==typeof BigInt}const pt="function"==typeof Uint8Array.prototype.slice;let ft,gt=0,mt=0;function yt(t){const e=0>t;let n=(t=Math.abs(t))>>>0;if(t=Math.floor((t-n)/4294967296),e){const[e,i]=Tt(n,t);t=i,n=e}gt=n>>>0,mt=t>>>0}function vt(t){const e=ft||=new DataView(new ArrayBuffer(8));e.setFloat32(0,+t,!0),mt=0,gt=e.getUint32(0,!0)}function _t(t,e){return 4294967296*e+(t>>>0)}function At(t,e){const n=2147483648&e;return n&&(e=~e>>>0,0==(t=1+~t>>>0)&&(e=e+1>>>0)),t=_t(t,e),n?-t:t}function bt(t,e){if(t>>>=0,2097151>=(e>>>=0))var n=""+(4294967296*e+t);else dt()?n=""+(BigInt(e)<<BigInt(32)|BigInt(t)):(t=(16777215&t)+6777216*(n=16777215&(t>>>24|e<<8))+6710656*(e=e>>16&65535),n+=8147497*e,e*=2,1e7<=t&&(n+=Math.floor(t/1e7),t%=1e7),1e7<=n&&(e+=Math.floor(n/1e7),n%=1e7),n=e+wt(n)+wt(t));return n}function wt(t){return t=String(t),"0000000".slice(t.length)+t}function Et(){var t=gt,e=mt;if(2147483648&e)if(dt())t=""+(BigInt(0|e)<<BigInt(32)|BigInt(t>>>0));else{const[n,i]=Tt(t,e);t="-"+bt(n,i)}else t=bt(t,e);return t}function xt(t){if(16>t.length)yt(Number(t));else if(dt())t=BigInt(t),gt=Number(t&BigInt(4294967295))>>>0,mt=Number(t>>BigInt(32)&BigInt(4294967295));else{const e=+("-"===t[0]);mt=gt=0;const n=t.length;for(let i=e,r=(n-e)%6+e;r<=n;i=r,r+=6){const e=Number(t.slice(i,r));mt*=1e6,gt=1e6*gt+e,4294967296<=gt&&(mt+=Math.trunc(gt/4294967296),mt>>>=0,gt>>>=0)}if(e){const[t,e]=Tt(gt,mt);gt=t,mt=e}}}function Tt(t,e){return e=~e,t?t=1+~t:e+=1,[t,e]}function kt(t,e){let n,i=0,r=0,s=0;const o=t.h;let a=t.g;do{n=o[a++],i|=(127&n)<<s,s+=7}while(32>s&&128&n);for(32<s&&(r|=(127&n)>>4),s=3;32>s&&128&n;s+=7)n=o[a++],r|=(127&n)<<s;if(It(t,a),128>n)return e(i>>>0,r>>>0);throw ct()}function Lt(t){let e=0,n=t.g;const i=n+10,r=t.h;for(;n<i;){const i=r[n++];if(e|=i,0==(128&i))return It(t,n),!!(127&e)}throw ct()}function St(t){const e=t.h;let n=t.g,i=e[n++],r=127&i;if(128&i&&(i=e[n++],r|=(127&i)<<7,128&i&&(i=e[n++],r|=(127&i)<<14,128&i&&(i=e[n++],r|=(127&i)<<21,128&i&&(i=e[n++],r|=i<<28,128&i&&128&e[n++]&&128&e[n++]&&128&e[n++]&&128&e[n++]&&128&e[n++])))))throw ct();return It(t,n),r}function Ct(t){return St(t)>>>0}function Rt(t){var e=t.h;const n=t.g,i=e[n],r=e[n+1],s=e[n+2];return e=e[n+3],It(t,t.g+4),(i<<0|r<<8|s<<16|e<<24)>>>0}function Mt(t){var e=Rt(t);t=2*(e>>31)+1;const n=e>>>23&255;return e&=8388607,255==n?e?NaN:1/0*t:0==n?t*Math.pow(2,-149)*e:t*Math.pow(2,n-150)*(e+Math.pow(2,23))}function Ft(t){return St(t)}function Dt(t,e,{ca:n=!1}={}){t.ca=n,e&&(e=ut(e),t.h=e.buffer,t.m=e.N,t.j=0,t.l=t.h.length,t.g=t.j)}function It(t,e){if(t.g=e,e>t.l)throw lt(t.l,e)}function Pt(t,e){if(0>e)throw Error(`Tried to read a negative byte length: ${e}`);const n=t.g,i=n+e;if(i>t.l)throw lt(e,t.l-n);return t.g=i,n}function Ot(t,e){if(0==e)return st();var n=Pt(t,e);return t.ca&&t.m?n=t.h.subarray(n,n+e):(t=t.h,n=n===(e=n+e)?et():pt?t.slice(n,e):new Uint8Array(t.subarray(n,e))),0==n.length?st():new at(n,nt)}var Ut=[];function Bt(t){var e=t.g;if(e.g==e.l)return!1;t.l=t.g.g;var n=Ct(t.g);if(e=n>>>3,!(0<=(n&=7)&&5>=n))throw ht(n,t.l);if(1>e)throw Error(`Invalid field number: ${e} (at position ${t.l})`);return t.m=e,t.h=n,!0}function Nt(t){switch(t.h){case 0:0!=t.h?Nt(t):Lt(t.g);break;case 1:It(t=t.g,t.g+8);break;case 2:if(2!=t.h)Nt(t);else{var e=Ct(t.g);It(t=t.g,t.g+e)}break;case 5:It(t=t.g,t.g+4);break;case 3:for(e=t.m;;){if(!Bt(t))throw Error("Unmatched start-group tag: stream EOF");if(4==t.h){if(t.m!=e)throw Error("Unmatched end-group tag");break}Nt(t)}break;default:throw ht(t.h,t.l)}}function Gt(t,e,n){const i=t.g.l,r=Ct(t.g),s=t.g.g+r;let o=s-i;if(0>=o&&(t.g.l=s,n(e,t,void 0,void 0,void 0),o=s-t.g.g),o)throw Error(`Message parsing ended unexpectedly. Expected to read ${r} bytes, instead read ${r-o} bytes, either the data ended unexpectedly or the message misreported its own length`);return t.g.g=s,t.g.l=i,e}function $t(t){var e=Ct(t.g),n=Pt(t=t.g,e);if(t=t.h,R){var i,r=t;(i=C)||(i=C=new TextDecoder("utf-8",{fatal:!0})),e=n+e,r=0===n&&e===r.length?r:r.subarray(n,e);try{var s=i.decode(r)}catch(t){if(void 0===S){try{i.decode(new Uint8Array([128]))}catch(t){}try{i.decode(new Uint8Array([97])),S=!0}catch(t){S=!1}}throw!S&&(C=void 0),t}}else{e=(s=n)+e,n=[];let a,h=null;for(;s<e;){var o=t[s++];128>o?n.push(o):224>o?s>=e?k():(a=t[s++],194>o||128!=(192&a)?(s--,k()):n.push((31&o)<<6|63&a)):240>o?s>=e-1?k():(a=t[s++],128!=(192&a)||224===o&&160>a||237===o&&160<=a||128!=(192&(i=t[s++]))?(s--,k()):n.push((15&o)<<12|(63&a)<<6|63&i)):244>=o?s>=e-2?k():(a=t[s++],128!=(192&a)||0!=a-144+(o<<28)>>30||128!=(192&(i=t[s++]))||128!=(192&(r=t[s++]))?(s--,k()):(o=(7&o)<<18|(63&a)<<12|(63&i)<<6|63&r,o-=65536,n.push(55296+(o>>10&1023),56320+(1023&o)))):k(),8192<=n.length&&(h=L(h,n),n.length=0)}s=L(h,n)}return s}function zt(t){const e=Ct(t.g);return Ot(t.g,e)}function Vt(t,e,n){var i=Ct(t.g);for(i=t.g.g+i;t.g.g<i;)n.push(e(t.g))}var jt=[];function Xt(t){return t?/^\d+$/.test(t)?(xt(t),new Ht(gt,mt)):null:Wt||=new Ht(0,0)}var Ht=class{constructor(t,e){this.h=t>>>0,this.g=e>>>0}};let Wt;function Yt(t){return t?/^-?\d+$/.test(t)?(xt(t),new Kt(gt,mt)):null:qt||=new Kt(0,0)}var Kt=class{constructor(t,e){this.h=t>>>0,this.g=e>>>0}};let qt;function Jt(t,e,n){for(;0<n||127<e;)t.g.push(127&e|128),e=(e>>>7|n<<25)>>>0,n>>>=7;t.g.push(e)}function Zt(t,e){for(;127<e;)t.g.push(127&e|128),e>>>=7;t.g.push(e)}function Qt(t,e){if(0<=e)Zt(t,e);else{for(let n=0;9>n;n++)t.g.push(127&e|128),e>>=7;t.g.push(1)}}function te(t,e){t.g.push(e>>>0&255),t.g.push(e>>>8&255),t.g.push(e>>>16&255),t.g.push(e>>>24&255)}function ee(t,e){0!==e.length&&(t.l.push(e),t.h+=e.length)}function ne(t,e,n){Zt(t.g,8*e+n)}function ie(t,e){return ne(t,e,2),e=t.g.end(),ee(t,e),e.push(t.h),e}function re(t,e){var n=e.pop();for(n=t.h+t.g.length()-n;127<n;)e.push(127&n|128),n>>>=7,t.h++;e.push(n),t.h++}function se(t,e,n){ne(t,e,2),Zt(t.g,n.length),ee(t,t.g.end()),ee(t,n)}function oe(t,e,n,i){null!=n&&(e=ie(t,e),i(n,t),re(t,e))}class ae{constructor(t,e,n,i){this.g=t,this.h=e,this.l=n,this.pa=i}}function he(t){return Array.prototype.slice.call(t)}function ce(t){return"function"==typeof Symbol&&"symbol"==typeof Symbol()?Symbol():t}var le=ce(),ue=ce("0di"),de=le?(t,e)=>{t[le]|=e}:(t,e)=>{void 0!==t.g?t.g|=e:Object.defineProperties(t,{g:{value:e,configurable:!0,writable:!0,enumerable:!1}})},pe=le?(t,e)=>{t[le]&=~e}:(t,e)=>{void 0!==t.g&&(t.g&=~e)};function fe(t,e,n){return n?t|e:t&~e}var ge=le?t=>0|t[le]:t=>0|t.g,me=le?t=>t[le]:t=>t.g,ye=le?(t,e)=>(t[le]=e,t):(t,e)=>(void 0!==t.g?t.g=e:Object.defineProperties(t,{g:{value:e,configurable:!0,writable:!0,enumerable:!1}}),t);function ve(t){return de(t,34),t}function _e(t,e){ye(e,-14591&(0|t))}function Ae(t,e){ye(e,-14557&(34|t))}function be(t){return 0==(t=t>>14&1023)?536870912:t}var we,Ee={},xe={};function Te(t){return!(!t||"object"!=typeof t||t.Ja!==xe)}function ke(t){return null!==t&&"object"==typeof t&&!Array.isArray(t)&&t.constructor===Object}function Le(t,e,n){if(null!=t)if("string"==typeof t)t=t?new at(t,nt):st();else if(t.constructor!==at)if(Q(t))t=t.length?new at(n?t:new Uint8Array(t),nt):st();else{if(!e)throw Error();t=void 0}return t}function Se(t,e,n){if(!Array.isArray(t)||t.length)return!1;const i=ge(t);return!!(1&i)||!(!e||!(Array.isArray(e)?e.includes(n):e.has(n)))&&(ye(t,1|i),!0)}const Ce=[];function Re(t){if(2&t)throw Error()}ye(Ce,55),we=Object.freeze(Ce);class Me{constructor(t,e,n){this.l=0,this.g=t,this.h=e,this.m=n}next(){if(this.l<this.g.length){const t=this.g[this.l++];return{done:!1,value:this.h?this.h.call(this.m,t):t}}return{done:!0,value:void 0}}[Symbol.iterator](){return new Me(this.g,this.h,this.m)}}let Fe,De;function Ie(t,e){(e=Fe?e[Fe]:void 0)&&(t[Fe]=he(e))}function Pe(t){return(t=Error(t)).__closure__error__context__984382||(t.__closure__error__context__984382={}),t.__closure__error__context__984382.severity="warning",t}function Oe(t){return null==t||"number"==typeof t?t:"NaN"===t||"Infinity"===t||"-Infinity"===t?Number(t):void 0}function Ue(t){return null==t||"boolean"==typeof t?t:"number"==typeof t?!!t:void 0}Object.freeze(new class{}),Object.freeze(new class{});const Be=/^-?([1-9][0-9]*|0)(\.[0-9]+)?$/;function Ne(t){const e=typeof t;return"number"===e?Number.isFinite(t):"string"===e&&Be.test(t)}function Ge(t){if(null==t)return t;if("string"==typeof t){if(!t)return;t=+t}return"number"==typeof t&&Number.isFinite(t)?0|t:void 0}function $e(t){if(null==t)return t;if("string"==typeof t){if(!t)return;t=+t}return"number"==typeof t&&Number.isFinite(t)?t>>>0:void 0}function ze(t){return"-"!==t[0]&&(20>t.length||20===t.length&&184467>Number(t.substring(0,6)))}function Ve(t){return"-"===t[0]?20>t.length||20===t.length&&-922337<Number(t.substring(0,7)):19>t.length||19===t.length&&922337>Number(t.substring(0,6))}function je(t){return t=Math.trunc(t),Number.isSafeInteger(t)||(yt(t),t=At(gt,mt)),t}function Xe(t){var e=Math.trunc(Number(t));return Number.isSafeInteger(e)?String(e):(-1!==(e=t.indexOf("."))&&(t=t.substring(0,e)),Ve(t)||(xt(t),t=Et()),t)}function He(t){return null==t?t:Ne(t)?"number"==typeof t?je(t):Xe(t):void 0}function We(t){if("string"!=typeof t)throw Error();return t}function Ye(t){if(null!=t&&"string"!=typeof t)throw Error();return t}function Ke(t){return null==t||"string"==typeof t?t:void 0}function qe(t,e,n,i){if(null!=t&&"object"==typeof t&&t.X===Ee)return t;if(!Array.isArray(t))return n?2&i?(t=e[ue])?e=t:(ve((t=new e).u),e=e[ue]=t):e=new e:e=void 0,e;let r=n=ge(t);return 0===r&&(r|=32&i),r|=2&i,r!==n&&ye(t,r),new e(t)}function Je(t,e,n){if(e){var i=!!i;if(!Ne(e=t))throw Pe("int64");"string"==typeof e?i=Xe(e):i?(i=Math.trunc(e),Number.isSafeInteger(i)?i=String(i):Ve(e=String(i))?i=e:(yt(i),i=Et())):i=je(e)}else i=He(t);return"string"==typeof(n=null==(t=i)?n?0:void 0:t)&&(i=+n,Number.isSafeInteger(i))?i:n}let Ze,Qe,tn;function en(t){switch(typeof t){case"boolean":return Qe||=[0,void 0,!0];case"number":return 0<t?void 0:0===t?tn||=[0,void 0]:[-t,void 0];case"string":return[0,t];case"object":return t}}function nn(t,e){return rn(t,e[0],e[1])}function rn(t,e,n){if(null==t&&(t=Ze),Ze=void 0,null==t){var i=96;n?(t=[n],i|=512):t=[],e&&(i=-16760833&i|(1023&e)<<14)}else{if(!Array.isArray(t))throw Error();if(2048&(i=ge(t)))throw Error();if(64&i)return t;if(i|=64,n&&(i|=512,n!==t[0]))throw Error();t:{const r=(n=t).length;if(r){const t=r-1;if(ke(n[t])){if(1024<=(e=t-(+!!(512&(i|=256))-1)))throw Error();i=-16760833&i|(1023&e)<<14;break t}}if(e){if(1024<(e=Math.max(e,r-(+!!(512&i)-1))))throw Error();i=-16760833&i|(1023&e)<<14}}}return ye(t,i),t}const sn={};let on=function(){try{return new class extends Map{constructor(){super()}},!1}catch{return!0}}();class an{constructor(){this.g=new Map}get(t){return this.g.get(t)}set(t,e){return this.g.set(t,e),this.size=this.g.size,this}delete(t){return t=this.g.delete(t),this.size=this.g.size,t}clear(){this.g.clear(),this.size=this.g.size}has(t){return this.g.has(t)}entries(){return this.g.entries()}keys(){return this.g.keys()}values(){return this.g.values()}forEach(t,e){return this.g.forEach(t,e)}[Symbol.iterator](){return this.entries()}}const hn=on?(Object.setPrototypeOf(an.prototype,Map.prototype),Object.defineProperties(an.prototype,{size:{value:0,configurable:!0,enumerable:!0,writable:!0}}),an):class extends Map{constructor(){super()}};function cn(t){return t}function ln(t){if(2&t.L)throw Error("Cannot mutate an immutable Map")}var un=class extends hn{constructor(t,e,n=cn,i=cn){super();let r=ge(t);r|=64,ye(t,r),this.L=r,this.U=e,this.S=n,this.Z=this.U?dn:i;for(let s=0;s<t.length;s++){const o=t[s],a=n(o[0],!1,!0);let h=o[1];e?void 0===h&&(h=null):h=i(o[1],!1,!0,void 0,void 0,r),super.set(a,h)}}oa(t=pn){if(0!==this.size)return this.Y(t)}Y(t=pn){const e=[],n=super.entries();for(var i;!(i=n.next()).done;)(i=i.value)[0]=t(i[0]),i[1]=t(i[1]),e.push(i);return e}clear(){ln(this),super.clear()}delete(t){return ln(this),super.delete(this.S(t,!0,!1))}entries(){var t=this.na();return new Me(t,fn,this)}keys(){return this.Ia()}values(){var t=this.na();return new Me(t,un.prototype.get,this)}forEach(t,e){super.forEach(((n,i)=>{t.call(e,this.get(i),i,this)}))}set(t,e){return ln(this),null==(t=this.S(t,!0,!1))?this:null==e?(super.delete(t),this):super.set(t,this.Z(e,!0,!0,this.U,!1,this.L))}Oa(t){const e=this.S(t[0],!1,!0);t=t[1],t=this.U?void 0===t?null:t:this.Z(t,!1,!0,void 0,!1,this.L),super.set(e,t)}has(t){return super.has(this.S(t,!1,!1))}get(t){t=this.S(t,!1,!1);const e=super.get(t);if(void 0!==e){var n=this.U;return n?((n=this.Z(e,!1,!0,n,this.ta,this.L))!==e&&super.set(t,n),n):e}}na(){return Array.from(super.keys())}Ia(){return super.keys()}[Symbol.iterator](){return this.entries()}};function dn(t,e,n,i,r,s){return t=qe(t,i,n,s),r&&(t=xn(t)),t}function pn(t){return t}function fn(t){return[t,this.get(t)]}let gn;function mn(){return gn||=new un(ve([]),void 0,void 0,void 0,sn)}function yn(t,e,n,i,r){if(null!=t){if(Array.isArray(t))t=Se(t,void 0,0)?void 0:r&&2&ge(t)?t:vn(t,e,n,void 0!==i,r);else if(ke(t)){const s={};for(let o in t)s[o]=yn(t[o],e,n,i,r);t=s}else t=e(t,i);return t}}function vn(t,e,n,i,r){const s=i||n?ge(t):0;i=i?!!(32&s):void 0;const o=he(t);for(let t=0;t<o.length;t++)o[t]=yn(o[t],e,n,i,r);return n&&(Ie(o,t),n(s,o)),o}function _n(t){return yn(t,An,void 0,void 0,!1)}function An(t){return t.X===Ee?t.toJSON():t instanceof un?t.oa(_n):function(t){switch(typeof t){case"number":return isFinite(t)?t:String(t);case"boolean":return t?1:0;case"object":if(t)if(Array.isArray(t)){if(Se(t,void 0,0))return}else{if(Q(t))return Y(t);if(t instanceof at){const e=t.g;return null==e?"":"string"==typeof e?e:t.g=Y(e)}if(t instanceof un)return t.oa()}}return t}(t)}function bn(t,e,n=Ae){if(null!=t){if(H&&t instanceof Uint8Array)return e?t:new Uint8Array(t);if(Array.isArray(t)){var i=ge(t);return 2&i?t:(e&&=0===i||!!(32&i)&&!(64&i||!(16&i)),e?ye(t,-12293&(34|i)):vn(t,bn,4&i?Ae:n,!0,!0))}return t.X===Ee?(n=t.u,t=2&(i=me(n))?t:wn(t,n,i,!0)):t instanceof un&&!(2&t.L)&&(n=ve(t.Y(bn)),t=new un(n,t.U,t.S,t.Z)),t}}function wn(t,e,n,i){return t=t.constructor,Ze=e=En(e,n,i),e=new t(e),Ze=void 0,e}function En(t,e,n){const i=n||2&e?Ae:_e,r=!!(32&e);return t=function(t,e,n){const i=he(t);var r=i.length;const s=256&e?i[r-1]:void 0;for(r+=s?-1:0,e=512&e?1:0;e<r;e++)i[e]=n(i[e]);if(s){e=i[e]={};for(const t in s)e[t]=n(s[t])}return Ie(i,t),i}(t,e,(t=>bn(t,r,i))),de(t,32|(n?2:0)),t}function xn(t){const e=t.u,n=me(e);return 2&n?wn(t,e,n,!1):t}function Tn(t,e){return kn(t=t.u,me(t),e)}function kn(t,e,n,i){if(-1===n)return null;if(n>=be(e)){if(256&e)return t[t.length-1][n]}else{var r=t.length;if(i&&256&e&&null!=(i=t[r-1][n]))return i;if((e=n+(+!!(512&e)-1))<r)return t[e]}}function Ln(t,e,n,i){const r=t.u;let s=me(r);return Re(s),Sn(r,s,e,n,i),t}function Sn(t,e,n,i,r){const s=be(e);if(n>=s||r){let o=e;if(256&e)r=t[t.length-1];else{if(null==i)return o;r=t[s+(+!!(512&e)-1)]={},o|=256}return r[n]=i,n<s&&(t[n+(+!!(512&e)-1)]=void 0),o!==e&&ye(t,o),o}return t[n+(+!!(512&e)-1)]=i,256&e&&n in(t=t[t.length-1])&&delete t[n],e}function Cn(t,e,n,i,r){var s=2&e;let o=kn(t,e,n,r);Array.isArray(o)||(o=we);const a=!(2&i);i=!(1&i);const h=!!(32&e);let c=ge(o);return 0!==c||!h||s||a?1&c||(c|=1,ye(o,c)):(c|=33,ye(o,c)),s?(t=!1,2&c||(ve(o),t=!!(4&c)),(i||t)&&Object.freeze(o)):(s=!!(2&c)||!!(2048&c),i&&s?(o=he(o),i=1,h&&!a&&(i|=32),ye(o,i),Sn(t,e,n,o,r)):a&&32&c&&!s&&pe(o,32)),o}function Rn(t,e){t=t.u;let n=me(t);const i=kn(t,n,e),r=Oe(i);return null!=r&&r!==i&&Sn(t,n,e,r),r}function Mn(t){t=t.u;let e=me(t);const n=kn(t,e,1),i=Le(n,!0,!!(34&e));return null!=i&&i!==n&&Sn(t,e,1,i),i}function Fn(t,e,n){t=t.u;let i=me(t);const r=2&i?1:2;let s=Dn(t,i,e);var o=ge(s);if(!(4&o)){(4&o||Object.isFrozen(s))&&(s=he(s),o=qn(o,i,!1),i=Sn(t,i,e,s));var a=0;let r=0;for(;a<s.length;a++){const t=n(s[a]);null!=t&&(s[r++]=t)}r<a&&(s.length=r),o=fe(o=In(o,i,!1),20,!0),o=fe(o,4096,!1),o=fe(o,8192,!1),ye(s,o),2&o&&Object.freeze(s)}return Pn(o)||(n=o,(o=(a=1===r)?fe(o,2,!0):fe(o,32,!1))!==n&&ye(s,o),a&&Object.freeze(s)),2===r&&Pn(o)&&(s=he(s),o=qn(o,i,!1),ye(s,o),Sn(t,i,e,s)),s}function Dn(t,e,n){return t=kn(t,e,n),Array.isArray(t)?t:we}function In(t,e,n){return 0===t&&(t=qn(t,e,n)),fe(t,1,!0)}function Pn(t){return!!(2&t)&&!!(4&t)||!!(2048&t)}function On(t){t=he(t);for(let e=0;e<t.length;e++){const n=t[e]=he(t[e]);Array.isArray(n[1])&&(n[1]=ve(n[1]))}return t}function Un(t,e,n){{const o=t.u;let a=me(o);if(Re(a),null==n)Sn(o,a,e);else{var i,r=t=ge(n),s=!!(2&t)||Object.isFrozen(n);if((i=!s)&&(i=!1),!(4&t))for(t=21,s&&(n=he(n),r=0,t=qn(t,a,!0)),s=0;s<n.length;s++)n[s]=We(n[s]);i&&(n=he(n),r=0,t=qn(t,a,!0)),t!==r&&ye(n,t),Sn(o,a,e,n)}}}function Bn(t,e,n,i){t=t.u;let r=me(t);Re(r),Sn(t,r,e,("0"===i?0===Number(n):n===i)?void 0:n)}function Nn(t,e,n,i){const r=me(t);Re(r),t=Cn(t,r,e,2),i=n(i,!!(4&(e=ge(t)))&&!!(4096&e)),t.push(i)}function Gn(t){return t}function $n(t,e){return zn(t=t.u,me(t),Ps)===e?e:-1}function zn(t,e,n){let i=0;for(let r=0;r<n.length;r++){const s=n[r];null!=kn(t,e,s)&&(0!==i&&(e=Sn(t,e,i)),i=s)}return i}function Vn(t,e,n,i){let r=me(t);Re(r);const s=kn(t,r,n,i);let o;if(null!=s&&s.X===Ee)return(e=xn(s))!==s&&Sn(t,r,n,e,i),e.u;if(Array.isArray(s)){const t=ge(s);o=2&t?En(s,t,!1):s,o=nn(o,e)}else o=nn(void 0,e);return o!==s&&Sn(t,r,n,o,i),o}function jn(t,e,n,i){t=t.u;let r=me(t);const s=kn(t,r,n,i);return(e=qe(s,e,!1,r))!==s&&null!=e&&Sn(t,r,n,e,i),e}function Xn(t,e,n,i=!1){if(null==(e=jn(t,e,n,i)))return e;t=t.u;let r=me(t);if(!(2&r)){const s=xn(e);s!==e&&Sn(t,r,n,e=s,i)}return e}function Hn(t,e,n,i,r,s){var o=!!(2&e),a=o?1:2;const h=1===a;a=2===a,r=!!r,s&&=!o,o=Dn(t,e,i);var c=ge(o);const l=!!(4&c);if(!l){var u=o,d=e;const t=!!(2&(c=In(c,e,r)));t&&(d=fe(d,2,!0));let i=!t,s=!0,a=0,h=0;for(;a<u.length;a++){const e=qe(u[a],n,!1,d);if(e instanceof n){if(!t){const t=!!(2&ge(e.u));i&&=!t,s&&=t}u[h++]=e}}h<a&&(u.length=h),c=fe(c,4,!0),c=fe(c,16,s),c=fe(c,8,i),ye(u,c),t&&Object.freeze(u)}if(n=!!(8&c)||h&&!o.length,s&&!n){for(Pn(c)&&(o=he(o),c=qn(c,e,r),e=Sn(t,e,i,o)),s=o,n=c,u=0;u<s.length;u++)(c=s[u])!==(d=xn(c))&&(s[u]=d);n=fe(n,8,!0),n=fe(n,16,!s.length),ye(s,n),c=n}return Pn(c)||(s=c,h?c=fe(c,!o.length||16&c&&(!l||32&c)?2:2048,!0):r||(c=fe(c,32,!1)),c!==s&&ye(o,c),h&&Object.freeze(o)),a&&Pn(c)&&(o=he(o),c=qn(c,e,r),ye(o,c),Sn(t,e,i,o)),o}function Wn(t,e,n){t=t.u;const i=me(t);return Hn(t,i,e,n,!1,!(2&i))}function Yn(t,e,n,i,r){return null==i&&(i=void 0),Ln(t,n,i,r)}function Kn(t,e,n,i){null==i&&(i=void 0),t=t.u;let r=me(t);Re(r),(n=zn(t,r,n))&&n!==e&&null!=i&&(r=Sn(t,r,n)),Sn(t,r,e,i)}function qn(t,e,n){return t=fe(t,2,!!(2&e)),t=fe(t,32,!!(32&e)&&n),fe(t,2048,!1)}function Jn(t,e,n,i){t=t.u;const r=me(t);Re(r),e=Hn(t,r,n,e,!0),n=null!=i?i:new n,e.push(n),2&ge(n.u)?pe(e,8):pe(e,16)}function Zn(t,e){return Ge(Tn(t,e))}function Qn(t,e){return Ke(Tn(t,e))}function ti(t){return t??0}function ei(t,e){return ti(Rn(t,e))}function ni(t,e,n){if(null!=n&&"boolean"!=typeof n)throw t=typeof n,Error(`Expected boolean but got ${"object"!=t?t:n?Array.isArray(n)?"array":t:"null"}: ${n}`);Ln(t,e,n)}function ii(t,e,n){if(null!=n){if("number"!=typeof n)throw Pe("int32");if(!Number.isFinite(n))throw Pe("int32");n|=0}Ln(t,e,n)}function ri(t,e,n){if(null!=n&&"number"!=typeof n)throw Error(`Value of float/double field must be a number, found ${typeof n}: ${n}`);Ln(t,e,n)}function si(t,e,n){e.g?e.m(t,e.g,e.h,n,!0):e.m(t,e.h,n,!0)}un.prototype.toJSON=void 0,un.prototype.Ja=xe;var oi=class{constructor(t,e){this.u=rn(t,e)}toJSON(){return ai(this,vn(this.u,An,void 0,void 0,!1),!0)}l(){var t=No;return t.g?t.l(this,t.g,t.h,!0):t.l(this,t.h,t.defaultValue,!0)}clone(){const t=this.u;return wn(this,t,me(t),!1)}N(){return!!(2&ge(this.u))}};function ai(t,e,n){var i=O?void 0:t.constructor.A;const r=me(n?t.u:e);if(!(t=e.length))return e;let s,o;if(ke(n=e[t-1])){t:{var a=n;let t={},e=!1;for(var h in a){let n=a[h];if(Array.isArray(n)){let t=n;(Se(n,i,+h)||Te(n)&&0===n.size)&&(n=null),n!=t&&(e=!0)}null!=n?t[h]=n:e=!0}if(e){for(var c in t){a=t;break t}a=null}}a!=n&&(s=!0),t--}for(h=+!!(512&r)-1;0<t&&(n=e[c=t-1],c-=h,null==n||Se(n,i,c)||Te(n)&&0===n.size);t--)o=!0;return s||o?(e=Array.prototype.slice.call(e,0,t),a&&e.push(a),e):e}function hi(t){return Array.isArray(t)?t[0]instanceof ae?t:[cr,t]:[t,void 0]}function ci(t,e){if(Array.isArray(e)){var n=ge(e);if(4&n)return e;for(var i=0,r=0;i<e.length;i++){const n=t(e[i]);null!=n&&(e[r++]=n)}return r<i&&(e.length=r),ye(e,-12289&(5|n)),2&n&&Object.freeze(e),e}}oi.prototype.X=Ee,oi.prototype.toString=function(){return ai(this,this.u,!1).toString()};const li=Symbol();function ui(t){let e=t[li];if(!e){const n=_i(t),i=Mi(t),r=i.l;e=r?(t,e)=>r(t,e,i):(t,e)=>{for(;Bt(e)&&4!=e.h;){var r=e.m,s=i[r];if(!s){var o=i.ea;o&&(o=o[r])&&(s=i[r]=di(o))}s&&s(e,t,r)||(r=(s=e).l,Nt(s),s.ia?s=void 0:(o=s.g.g-r,s.g.g=r,s=Ot(s.g,o)),r=t,s&&(Fe||=Symbol(),(o=r[Fe])?o.push(s):r[Fe]=[s]))}n===fi||n===gi||n.j||(t[De||=Symbol()]=n)},t[li]=e}return e}function di(t){const e=(t=hi(t))[0].g;if(t=t[1]){const n=ui(t),i=Mi(t).T;return(t,r,s)=>e(t,r,s,i,n)}return e}class pi{}let fi,gi;const mi=Symbol();function yi(t,e,n){const i=n[1];let r;if(i){const n=i[mi];r=n?n.T:en(i[0]),t[e]=n??i}r&&r===Qe?(t.g||(t.g=new Set)).add(e):n[0]&&(t.h||(t.h=new Set)).add(e)}function vi(t,e){return[t.l,!e||0<e[0]?void 0:e]}function _i(t){var e=t[mi];if(e)return e;if(!(e=bi(t,t[mi]=new pi,vi,vi,yi)).ea&&!e.h&&!e.g){let n=!0;for(let t in e)isNaN(t)||(n=!1);n?(en(t[0])===Qe?gi?e=gi:((e=new pi).T=en(!0),e=gi=e):e=fi||=new pi,e=t[mi]=e):e.j=!0}return e}function Ai(t,e,n){t[e]=n}function bi(t,e,n,i,r=Ai){e.T=en(t[0]);let s=0;var o=t[++s];o&&o.constructor===Object&&(e.ea=o,"function"==typeof(o=t[++s])&&(e.l=o,e.m=t[++s],o=t[++s]));const a={};for(;Array.isArray(o)&&"number"==typeof o[0]&&0<o[0];){for(var h=0;h<o.length;h++)a[o[h]]=o;o=t[++s]}for(h=1;void 0!==o;){let u;"number"==typeof o&&(h+=o,o=t[++s]);var c=void 0;if(o instanceof ae?u=o:(u=lr,s--),u.pa){o=t[++s],c=t;var l=s;"function"==typeof o&&(o=o(),c[l]=o),c=o}for(l=h+1,"number"==typeof(o=t[++s])&&0>o&&(l-=o,o=t[++s]);h<l;h++){const t=a[h];r(e,h,c?i(u,c,t):n(u,t))}}return e}const wi=Symbol();function Ei(t){let e=t[wi];if(!e){const n=Li(t);e=(t,e)=>Ii(t,e,n),t[wi]=e}return e}const xi=Symbol();function Ti(t){return t.h}function ki(t,e){let n,i;const r=t.h;return(t,s,o)=>r(t,s,o,i||=Li(e).T,n||=Ei(e))}function Li(t){let e=t[xi];return e||(e=bi(t,t[xi]={},Ti,ki),Fi(t),e)}const Si=Symbol();function Ci(t,e){const n=t.g;return e?(t,i,r)=>n(t,i,r,e):n}function Ri(t,e,n){const i=t.g;let r,s;return(t,o,a)=>i(t,o,a,s||=Mi(e).T,r||=ui(e),n)}function Mi(t){let e=t[Si];return e||(_i(t),e=bi(t,t[Si]={},Ci,Ri),Fi(t),e)}function Fi(t){Si in t&&mi in t&&xi in t&&(t.length=0)}function Di(t,e){var n=t[e];if(n)return n;if((n=t.ea)&&(n=n[e])){var i=(n=hi(n))[0].h;if(n=n[1]){const e=Ei(n),r=Li(n).T;n=(n=t.m)?n(r,e):(t,n,s)=>i(t,n,s,r,e)}else n=i;return t[e]=n}}function Ii(t,e,n){for(var i=me(t),r=+!!(512&i)-1,s=t.length,o=512&i?1:0,a=s+(256&i?-1:0);o<a;o++){const i=t[o];if(null==i)continue;const s=o-r,a=Di(n,s);a&&a(e,i,s)}if(256&i){i=t[s-1];for(let t in i)r=+t,Number.isNaN(r)||null!=(s=i[t])&&(a=Di(n,r))&&a(e,s,r)}if(t=Fe?t[Fe]:void 0)for(ee(e,e.g.end()),n=0;n<t.length;n++)ee(e,ot(t[n])||et())}function Pi(t,e){return new ae(t,e,!1,!1)}function Oi(t,e){return new ae(t,e,!0,!1)}function Ui(t,e){return new ae(t,e,!1,!0)}function Bi(t,e,n){Sn(t,me(t),e,n)}var Ni=Ui((function(t,e,n,i,r){return 2===t.h&&(t=Gt(t,nn([void 0,void 0],i),r),Re(i=me(e)),(r=kn(e,i,n))instanceof un?0!=(2&r.L)?((r=r.Y()).push(t),Sn(e,i,n,r)):r.Oa(t):Array.isArray(r)?(2&ge(r)&&Sn(e,i,n,r=On(r)),r.push(t)):Sn(e,i,n,[t]),!0)}),(function(t,e,n,i,r){if(e instanceof un)e.forEach(((e,s)=>{oe(t,n,nn([s,e],i),r)}));else if(Array.isArray(e))for(let s=0;s<e.length;s++){const o=e[s];Array.isArray(o)&&oe(t,n,nn(o,i),r)}}));function Gi(t,e,n){t:if(null!=e){if(Ne(e)){if("string"==typeof e){e=Xe(e);break t}if("number"==typeof e){e=je(e);break t}}e=void 0}null!=e&&("string"==typeof e&&Yt(e),null!=e&&(ne(t,n,0),"number"==typeof e?(t=t.g,yt(e),Jt(t,gt,mt)):(n=Yt(e),Jt(t.g,n.h,n.g))))}function $i(t,e,n){null!=(e=Ge(e))&&null!=e&&(ne(t,n,0),Qt(t.g,e))}function zi(t,e,n){null!=(e=Ue(e))&&(ne(t,n,0),t.g.g.push(e?1:0))}function Vi(t,e,n){null!=(e=Ke(e))&&se(t,n,D(e))}function ji(t,e,n,i,r){oe(t,n,e instanceof oi?e.u:Array.isArray(e)?nn(e,i):void 0,r)}function Xi(t,e,n){null!=(e=null==e||"string"==typeof e||Q(e)||e instanceof at?e:void 0)&&se(t,n,ut(e).buffer)}function Hi(t,e,n){return(5===t.h||2===t.h)&&(e=Cn(e,me(e),n,2,!1),2==t.h?Vt(t,Mt,e):e.push(Mt(t.g)),!0)}var Wi,Yi=Pi((function(t,e,n){if(1!==t.h)return!1;var i=t.g;t=Rt(i);const r=Rt(i);i=2*(r>>31)+1;const s=r>>>20&2047;return t=4294967296*(1048575&r)+t,Bi(e,n,2047==s?t?NaN:1/0*i:0==s?i*Math.pow(2,-1074)*t:i*Math.pow(2,s-1075)*(t+4503599627370496)),!0}),(function(t,e,n){null!=(e=Oe(e))&&(ne(t,n,1),t=t.g,(n=ft||=new DataView(new ArrayBuffer(8))).setFloat64(0,+e,!0),gt=n.getUint32(0,!0),mt=n.getUint32(4,!0),te(t,gt),te(t,mt))})),Ki=Pi((function(t,e,n){return 5===t.h&&(Bi(e,n,Mt(t.g)),!0)}),(function(t,e,n){null!=(e=Oe(e))&&(ne(t,n,5),t=t.g,vt(e),te(t,gt))})),qi=Oi(Hi,(function(t,e,n){if(null!=(e=ci(Oe,e)))for(let o=0;o<e.length;o++){var i=t,r=n,s=e[o];null!=s&&(ne(i,r,5),i=i.g,vt(s),te(i,gt))}})),Ji=Oi(Hi,(function(t,e,n){if(null!=(e=ci(Oe,e))&&e.length){ne(t,n,2),Zt(t.g,4*e.length);for(let i=0;i<e.length;i++)n=t.g,vt(e[i]),te(n,gt)}})),Zi=Pi((function(t,e,n){return 0===t.h&&(Bi(e,n,kt(t.g,At)),!0)}),Gi),Qi=Pi((function(t,e,n){return 0===t.h&&(Bi(e,n,0===(t=kt(t.g,At))?void 0:t),!0)}),Gi),tr=Pi((function(t,e,n){return 0===t.h&&(Bi(e,n,kt(t.g,_t)),!0)}),(function(t,e,n){t:if(null!=e){if(Ne(e)){if("string"==typeof e){var i=Math.trunc(Number(e));Number.isSafeInteger(i)&&0<=i?e=String(i):(-1!==(i=e.indexOf("."))&&(e=e.substring(0,i)),ze(e)||(xt(e),e=bt(gt,mt)));break t}if("number"==typeof e){e=0<=(e=Math.trunc(e))&&Number.isSafeInteger(e)?e:function(t){if(0>t){yt(t);const e=bt(gt,mt);return t=Number(e),Number.isSafeInteger(t)?t:e}return ze(String(t))?t:(yt(t),_t(gt,mt))}(e);break t}}e=void 0}null!=e&&("string"==typeof e&&Xt(e),null!=e&&(ne(t,n,0),"number"==typeof e?(t=t.g,yt(e),Jt(t,gt,mt)):(n=Xt(e),Jt(t.g,n.h,n.g))))})),er=Pi((function(t,e,n){return 0===t.h&&(Bi(e,n,St(t.g)),!0)}),$i),nr=Oi((function(t,e,n){return(0===t.h||2===t.h)&&(e=Cn(e,me(e),n,2,!1),2==t.h?Vt(t,St,e):e.push(St(t.g)),!0)}),(function(t,e,n){if(null!=(e=ci(Ge,e))&&e.length){n=ie(t,n);for(let n=0;n<e.length;n++)Qt(t.g,e[n]);re(t,n)}})),ir=Pi((function(t,e,n){return 0===t.h&&(Bi(e,n,0===(t=St(t.g))?void 0:t),!0)}),$i),rr=Pi((function(t,e,n){return 0===t.h&&(Bi(e,n,Lt(t.g)),!0)}),zi),sr=Pi((function(t,e,n){return 0===t.h&&(Bi(e,n,!1===(t=Lt(t.g))?void 0:t),!0)}),zi),or=Oi((function(t,e,n){return 2===t.h&&(Nn(e,n,Gn,t=$t(t)),!0)}),(function(t,e,n){if(null!=(e=ci(Ke,e)))for(let o=0;o<e.length;o++){var i=t,r=n,s=e[o];null!=s&&se(i,r,D(s))}})),ar=Pi((function(t,e,n){return 2===t.h&&(Bi(e,n,""===(t=$t(t))?void 0:t),!0)}),Vi),hr=Pi((function(t,e,n){return 2===t.h&&(Bi(e,n,$t(t)),!0)}),Vi),cr=Ui((function(t,e,n,i,r){return 2===t.h&&(Gt(t,Vn(e,i,n,!0),r),!0)}),ji),lr=Ui((function(t,e,n,i,r){return 2===t.h&&(Gt(t,Vn(e,i,n),r),!0)}),ji);Wi=new ae((function(t,e,n,i,r){if(2!==t.h)return!1;i=nn(void 0,i);let s=me(e);Re(s);let o=Cn(e,s,n,3);return s=me(e),4&ge(o)&&(o=he(o),ye(o,-2079&(1|ge(o))),Sn(e,s,n,o)),o.push(i),Gt(t,i,r),!0}),(function(t,e,n,i,r){if(Array.isArray(e))for(let s=0;s<e.length;s++)ji(t,e[s],n,i,r)}),!0,!0);var ur=Ui((function(t,e,n,i,r,s){if(2!==t.h)return!1;let o=me(e);return Re(o),(s=zn(e,o,s))&&n!==s&&Sn(e,o,s),Gt(t,e=Vn(e,i,n),r),!0}),ji),dr=Pi((function(t,e,n){return 2===t.h&&(Bi(e,n,zt(t)),!0)}),Xi),pr=Oi((function(t,e,n){return(0===t.h||2===t.h)&&(e=Cn(e,me(e),n,2,!1),2==t.h?Vt(t,Ct,e):e.push(Ct(t.g)),!0)}),(function(t,e,n){if(null!=(e=ci($e,e)))for(let o=0;o<e.length;o++){var i=t,r=n,s=e[o];null!=s&&(ne(i,r,0),Zt(i.g,s))}})),fr=Pi((function(t,e,n){return 0===t.h&&(Bi(e,n,St(t.g)),!0)}),(function(t,e,n){null!=(e=Ge(e))&&(e=parseInt(e,10),ne(t,n,0),Qt(t.g,e))})),gr=Oi((function(t,e,n){return(0===t.h||2===t.h)&&(e=Cn(e,me(e),n,2,!1),2==t.h?Vt(t,Ft,e):e.push(St(t.g)),!0)}),(function(t,e,n){if(null!=(e=ci(Ge,e))&&e.length){n=ie(t,n);for(let n=0;n<e.length;n++)Qt(t.g,e[n]);re(t,n)}}));class mr{constructor(t,e){this.h=t,this.g=e,this.l=Xn,this.m=Yn,this.defaultValue=void 0}}function yr(t,e){return new mr(t,e)}function vr(t,e){return(n,i)=>{t:{if(jt.length){const t=jt.pop();t.o(i),Dt(t.g,n,i),n=t}else n=new class{constructor(t,e){if(Ut.length){const n=Ut.pop();Dt(n,t,e),t=n}else t=new class{constructor(t,e){this.h=null,this.m=!1,this.g=this.l=this.j=0,Dt(this,t,e)}clear(){this.h=null,this.m=!1,this.g=this.l=this.j=0,this.ca=!1}}(t,e);this.g=t,this.l=this.g.g,this.h=this.m=-1,this.o(e)}o({ia:t=!1}={}){this.ia=t}}(n,i);try{const i=new t,s=i.u;ui(e)(s,n);var r=i;break t}finally{n.g.clear(),n.m=-1,n.h=-1,100>jt.length&&jt.push(n)}r=void 0}return r}}function _r(t){return function(){const e=new class{constructor(){this.l=[],this.h=0,this.g=new class{constructor(){this.g=[]}length(){return this.g.length}end(){const t=this.g;return this.g=[],t}}}};Ii(this.u,e,Li(t)),ee(e,e.g.end());const n=new Uint8Array(e.h),i=e.l,r=i.length;let s=0;for(let t=0;t<r;t++){const e=i[t];n.set(e,s),s+=e.length}return e.l=[n],n}}var Ar=class extends oi{constructor(t){super(t)}},br=[0,ar,Pi((function(t,e,n){return 2===t.h&&(Bi(e,n,(t=zt(t))===st()?void 0:t),!0)}),(function(t,e,n){if(null!=e){if(e instanceof oi){const i=e.Qa;return void(i&&(e=i(e),null!=e&&se(t,n,ut(e).buffer)))}if(Array.isArray(e))return}Xi(t,e,n)}))],wr=[0,hr],Er=[0,er,fr,rr,-1,nr,fr,-1],xr=[0,rr,-1],Tr=class extends oi{constructor(){super()}};Tr.A=[6];var kr=[0,rr,hr,rr,fr,-1,gr,hr,-1,xr,fr],Lr=[0,hr,-2],Sr=class extends oi{constructor(){super()}},Cr=[0],Rr=[0,er,rr,-3],Mr=class extends oi{constructor(t){super(t,2)}},Fr={},Dr=[-2,Fr,rr];Fr[336783863]=[0,hr,rr,-1,er,[0,[1,2,3,4,5],ur,Cr,ur,kr,ur,Lr,ur,Rr,ur,Er],wr];var Ir=[0,ar,sr],Pr=[0,Qi,-1,sr,-3,Qi,nr,ar,ir,Qi,-1,sr,ir,sr,-2,ar],Or=[-1,{}],Ur=[0,hr,1,Or],Br=[0,hr,or,Or];function Nr(t,e){Bn(t,2,Ye(e),"")}function Gr(t,e){Nn(t.u,3,We,e)}function $r(t,e){Nn(t.u,4,We,e)}var zr=class extends oi{constructor(t){super(t,500)}o(t){return Yn(this,0,7,t)}};zr.A=[3,4,5,6,8,13,17,1005];var Vr=[-500,ar,-1,or,-3,Dr,Wi,br,ir,-1,Ur,Br,Wi,Ir,ar,Pr,ir,or,987,or],jr=[0,ar,-1,Or],Xr=[-500,hr,-1,[-1,{}],998,hr],Hr=[-500,hr,or,-1,[-2,{},rr],997,or,-1],Wr=[-500,hr,or,Or,998,or];function Yr(t,e){Jn(t,1,zr,e)}function Kr(t,e){Nn(t.u,10,We,e)}function qr(t,e){Nn(t.u,15,We,e)}var Jr=class extends oi{constructor(t){super(t,500)}o(t){return Yn(this,0,1001,t)}};Jr.A=[1,6,7,9,10,15,16,17,14,1002];var Zr=[-500,Wi,Vr,4,Wi,Xr,Wi,Hr,ir,Wi,Wr,or,ir,Ur,Br,Wi,jr,or,-2,Pr,ar,-1,sr,979,Or,Wi,br],Qr=vr(Jr,Zr);Jr.prototype.g=_r(Zr);var ts=[0,Wi,[0,er,-2]],es=class extends oi{constructor(t){super(t)}},ns=[0,er,Ki,hr,-1],is=class extends oi{constructor(t){super(t)}g(){return Wn(this,es,1)}};is.A=[1];var rs=[0,Wi,ns],ss=vr(is,rs),os=[0,er,Ki],as=[0,er,-1,ts],hs=class extends oi{constructor(t){super(t)}},cs=[0,er,-3],ls=[0,Ki,-3],us=class extends oi{constructor(t){super(t)}},ds=[0,Ki,-1,hr,Ki],ps=class extends oi{constructor(t){super(t)}h(){return Xn(this,hs,2)}g(){return Wn(this,us,5)}};ps.A=[5];var fs=[0,fr,cs,ls,as,Wi,ds],gs=class extends oi{constructor(t){super(t)}};gs.A=[1,2,3,8,9];var ms=vr(gs,[0,or,nr,Ji,fs,hr,-1,Zi,Wi,os,or,Zi]),ys=class extends oi{constructor(t){super(t)}},vs=[0,Ki,-4],_s=class extends oi{constructor(t){super(t)}};_s.A=[1];var As=vr(_s,[0,Wi,vs]),bs=class extends oi{constructor(t){super(t)}},ws=[0,Ki,-4],Es=class extends oi{constructor(t){super(t)}};Es.A=[1];var xs=vr(Es,[0,Wi,ws]),Ts=class extends oi{constructor(t){super(t)}};Ts.A=[3];var ks=[0,er,-1,Ji,fr],Ls=class extends oi{constructor(){super()}};Ls.prototype.g=_r([0,Ki,-4,Zi]);var Ss=class extends oi{constructor(t){super(t)}},Cs=[0,1,er,hr,rs],Rs=class extends oi{constructor(t){super(t)}};Rs.A=[1];var Ms=vr(Rs,[0,Wi,Cs,Zi]),Fs=class extends oi{constructor(t){super(t)}};Fs.A=[1];var Ds=class extends oi{constructor(t){super(t)}qa(){const t=Mn(this);return null==t?st():t}},Is=class extends oi{constructor(t){super(t)}},Ps=[1,2],Os=[0,Ps,ur,[0,Ji],ur,[0,dr],er,hr],Us=class extends oi{constructor(t){super(t)}};Us.A=[1];var Bs=vr(Us,[0,Wi,Os,Zi]),Ns=class extends oi{constructor(t){super(t)}};Ns.A=[4,5];var Gs=[0,hr,er,Ki,or,-1],$s=class extends oi{constructor(t){super(t)}},zs=[0,rr,-1],Vs=class extends oi{constructor(t){super(t)}},js=[1,2,3,4,5],Xs=class extends oi{constructor(t){super(t)}g(){return null!=Mn(this)}h(){return null!=Qn(this,2)}},Hs=[0,dr,hr,[0,er,Zi,-1],[0,tr,Zi]],Ws=class extends oi{constructor(t){super(t)}g(){return Ue(Tn(this,2))??!1}},Ys=[0,Hs,rr,[0,js,ur,Rr,ur,kr,ur,Er,ur,Cr,ur,Lr],fr],Ks=class extends oi{constructor(t){super(t)}},qs=[0,Ys,Ki,-1,er],Js=yr(502141897,Ks);Fr[502141897]=qs;var Zs=[0,Hs];Fr[512499200]=Zs;var Qs=[0,Zs];Fr[515723506]=Qs;var to=vr(class extends oi{constructor(t){super(t)}},[0,[0,fr,-1,qi,pr],ks]),eo=[0,Ys];Fr[508981768]=eo;var no=class extends oi{constructor(t){super(t)}},io=[0,Ys,Ki,eo,rr],ro=class extends oi{constructor(t){super(t)}},so=[0,Ys,qs,io,Ki,Qs];Fr[508968149]=io;var oo=yr(508968150,ro);Fr[508968150]=so;var ao=class extends oi{constructor(t){super(t)}},ho=yr(513916220,ao);Fr[513916220]=[0,Ys,so,er];var co=class extends oi{constructor(t){super(t)}h(){return Xn(this,Ns,2)}g(){Ln(this,2)}},lo=[0,Ys,Gs];Fr[478825465]=lo;var uo=[0,Ys];Fr[478825422]=uo;var po=class extends oi{constructor(t){super(t)}},fo=[0,Ys,uo,lo,-1],go=class extends oi{constructor(t){super(t)}},mo=[0,Ys,Ki,er],yo=class extends oi{constructor(t){super(t)}},vo=[0,Ys,Ki],_o=class extends oi{constructor(t){super(t)}},Ao=[0,Ys,mo,vo,Ki],bo=class extends oi{constructor(t){super(t)}},wo=[0,Ys,Ao,fo];Fr[463370452]=fo,Fr[464864288]=mo,Fr[474472470]=vo;var Eo=yr(462713202,_o);Fr[462713202]=Ao;var xo=yr(479097054,bo);Fr[479097054]=wo;var To=class extends oi{constructor(t){super(t)}},ko=[0,Ys],Lo=class extends oi{constructor(t){super(t)}},So=[0,Ys,Ki,-1,er];Fr[514774813]=So;var Co=class extends oi{constructor(t){super(t)}},Ro=[0,Ys,Ki,rr];Fr[518928384]=Ro;var Mo=class extends oi{constructor(){super()}};Mo.prototype.g=_r([0,Ys,vo,ko,qs,io,So,Ro]);var Fo=class extends oi{constructor(t){super(t)}},Do=yr(456383383,Fo);Fr[456383383]=[0,Ys,Gs];var Io=class extends oi{constructor(t){super(t)}},Po=yr(476348187,Io);Fr[476348187]=[0,Ys,zs];var Oo=class extends oi{constructor(t){super(t)}},Uo=[0,fr,-1],Bo=class extends oi{constructor(t){super(t)}};Bo.A=[3];var No=yr(458105876,class extends oi{constructor(t){super(t)}g(){var t=this.u;const e=me(t);var n=2&e;return t=function(t,e,n){var i=Bo;const r=2&e;let s=!1;if(null==n){if(r)return mn();n=[]}else if(n.constructor===un){if(0==(2&n.L)||r)return n;n=n.Y()}else Array.isArray(n)?s=!!(2&ge(n)):n=[];if(r){if(!n.length)return mn();s||(s=!0,ve(n))}else s&&(s=!1,n=On(n));return s||(64&ge(n)?pe(n,32):32&e&&de(n,32)),Sn(t,e,2,i=new un(n,i,Je,void 0),!1),i}(t,e,kn(t,e,2)),null==t||!n&&Bo&&(t.ta=!0),t}});Fr[458105876]=[0,Uo,Ni,[!0,Zi,[0,hr,-1,or]]];var Go=class extends oi{constructor(t){super(t)}},$o=yr(458105758,Go);Fr[458105758]=[0,Ys,hr,Uo];var zo=class extends oi{constructor(t){super(t)}};zo.A=[5,6];var Vo=yr(443442058,zo);Fr[443442058]=[0,Ys,hr,er,Ki,or,-1];var jo=class extends oi{constructor(t){super(t)}},Xo=yr(516587230,jo);function Ho(t,e){return e=e?e.clone():new Ns,void 0!==t.displayNamesLocale?Ln(e,1,Ye(t.displayNamesLocale)):void 0===t.displayNamesLocale&&Ln(e,1),void 0!==t.maxResults?ii(e,2,t.maxResults):"maxResults"in t&&Ln(e,2),void 0!==t.scoreThreshold?ri(e,3,t.scoreThreshold):"scoreThreshold"in t&&Ln(e,3),void 0!==t.categoryAllowlist?Un(e,4,t.categoryAllowlist):"categoryAllowlist"in t&&Ln(e,4),void 0!==t.categoryDenylist?Un(e,5,t.categoryDenylist):"categoryDenylist"in t&&Ln(e,5),e}function Wo(t,e=-1,n=""){return{categories:t.map((t=>({index:ti(Zn(t,1))??-1,score:ei(t,2)??0,categoryName:Qn(t,3)??""??"",displayName:Qn(t,4)??""??""}))),headIndex:e,headName:n}}function Yo(t){var e=Fn(t,3,Oe),n=Fn(t,2,Ge),i=Fn(t,1,Ke),r=Fn(t,9,Ke);const s={categories:[],keypoints:[]};for(let t=0;t<e.length;t++)s.categories.push({score:e[t],index:n[t]??-1,categoryName:i[t]??"",displayName:r[t]??""});if((e=Xn(t,ps,4)?.h())&&(s.boundingBox={originX:Zn(e,1)??0,originY:Zn(e,2)??0,width:Zn(e,3)??0,height:Zn(e,4)??0,angle:0}),Xn(t,ps,4)?.g().length)for(const e of Xn(t,ps,4).g())s.keypoints.push({x:Rn(e,1)??0,y:Rn(e,2)??0,score:Rn(e,4)??0,label:Qn(e,3)??""});return s}function Ko(t){const e=[];for(const n of Wn(t,bs,1))e.push({x:ei(n,1)??0,y:ei(n,2)??0,z:ei(n,3)??0,visibility:ei(n,4)??0});return e}function qo(t){const e=[];for(const n of Wn(t,ys,1))e.push({x:ei(n,1)??0,y:ei(n,2)??0,z:ei(n,3)??0,visibility:ei(n,4)??0});return e}function Jo(t){return Array.from(t,(t=>127<t?t-256:t))}function Zo(t,e){if(t.length!==e.length)throw Error(`Cannot compute cosine similarity between embeddings of different sizes (${t.length} vs. ${e.length}).`);let n=0,i=0,r=0;for(let s=0;s<t.length;s++)n+=t[s]*e[s],i+=t[s]*t[s],r+=e[s]*e[s];if(0>=i||0>=r)throw Error("Cannot compute cosine similarity on embedding with 0 norm.");return n/Math.sqrt(i*r)}let Qo;Fr[516587230]=[0,Ys,So,Ro,Ki];const ta=new Uint8Array([0,97,115,109,1,0,0,0,1,5,1,96,0,1,123,3,2,1,0,10,10,1,8,0,65,0,253,15,253,98,11]);async function ea(){if(void 0===Qo)try{await WebAssembly.instantiate(ta),Qo=!0}catch{Qo=!1}return Qo}async function na(t,e=""){const n=await ea()?"wasm_internal":"wasm_nosimd_internal";return{wasmLoaderPath:`${e}/${t}_${n}.js`,wasmBinaryPath:`${e}/${t}_${n}.wasm`}}var ia=class{};function ra(){const t=navigator.userAgent;return t.includes("Safari")&&!t.includes("Chrome")}async function sa(t){if("function"!=typeof importScripts){const e=document.createElement("script");return e.src=t.toString(),e.crossOrigin="anonymous",new Promise(((t,n)=>{e.addEventListener("load",(()=>{t()}),!1),e.addEventListener("error",(t=>{n(t)}),!1),document.body.appendChild(e)}))}importScripts(t.toString())}function oa(t){return void 0!==t.videoWidth?[t.videoWidth,t.videoHeight]:void 0!==t.naturalWidth?[t.naturalWidth,t.naturalHeight]:void 0!==t.displayWidth?[t.displayWidth,t.displayHeight]:[t.width,t.height]}function aa(t,e,n){t.m||console.error("No wasm multistream support detected: ensure dependency inclusion of :gl_graph_runner_internal_multi_input target"),n(e=t.i.stringToNewUTF8(e)),t.i._free(e)}function ha(t,e,n){if(!t.i.canvas)throw Error("No OpenGL canvas configured.");if(n?t.i._bindTextureToStream(n):t.i._bindTextureToCanvas(),!(n=t.i.canvas.getContext("webgl2")||t.i.canvas.getContext("webgl")))throw Error("Failed to obtain WebGL context from the provided canvas. `getContext()` should only be invoked with `webgl` or `webgl2`.");t.i.gpuOriginForWebTexturesIsBottomLeft&&n.pixelStorei(n.UNPACK_FLIP_Y_WEBGL,!0),n.texImage2D(n.TEXTURE_2D,0,n.RGBA,n.RGBA,n.UNSIGNED_BYTE,e),t.i.gpuOriginForWebTexturesIsBottomLeft&&n.pixelStorei(n.UNPACK_FLIP_Y_WEBGL,!1);const[i,r]=oa(e);return!t.l||i===t.i.canvas.width&&r===t.i.canvas.height||(t.i.canvas.width=i,t.i.canvas.height=r),[i,r]}function ca(t,e,n){t.m||console.error("No wasm multistream support detected: ensure dependency inclusion of :gl_graph_runner_internal_multi_input target");const i=new Uint32Array(e.length);for(let n=0;n<e.length;n++)i[n]=t.i.stringToNewUTF8(e[n]);e=t.i._malloc(4*i.length),t.i.HEAPU32.set(i,e>>2),n(e);for(const e of i)t.i._free(e);t.i._free(e)}function la(t,e,n){t.i.simpleListeners=t.i.simpleListeners||{},t.i.simpleListeners[e]=n}function ua(t,e,n){let i=[];t.i.simpleListeners=t.i.simpleListeners||{},t.i.simpleListeners[e]=(t,e,r)=>{e?(n(i,r),i=[]):i.push(t)}}function da(t,e){const n=Xn(t.baseOptions,Xs,1)||new Xs;"string"==typeof e?(Ln(n,2,Ye(e)),Ln(n,1)):e instanceof Uint8Array&&(Ln(n,1,Le(e,!1,!1)),Ln(n,2)),Yn(t.baseOptions,0,1,n)}function pa(t){try{const e=t.H.length;if(1===e)throw Error(t.H[0].message);if(1<e)throw Error("Encountered multiple errors: "+t.H.map((t=>t.message)).join(", "))}finally{t.H=[]}}function fa(t,e){t.C=Math.max(t.C,e)}function ga(t,e){t.B=new zr,Nr(t.B,"PassThroughCalculator"),Gr(t.B,"free_memory"),$r(t.B,"free_memory_unused_out"),Kr(e,"free_memory"),Yr(e,t.B)}function ma(t,e){Gr(t.B,e),$r(t.B,e+"_unused_out")}function ya(t){t.g.addBoolToStream(!0,"free_memory",t.C)}ia.forVisionTasks=function(t){return na("vision",t)},ia.forTextTasks=function(t){return na("text",t)},ia.forGenAiTasks=function(t){return na("genai",t)},ia.forAudioTasks=function(t){return na("audio",t)},ia.isSimdSupported=function(){return ea()};var va=class{constructor(t){this.g=t,this.H=[],this.C=0,this.g.setAutoRenderToScreen(!1)}l(t,e=!0){if(e){const e=t.baseOptions||{};if(t.baseOptions?.modelAssetBuffer&&t.baseOptions?.modelAssetPath)throw Error("Cannot set both baseOptions.modelAssetPath and baseOptions.modelAssetBuffer");if(!(Xn(this.baseOptions,Xs,1)?.g()||Xn(this.baseOptions,Xs,1)?.h()||t.baseOptions?.modelAssetBuffer||t.baseOptions?.modelAssetPath))throw Error("Either baseOptions.modelAssetPath or baseOptions.modelAssetBuffer must be set");if(function(t,e){let n=Xn(t.baseOptions,Vs,3);if(!n){var i=n=new Vs,r=new Sr;Kn(i,4,js,r)}"delegate"in e&&("GPU"===e.delegate?(e=n,i=new Tr,Kn(e,2,js,i)):(e=n,i=new Sr,Kn(e,4,js,i))),Yn(t.baseOptions,0,3,n)}(this,e),e.modelAssetPath)return fetch(e.modelAssetPath.toString()).then((t=>{if(t.ok)return t.arrayBuffer();throw Error(`Failed to fetch model: ${e.modelAssetPath} (${t.status})`)})).then((t=>{try{this.g.i.FS_unlink("/model.dat")}catch{}this.g.i.FS_createDataFile("/","model.dat",new Uint8Array(t),!0,!1,!1),da(this,"/model.dat"),this.m(),this.K()}));da(this,e.modelAssetBuffer)}return this.m(),this.K(),Promise.resolve()}K(){}fa(){let t;if(this.g.fa((e=>{t=Qr(e)})),!t)throw Error("Failed to retrieve CalculatorGraphConfig");return t}setGraph(t,e){this.g.attachErrorListener(((t,e)=>{this.H.push(Error(e))})),this.g.Ma(),this.g.setGraph(t,e),this.B=void 0,pa(this)}finishProcessing(){this.g.finishProcessing(),pa(this)}close(){this.B=void 0,this.g.closeGraph()}};function _a(t,e){if(!t)throw Error(`Unable to obtain required WebGL resource: ${e}`);return t}va.prototype.close=va.prototype.close;class Aa{constructor(t,e,n,i){this.g=t,this.h=e,this.m=n,this.l=i}bind(){this.g.bindVertexArray(this.h)}close(){this.g.deleteVertexArray(this.h),this.g.deleteBuffer(this.m),this.g.deleteBuffer(this.l)}}function ba(t,e,n){const i=t.g;if(n=_a(i.createShader(n),"Failed to create WebGL shader"),i.shaderSource(n,e),i.compileShader(n),!i.getShaderParameter(n,i.COMPILE_STATUS))throw Error(`Could not compile WebGL shader: ${i.getShaderInfoLog(n)}`);return i.attachShader(t.h,n),n}function wa(t,e){const n=t.g,i=_a(n.createVertexArray(),"Failed to create vertex array");n.bindVertexArray(i);const r=_a(n.createBuffer(),"Failed to create buffer");n.bindBuffer(n.ARRAY_BUFFER,r),n.enableVertexAttribArray(t.P),n.vertexAttribPointer(t.P,2,n.FLOAT,!1,0,0),n.bufferData(n.ARRAY_BUFFER,new Float32Array([-1,-1,-1,1,1,1,1,-1]),n.STATIC_DRAW);const s=_a(n.createBuffer(),"Failed to create buffer");return n.bindBuffer(n.ARRAY_BUFFER,s),n.enableVertexAttribArray(t.O),n.vertexAttribPointer(t.O,2,n.FLOAT,!1,0,0),n.bufferData(n.ARRAY_BUFFER,new Float32Array(e?[0,1,0,0,1,0,1,1]:[0,0,0,1,1,1,1,0]),n.STATIC_DRAW),n.bindBuffer(n.ARRAY_BUFFER,null),n.bindVertexArray(null),new Aa(n,i,r,s)}function Ea(t,e){if(t.g){if(e!==t.g)throw Error("Cannot change GL context once initialized")}else t.g=e}function xa(t,e,n,i){return Ea(t,e),t.h||(t.m(),t.D()),n?(t.s||(t.s=wa(t,!0)),n=t.s):(t.v||(t.v=wa(t,!1)),n=t.v),e.useProgram(t.h),n.bind(),t.l(),t=i(),n.g.bindVertexArray(null),t}function Ta(t,e,n){return Ea(t,e),t=_a(e.createTexture(),"Failed to create texture"),e.bindTexture(e.TEXTURE_2D,t),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MIN_FILTER,n??e.LINEAR),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MAG_FILTER,n??e.LINEAR),e.bindTexture(e.TEXTURE_2D,null),t}function ka(t,e,n){Ea(t,e),t.B||(t.B=_a(e.createFramebuffer(),"Failed to create framebuffe.")),e.bindFramebuffer(e.FRAMEBUFFER,t.B),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,n,0)}function La(t){t.g?.bindFramebuffer(t.g.FRAMEBUFFER,null)}var Sa=class{H(){return"\n  precision mediump float;\n  varying vec2 vTex;\n  uniform sampler2D inputTexture;\n  void main() {\n    gl_FragColor = texture2D(inputTexture, vTex);\n  }\n "}m(){const t=this.g;if(this.h=_a(t.createProgram(),"Failed to create WebGL program"),this.ba=ba(this,"\n  attribute vec2 aVertex;\n  attribute vec2 aTex;\n  varying vec2 vTex;\n  void main(void) {\n    gl_Position = vec4(aVertex, 0.0, 1.0);\n    vTex = aTex;\n  }",t.VERTEX_SHADER),this.aa=ba(this,this.H(),t.FRAGMENT_SHADER),t.linkProgram(this.h),!t.getProgramParameter(this.h,t.LINK_STATUS))throw Error(`Error during program linking: ${t.getProgramInfoLog(this.h)}`);this.P=t.getAttribLocation(this.h,"aVertex"),this.O=t.getAttribLocation(this.h,"aTex")}D(){}l(){}close(){if(this.h){const t=this.g;t.deleteProgram(this.h),t.deleteShader(this.ba),t.deleteShader(this.aa)}this.B&&this.g.deleteFramebuffer(this.B),this.v&&this.v.close(),this.s&&this.s.close()}},Ca=class extends Sa{H(){return"\n  precision mediump float;\n  uniform sampler2D backgroundTexture;\n  uniform sampler2D maskTexture;\n  uniform sampler2D colorMappingTexture;\n  varying vec2 vTex;\n  void main() {\n    vec4 backgroundColor = texture2D(backgroundTexture, vTex);\n    float category = texture2D(maskTexture, vTex).r;\n    vec4 categoryColor = texture2D(colorMappingTexture, vec2(category, 0.0));\n    gl_FragColor = mix(backgroundColor, categoryColor, categoryColor.a);\n  }\n "}D(){const t=this.g;t.activeTexture(t.TEXTURE1),this.C=Ta(this,t,t.LINEAR),t.activeTexture(t.TEXTURE2),this.j=Ta(this,t,t.NEAREST)}m(){super.m();const t=this.g;this.K=_a(t.getUniformLocation(this.h,"backgroundTexture"),"Uniform location"),this.V=_a(t.getUniformLocation(this.h,"colorMappingTexture"),"Uniform location"),this.J=_a(t.getUniformLocation(this.h,"maskTexture"),"Uniform location")}l(){super.l();const t=this.g;t.uniform1i(this.J,0),t.uniform1i(this.K,1),t.uniform1i(this.V,2)}close(){this.C&&this.g.deleteTexture(this.C),this.j&&this.g.deleteTexture(this.j),super.close()}},Ra=class extends Sa{H(){return"\n  precision mediump float;\n  uniform sampler2D maskTexture;\n  uniform sampler2D defaultTexture;\n  uniform sampler2D overlayTexture;\n  varying vec2 vTex;\n  void main() {\n    float confidence = texture2D(maskTexture, vTex).r;\n    vec4 defaultColor = texture2D(defaultTexture, vTex);\n    vec4 overlayColor = texture2D(overlayTexture, vTex);\n    // Apply the alpha from the overlay and merge in the default color\n    overlayColor = mix(defaultColor, overlayColor, overlayColor.a);\n    gl_FragColor = mix(defaultColor, overlayColor, confidence);\n  }\n "}D(){const t=this.g;t.activeTexture(t.TEXTURE1),this.j=Ta(this,t),t.activeTexture(t.TEXTURE2),this.C=Ta(this,t)}m(){super.m();const t=this.g;this.J=_a(t.getUniformLocation(this.h,"defaultTexture"),"Uniform location"),this.K=_a(t.getUniformLocation(this.h,"overlayTexture"),"Uniform location"),this.I=_a(t.getUniformLocation(this.h,"maskTexture"),"Uniform location")}l(){super.l();const t=this.g;t.uniform1i(this.I,0),t.uniform1i(this.J,1),t.uniform1i(this.K,2)}close(){this.j&&this.g.deleteTexture(this.j),this.C&&this.g.deleteTexture(this.C),super.close()}};function Ma(t,e){switch(e){case 0:return t.g.find((t=>t instanceof Uint8Array));case 1:return t.g.find((t=>t instanceof Float32Array));case 2:return t.g.find((t=>"undefined"!=typeof WebGLTexture&&t instanceof WebGLTexture));default:throw Error(`Type is not supported: ${e}`)}}function Fa(t){var e=Ma(t,1);if(!e){if(e=Ma(t,0))e=new Float32Array(e).map((t=>t/255));else{e=new Float32Array(t.width*t.height);const i=Ia(t);var n=Oa(t);if(ka(n,i,Da(t)),"iPad Simulator;iPhone Simulator;iPod Simulator;iPad;iPhone;iPod".split(";").includes(navigator.platform)||navigator.userAgent.includes("Mac")&&"ontouchend"in self.document){n=new Float32Array(t.width*t.height*4),i.readPixels(0,0,t.width,t.height,i.RGBA,i.FLOAT,n);for(let t=0,i=0;t<e.length;++t,i+=4)e[t]=n[i]}else i.readPixels(0,0,t.width,t.height,i.RED,i.FLOAT,e)}t.g.push(e)}return e}function Da(t){let e=Ma(t,2);if(!e){const n=Ia(t);e=Ua(t);const i=Fa(t),r=Pa(t);n.texImage2D(n.TEXTURE_2D,0,r,t.width,t.height,0,n.RED,n.FLOAT,i),Ba(t)}return e}function Ia(t){if(!t.canvas)throw Error("Conversion to different image formats require that a canvas is passed when initializing the image.");return t.h||(t.h=_a(t.canvas.getContext("webgl2"),"You cannot use a canvas that is already bound to a different type of rendering context.")),t.h}function Pa(t){if(t=Ia(t),!Na)if(t.getExtension("EXT_color_buffer_float")&&t.getExtension("OES_texture_float_linear")&&t.getExtension("EXT_float_blend"))Na=t.R32F;else{if(!t.getExtension("EXT_color_buffer_half_float"))throw Error("GPU does not fully support 4-channel float32 or float16 formats");Na=t.R16F}return Na}function Oa(t){return t.l||(t.l=new Sa),t.l}function Ua(t){const e=Ia(t);e.viewport(0,0,t.width,t.height),e.activeTexture(e.TEXTURE0);let n=Ma(t,2);return n||(n=Ta(Oa(t),e,t.m?e.LINEAR:e.NEAREST),t.g.push(n),t.j=!0),e.bindTexture(e.TEXTURE_2D,n),n}function Ba(t){t.h.bindTexture(t.h.TEXTURE_2D,null)}var Na,Ga=class{constructor(t,e,n,i,r,s,o){this.g=t,this.m=e,this.j=n,this.canvas=i,this.l=r,this.width=s,this.height=o,this.j&&0==--$a&&console.error("You seem to be creating MPMask instances without invoking .close(). This leaks resources.")}Ha(){return!!Ma(this,0)}la(){return!!Ma(this,1)}R(){return!!Ma(this,2)}ka(){return(t=Ma(this,0))||(t=Fa(this),t=new Uint8Array(t.map((t=>255*t))),this.g.push(t)),t;var t}ja(){return Fa(this)}M(){return Da(this)}clone(){const t=[];for(const e of this.g){let n;if(e instanceof Uint8Array)n=new Uint8Array(e);else if(e instanceof Float32Array)n=new Float32Array(e);else{if(!(e instanceof WebGLTexture))throw Error(`Type is not supported: ${e}`);{const t=Ia(this),e=Oa(this);t.activeTexture(t.TEXTURE1),n=Ta(e,t,this.m?t.LINEAR:t.NEAREST),t.bindTexture(t.TEXTURE_2D,n);const i=Pa(this);t.texImage2D(t.TEXTURE_2D,0,i,this.width,this.height,0,t.RED,t.FLOAT,null),t.bindTexture(t.TEXTURE_2D,null),ka(e,t,n),xa(e,t,!1,(()=>{Ua(this),t.clearColor(0,0,0,0),t.clear(t.COLOR_BUFFER_BIT),t.drawArrays(t.TRIANGLE_FAN,0,4),Ba(this)})),La(e),Ba(this)}}t.push(n)}return new Ga(t,this.m,this.R(),this.canvas,this.l,this.width,this.height)}close(){this.j&&Ia(this).deleteTexture(Ma(this,2)),$a=-1}};Ga.prototype.close=Ga.prototype.close,Ga.prototype.clone=Ga.prototype.clone,Ga.prototype.getAsWebGLTexture=Ga.prototype.M,Ga.prototype.getAsFloat32Array=Ga.prototype.ja,Ga.prototype.getAsUint8Array=Ga.prototype.ka,Ga.prototype.hasWebGLTexture=Ga.prototype.R,Ga.prototype.hasFloat32Array=Ga.prototype.la,Ga.prototype.hasUint8Array=Ga.prototype.Ha;var $a=250;const za={color:"white",lineWidth:4,radius:6};function Va(t){return{...za,fillColor:(t=t||{}).color,...t}}function ja(t,e){return t instanceof Function?t(e):t}function Xa(t,e,n){return Math.max(Math.min(e,n),Math.min(Math.max(e,n),t))}function Ha(t){if(!t.l)throw Error("CPU rendering requested but CanvasRenderingContext2D not provided.");return t.l}function Wa(t){if(!t.j)throw Error("GPU rendering requested but WebGL2RenderingContext not provided.");return t.j}function Ya(t,e,n){if(e.R())n(e.M());else{const i=e.la()?e.ja():e.ka();t.m=t.m??new Sa;const r=Wa(t);n((t=new Ga([i],e.m,!1,r.canvas,t.m,e.width,e.height)).M()),t.close()}}function Ka(t,e,n,i){const r=function(t){return t.g||(t.g=new Ca),t.g}(t),s=Wa(t),o=Array.isArray(n)?new ImageData(new Uint8ClampedArray(n),1,1):n;xa(r,s,!0,(()=>{!function(t,e,n,i){const r=t.g;if(r.activeTexture(r.TEXTURE0),r.bindTexture(r.TEXTURE_2D,e),r.activeTexture(r.TEXTURE1),r.bindTexture(r.TEXTURE_2D,t.C),r.texImage2D(r.TEXTURE_2D,0,r.RGBA,r.RGBA,r.UNSIGNED_BYTE,n),t.I&&function(t,e){if(t!==e)return!1;t=t.entries(),e=e.entries();for(const[i,r]of t){t=i;const s=r;var n=e.next();if(n.done)return!1;const[o,a]=n.value;if(n=a,t!==o||s[0]!==n[0]||s[1]!==n[1]||s[2]!==n[2]||s[3]!==n[3])return!1}return!!e.next().done}(t.I,i))r.activeTexture(r.TEXTURE2),r.bindTexture(r.TEXTURE_2D,t.j);else{t.I=i;const e=Array(1024).fill(0);i.forEach(((t,n)=>{if(4!==t.length)throw Error(`Color at index ${n} is not a four-channel value.`);e[4*n]=t[0],e[4*n+1]=t[1],e[4*n+2]=t[2],e[4*n+3]=t[3]})),r.activeTexture(r.TEXTURE2),r.bindTexture(r.TEXTURE_2D,t.j),r.texImage2D(r.TEXTURE_2D,0,r.RGBA,256,1,0,r.RGBA,r.UNSIGNED_BYTE,new Uint8Array(e))}}(r,e,o,i),s.clearColor(0,0,0,0),s.clear(s.COLOR_BUFFER_BIT),s.drawArrays(s.TRIANGLE_FAN,0,4);const t=r.g;t.activeTexture(t.TEXTURE0),t.bindTexture(t.TEXTURE_2D,null),t.activeTexture(t.TEXTURE1),t.bindTexture(t.TEXTURE_2D,null),t.activeTexture(t.TEXTURE2),t.bindTexture(t.TEXTURE_2D,null)}))}function qa(t,e,n,i){const r=Wa(t),s=function(t){return t.h||(t.h=new Ra),t.h}(t),o=Array.isArray(n)?new ImageData(new Uint8ClampedArray(n),1,1):n,a=Array.isArray(i)?new ImageData(new Uint8ClampedArray(i),1,1):i;xa(s,r,!0,(()=>{var t=s.g;t.activeTexture(t.TEXTURE0),t.bindTexture(t.TEXTURE_2D,e),t.activeTexture(t.TEXTURE1),t.bindTexture(t.TEXTURE_2D,s.j),t.texImage2D(t.TEXTURE_2D,0,t.RGBA,t.RGBA,t.UNSIGNED_BYTE,o),t.activeTexture(t.TEXTURE2),t.bindTexture(t.TEXTURE_2D,s.C),t.texImage2D(t.TEXTURE_2D,0,t.RGBA,t.RGBA,t.UNSIGNED_BYTE,a),r.clearColor(0,0,0,0),r.clear(r.COLOR_BUFFER_BIT),r.drawArrays(r.TRIANGLE_FAN,0,4),r.bindTexture(r.TEXTURE_2D,null),(t=s.g).activeTexture(t.TEXTURE0),t.bindTexture(t.TEXTURE_2D,null),t.activeTexture(t.TEXTURE1),t.bindTexture(t.TEXTURE_2D,null),t.activeTexture(t.TEXTURE2),t.bindTexture(t.TEXTURE_2D,null)}))}var Ja=class{constructor(t,e){t instanceof CanvasRenderingContext2D||t instanceof OffscreenCanvasRenderingContext2D?(this.l=t,this.j=e):this.j=t}Aa(t,e){if(t){var n=Ha(this);e=Va(e),n.save();var i=n.canvas,r=0;for(const s of t)n.fillStyle=ja(e.fillColor,{index:r,from:s}),n.strokeStyle=ja(e.color,{index:r,from:s}),n.lineWidth=ja(e.lineWidth,{index:r,from:s}),(t=new Path2D).arc(s.x*i.width,s.y*i.height,ja(e.radius,{index:r,from:s}),0,2*Math.PI),n.fill(t),n.stroke(t),++r;n.restore()}}za(t,e,n){if(t&&e){var i=Ha(this);n=Va(n),i.save();var r=i.canvas,s=0;for(const o of e){i.beginPath(),e=t[o.start];const a=t[o.end];e&&a&&(i.strokeStyle=ja(n.color,{index:s,from:e,to:a}),i.lineWidth=ja(n.lineWidth,{index:s,from:e,to:a}),i.moveTo(e.x*r.width,e.y*r.height),i.lineTo(a.x*r.width,a.y*r.height)),++s,i.stroke()}i.restore()}}wa(t,e){const n=Ha(this);e=Va(e),n.save(),n.beginPath(),n.lineWidth=ja(e.lineWidth,{}),n.strokeStyle=ja(e.color,{}),n.fillStyle=ja(e.fillColor,{}),n.moveTo(t.originX,t.originY),n.lineTo(t.originX+t.width,t.originY),n.lineTo(t.originX+t.width,t.originY+t.height),n.lineTo(t.originX,t.originY+t.height),n.lineTo(t.originX,t.originY),n.stroke(),n.fill(),n.restore()}xa(t,e,n=[0,0,0,255]){this.l?function(t,e,n,i){const r=Wa(t);Ya(t,e,(e=>{Ka(t,e,n,i),(e=Ha(t)).drawImage(r.canvas,0,0,e.canvas.width,e.canvas.height)}))}(this,t,n,e):Ka(this,t.M(),n,e)}ya(t,e,n){this.l?function(t,e,n,i){const r=Wa(t);Ya(t,e,(e=>{qa(t,e,n,i),(e=Ha(t)).drawImage(r.canvas,0,0,e.canvas.width,e.canvas.height)}))}(this,t,e,n):qa(this,t.M(),e,n)}close(){this.g?.close(),this.g=void 0,this.h?.close(),this.h=void 0,this.m?.close(),this.m=void 0}};function Za(t,e){switch(e){case 0:return t.g.find((t=>t instanceof ImageData));case 1:return t.g.find((t=>"undefined"!=typeof ImageBitmap&&t instanceof ImageBitmap));case 2:return t.g.find((t=>"undefined"!=typeof WebGLTexture&&t instanceof WebGLTexture));default:throw Error(`Type is not supported: ${e}`)}}function Qa(t){var e=Za(t,0);if(!e){e=eh(t);const n=nh(t),i=new Uint8Array(t.width*t.height*4);ka(n,e,th(t)),e.readPixels(0,0,t.width,t.height,e.RGBA,e.UNSIGNED_BYTE,i),La(n),e=new ImageData(new Uint8ClampedArray(i.buffer),t.width,t.height),t.g.push(e)}return e}function th(t){let e=Za(t,2);if(!e){const n=eh(t);e=ih(t);const i=Za(t,1)||Qa(t);n.texImage2D(n.TEXTURE_2D,0,n.RGBA,n.RGBA,n.UNSIGNED_BYTE,i),rh(t)}return e}function eh(t){if(!t.canvas)throw Error("Conversion to different image formats require that a canvas is passed when iniitializing the image.");return t.h||(t.h=_a(t.canvas.getContext("webgl2"),"You cannot use a canvas that is already bound to a different type of rendering context.")),t.h}function nh(t){return t.l||(t.l=new Sa),t.l}function ih(t){const e=eh(t);e.viewport(0,0,t.width,t.height),e.activeTexture(e.TEXTURE0);let n=Za(t,2);return n||(n=Ta(nh(t),e),t.g.push(n),t.m=!0),e.bindTexture(e.TEXTURE_2D,n),n}function rh(t){t.h.bindTexture(t.h.TEXTURE_2D,null)}function sh(t){const e=eh(t);return xa(nh(t),e,!0,(()=>function(t,e){const n=t.canvas;if(n.width===t.width&&n.height===t.height)return e();const i=n.width,r=n.height;return n.width=t.width,n.height=t.height,t=e(),n.width=i,n.height=r,t}(t,(()=>{if(e.bindFramebuffer(e.FRAMEBUFFER,null),e.clearColor(0,0,0,0),e.clear(e.COLOR_BUFFER_BIT),e.drawArrays(e.TRIANGLE_FAN,0,4),!(t.canvas instanceof OffscreenCanvas))throw Error("Conversion to ImageBitmap requires that the MediaPipe Tasks is initialized with an OffscreenCanvas");return t.canvas.transferToImageBitmap()}))))}Ja.prototype.close=Ja.prototype.close,Ja.prototype.drawConfidenceMask=Ja.prototype.ya,Ja.prototype.drawCategoryMask=Ja.prototype.xa,Ja.prototype.drawBoundingBox=Ja.prototype.wa,Ja.prototype.drawConnectors=Ja.prototype.za,Ja.prototype.drawLandmarks=Ja.prototype.Aa,Ja.lerp=function(t,e,n,i,r){return Xa(i*(1-(t-e)/(n-e))+r*(1-(n-t)/(n-e)),i,r)},Ja.clamp=Xa;var oh=class{constructor(t,e,n,i,r,s,o){this.g=t,this.j=e,this.m=n,this.canvas=i,this.l=r,this.width=s,this.height=o,(this.j||this.m)&&0==--ah&&console.error("You seem to be creating MPImage instances without invoking .close(). This leaks resources.")}Ga(){return!!Za(this,0)}ma(){return!!Za(this,1)}R(){return!!Za(this,2)}Ea(){return Qa(this)}Da(){var t=Za(this,1);return t||(th(this),ih(this),t=sh(this),rh(this),this.g.push(t),this.j=!0),t}M(){return th(this)}clone(){const t=[];for(const e of this.g){let n;if(e instanceof ImageData)n=new ImageData(e.data,this.width,this.height);else if(e instanceof WebGLTexture){const t=eh(this),e=nh(this);t.activeTexture(t.TEXTURE1),n=Ta(e,t),t.bindTexture(t.TEXTURE_2D,n),t.texImage2D(t.TEXTURE_2D,0,t.RGBA,this.width,this.height,0,t.RGBA,t.UNSIGNED_BYTE,null),t.bindTexture(t.TEXTURE_2D,null),ka(e,t,n),xa(e,t,!1,(()=>{ih(this),t.clearColor(0,0,0,0),t.clear(t.COLOR_BUFFER_BIT),t.drawArrays(t.TRIANGLE_FAN,0,4),rh(this)})),La(e),rh(this)}else{if(!(e instanceof ImageBitmap))throw Error(`Type is not supported: ${e}`);th(this),ih(this),n=sh(this),rh(this)}t.push(n)}return new oh(t,this.ma(),this.R(),this.canvas,this.l,this.width,this.height)}close(){this.j&&Za(this,1).close(),this.m&&eh(this).deleteTexture(Za(this,2)),ah=-1}};oh.prototype.close=oh.prototype.close,oh.prototype.clone=oh.prototype.clone,oh.prototype.getAsWebGLTexture=oh.prototype.M,oh.prototype.getAsImageBitmap=oh.prototype.Da,oh.prototype.getAsImageData=oh.prototype.Ea,oh.prototype.hasWebGLTexture=oh.prototype.R,oh.prototype.hasImageBitmap=oh.prototype.ma,oh.prototype.hasImageData=oh.prototype.Ga;var ah=250;function hh(...t){return t.map((([t,e])=>({start:t,end:e})))}const ch=function(t){return class extends t{Ma(){this.i._registerModelResourcesGraphService()}}}((lh=class{constructor(t,e){this.l=!0,this.i=t,this.g=null,this.h=0,this.m="function"==typeof this.i._addIntToInputStream,void 0!==e?this.i.canvas=e:"undefined"==typeof OffscreenCanvas||ra()?(console.warn("OffscreenCanvas not supported and GraphRunner constructor glCanvas parameter is undefined. Creating backup canvas."),this.i.canvas=document.createElement("canvas")):this.i.canvas=new OffscreenCanvas(1,1)}async initializeGraph(t){const e=await(await fetch(t)).arrayBuffer();t=!(t.endsWith(".pbtxt")||t.endsWith(".textproto")),this.setGraph(new Uint8Array(e),t)}setGraphFromString(t){this.setGraph((new TextEncoder).encode(t),!1)}setGraph(t,e){const n=t.length,i=this.i._malloc(n);this.i.HEAPU8.set(t,i),e?this.i._changeBinaryGraph(n,i):this.i._changeTextGraph(n,i),this.i._free(i)}configureAudio(t,e,n,i,r){this.i._configureAudio||console.warn('Attempting to use configureAudio without support for input audio. Is build dep ":gl_graph_runner_audio" missing?'),aa(this,i||"input_audio",(i=>{aa(this,r=r||"audio_header",(r=>{this.i._configureAudio(i,r,t,e,n)}))}))}setAutoResizeCanvas(t){this.l=t}setAutoRenderToScreen(t){this.i._setAutoRenderToScreen(t)}setGpuBufferVerticalFlip(t){this.i.gpuOriginForWebTexturesIsBottomLeft=t}fa(t){la(this,"__graph_config__",(e=>{t(e)})),aa(this,"__graph_config__",(t=>{this.i._getGraphConfig(t,void 0)})),delete this.i.simpleListeners.__graph_config__}attachErrorListener(t){this.i.errorListener=t}attachEmptyPacketListener(t,e){this.i.emptyPacketListeners=this.i.emptyPacketListeners||{},this.i.emptyPacketListeners[t]=e}addAudioToStream(t,e,n){this.addAudioToStreamWithShape(t,0,0,e,n)}addAudioToStreamWithShape(t,e,n,i,r){const s=4*t.length;this.h!==s&&(this.g&&this.i._free(this.g),this.g=this.i._malloc(s),this.h=s),this.i.HEAPF32.set(t,this.g/4),aa(this,i,(t=>{this.i._addAudioToInputStream(this.g,e,n,t,r)}))}addGpuBufferToStream(t,e,n){aa(this,e,(e=>{const[i,r]=ha(this,t,e);this.i._addBoundTextureToStream(e,i,r,n)}))}addBoolToStream(t,e,n){aa(this,e,(e=>{this.i._addBoolToInputStream(t,e,n)}))}addDoubleToStream(t,e,n){aa(this,e,(e=>{this.i._addDoubleToInputStream(t,e,n)}))}addFloatToStream(t,e,n){aa(this,e,(e=>{this.i._addFloatToInputStream(t,e,n)}))}addIntToStream(t,e,n){aa(this,e,(e=>{this.i._addIntToInputStream(t,e,n)}))}addStringToStream(t,e,n){aa(this,e,(e=>{aa(this,t,(t=>{this.i._addStringToInputStream(t,e,n)}))}))}addStringRecordToStream(t,e,n){aa(this,e,(e=>{ca(this,Object.keys(t),(i=>{ca(this,Object.values(t),(r=>{this.i._addFlatHashMapToInputStream(i,r,Object.keys(t).length,e,n)}))}))}))}addProtoToStream(t,e,n,i){aa(this,n,(n=>{aa(this,e,(e=>{const r=this.i._malloc(t.length);this.i.HEAPU8.set(t,r),this.i._addProtoToInputStream(r,t.length,e,n,i),this.i._free(r)}))}))}addEmptyPacketToStream(t,e){aa(this,t,(t=>{this.i._addEmptyPacketToInputStream(t,e)}))}addBoolVectorToStream(t,e,n){aa(this,e,(e=>{const i=this.i._allocateBoolVector(t.length);if(!i)throw Error("Unable to allocate new bool vector on heap.");for(const e of t)this.i._addBoolVectorEntry(i,e);this.i._addBoolVectorToInputStream(i,e,n)}))}addDoubleVectorToStream(t,e,n){aa(this,e,(e=>{const i=this.i._allocateDoubleVector(t.length);if(!i)throw Error("Unable to allocate new double vector on heap.");for(const e of t)this.i._addDoubleVectorEntry(i,e);this.i._addDoubleVectorToInputStream(i,e,n)}))}addFloatVectorToStream(t,e,n){aa(this,e,(e=>{const i=this.i._allocateFloatVector(t.length);if(!i)throw Error("Unable to allocate new float vector on heap.");for(const e of t)this.i._addFloatVectorEntry(i,e);this.i._addFloatVectorToInputStream(i,e,n)}))}addIntVectorToStream(t,e,n){aa(this,e,(e=>{const i=this.i._allocateIntVector(t.length);if(!i)throw Error("Unable to allocate new int vector on heap.");for(const e of t)this.i._addIntVectorEntry(i,e);this.i._addIntVectorToInputStream(i,e,n)}))}addStringVectorToStream(t,e,n){aa(this,e,(e=>{const i=this.i._allocateStringVector(t.length);if(!i)throw Error("Unable to allocate new string vector on heap.");for(const e of t)aa(this,e,(t=>{this.i._addStringVectorEntry(i,t)}));this.i._addStringVectorToInputStream(i,e,n)}))}addBoolToInputSidePacket(t,e){aa(this,e,(e=>{this.i._addBoolToInputSidePacket(t,e)}))}addDoubleToInputSidePacket(t,e){aa(this,e,(e=>{this.i._addDoubleToInputSidePacket(t,e)}))}addFloatToInputSidePacket(t,e){aa(this,e,(e=>{this.i._addFloatToInputSidePacket(t,e)}))}addIntToInputSidePacket(t,e){aa(this,e,(e=>{this.i._addIntToInputSidePacket(t,e)}))}addStringToInputSidePacket(t,e){aa(this,e,(e=>{aa(this,t,(t=>{this.i._addStringToInputSidePacket(t,e)}))}))}addProtoToInputSidePacket(t,e,n){aa(this,n,(n=>{aa(this,e,(e=>{const i=this.i._malloc(t.length);this.i.HEAPU8.set(t,i),this.i._addProtoToInputSidePacket(i,t.length,e,n),this.i._free(i)}))}))}addBoolVectorToInputSidePacket(t,e){aa(this,e,(e=>{const n=this.i._allocateBoolVector(t.length);if(!n)throw Error("Unable to allocate new bool vector on heap.");for(const e of t)this.i._addBoolVectorEntry(n,e);this.i._addBoolVectorToInputSidePacket(n,e)}))}addDoubleVectorToInputSidePacket(t,e){aa(this,e,(e=>{const n=this.i._allocateDoubleVector(t.length);if(!n)throw Error("Unable to allocate new double vector on heap.");for(const e of t)this.i._addDoubleVectorEntry(n,e);this.i._addDoubleVectorToInputSidePacket(n,e)}))}addFloatVectorToInputSidePacket(t,e){aa(this,e,(e=>{const n=this.i._allocateFloatVector(t.length);if(!n)throw Error("Unable to allocate new float vector on heap.");for(const e of t)this.i._addFloatVectorEntry(n,e);this.i._addFloatVectorToInputSidePacket(n,e)}))}addIntVectorToInputSidePacket(t,e){aa(this,e,(e=>{const n=this.i._allocateIntVector(t.length);if(!n)throw Error("Unable to allocate new int vector on heap.");for(const e of t)this.i._addIntVectorEntry(n,e);this.i._addIntVectorToInputSidePacket(n,e)}))}addStringVectorToInputSidePacket(t,e){aa(this,e,(e=>{const n=this.i._allocateStringVector(t.length);if(!n)throw Error("Unable to allocate new string vector on heap.");for(const e of t)aa(this,e,(t=>{this.i._addStringVectorEntry(n,t)}));this.i._addStringVectorToInputSidePacket(n,e)}))}attachBoolListener(t,e){la(this,t,e),aa(this,t,(t=>{this.i._attachBoolListener(t)}))}attachBoolVectorListener(t,e){ua(this,t,e),aa(this,t,(t=>{this.i._attachBoolVectorListener(t)}))}attachIntListener(t,e){la(this,t,e),aa(this,t,(t=>{this.i._attachIntListener(t)}))}attachIntVectorListener(t,e){ua(this,t,e),aa(this,t,(t=>{this.i._attachIntVectorListener(t)}))}attachDoubleListener(t,e){la(this,t,e),aa(this,t,(t=>{this.i._attachDoubleListener(t)}))}attachDoubleVectorListener(t,e){ua(this,t,e),aa(this,t,(t=>{this.i._attachDoubleVectorListener(t)}))}attachFloatListener(t,e){la(this,t,e),aa(this,t,(t=>{this.i._attachFloatListener(t)}))}attachFloatVectorListener(t,e){ua(this,t,e),aa(this,t,(t=>{this.i._attachFloatVectorListener(t)}))}attachStringListener(t,e){la(this,t,e),aa(this,t,(t=>{this.i._attachStringListener(t)}))}attachStringVectorListener(t,e){ua(this,t,e),aa(this,t,(t=>{this.i._attachStringVectorListener(t)}))}attachProtoListener(t,e,n){la(this,t,e),aa(this,t,(t=>{this.i._attachProtoListener(t,n||!1)}))}attachProtoVectorListener(t,e,n){ua(this,t,e),aa(this,t,(t=>{this.i._attachProtoVectorListener(t,n||!1)}))}attachAudioListener(t,e,n){this.i._attachAudioListener||console.warn('Attempting to use attachAudioListener without support for output audio. Is build dep ":gl_graph_runner_audio_out" missing?'),la(this,t,((t,n)=>{t=new Float32Array(t.buffer,t.byteOffset,t.length/4),e(t,n)})),aa(this,t,(t=>{this.i._attachAudioListener(t,n||!1)}))}finishProcessing(){this.i._waitUntilIdle()}closeGraph(){this.i._closeGraph(),this.i.simpleListeners=void 0,this.i.emptyPacketListeners=void 0}},class extends lh{get ha(){return this.i}sa(t,e,n){aa(this,e,(e=>{const[i,r]=ha(this,t,e);this.ha._addBoundTextureAsImageToStream(e,i,r,n)}))}W(t,e){la(this,t,e),aa(this,t,(t=>{this.ha._attachImageListener(t)}))}da(t,e){ua(this,t,e),aa(this,t,(t=>{this.ha._attachImageVectorListener(t)}))}}));var lh,uh=class extends ch{};async function dh(t,e,n){return async function(t,e,n,i){return async function(t,e,n,i){return t=await(async(t,e,n,i,r)=>{if(e&&await sa(e),!self.ModuleFactory)throw Error("ModuleFactory not set.");if(n&&(await sa(n),!self.ModuleFactory))throw Error("ModuleFactory not set.");return self.Module&&r&&((e=self.Module).locateFile=r.locateFile,r.mainScriptUrlOrBlob&&(e.mainScriptUrlOrBlob=r.mainScriptUrlOrBlob)),r=await self.ModuleFactory(self.Module||r),self.ModuleFactory=self.Module=void 0,new t(r,i)})(t,n.wasmLoaderPath,n.assetLoaderPath,e,{locateFile:t=>t.endsWith(".wasm")?n.wasmBinaryPath.toString():n.assetBinaryPath&&t.endsWith(".data")?n.assetBinaryPath.toString():t}),await t.o(i),t}(t,e,n,i)}(t,n.canvas??("undefined"==typeof OffscreenCanvas||ra()?document.createElement("canvas"):void 0),e,n)}function ph(t,e,n,i){if(t.V){const s=new Ls;if(n?.regionOfInterest){if(!t.ra)throw Error("This task doesn't support region-of-interest.");var r=n.regionOfInterest;if(r.left>=r.right||r.top>=r.bottom)throw Error("Expected RectF with left < right and top < bottom.");if(0>r.left||0>r.top||1<r.right||1<r.bottom)throw Error("Expected RectF values to be in [0,1].");ri(s,1,(r.left+r.right)/2),ri(s,2,(r.top+r.bottom)/2),ri(s,4,r.right-r.left),ri(s,3,r.bottom-r.top)}else ri(s,1,.5),ri(s,2,.5),ri(s,4,1),ri(s,3,1);if(n?.rotationDegrees){if(0!=n?.rotationDegrees%90)throw Error("Expected rotation to be a multiple of 90°.");if(ri(s,5,-Math.PI*n.rotationDegrees/180),0!=n?.rotationDegrees%180){const[t,i]=oa(e);n=ei(s,3)*i/t,r=ei(s,4)*t/i,ri(s,4,n),ri(s,3,r)}}t.g.addProtoToStream(s.g(),"mediapipe.NormalizedRect",t.V,i)}t.g.sa(e,t.ba,i??performance.now()),t.finishProcessing()}function fh(t,e,n){if(t.baseOptions?.g())throw Error("Task is not initialized with image mode. 'runningMode' must be set to 'IMAGE'.");ph(t,e,n,t.C+1)}function gh(t,e,n,i){if(!t.baseOptions?.g())throw Error("Task is not initialized with video mode. 'runningMode' must be set to 'VIDEO'.");ph(t,e,n,i)}function mh(t,e,n,i){var r=e.data;const s=e.width,o=s*(e=e.height);if((r instanceof Uint8Array||r instanceof Float32Array)&&r.length!==o)throw Error("Unsupported channel count: "+r.length/o);return t=new Ga([r],n,!1,t.g.i.canvas,t.O,s,e),i?t.clone():t}var yh=class extends va{constructor(t,e,n,i){super(t),this.g=t,this.ba=e,this.V=n,this.ra=i,this.O=new Sa}l(t,e=!0){if("runningMode"in t&&ni(this.baseOptions,2,!!t.runningMode&&"IMAGE"!==t.runningMode),void 0!==t.canvas&&this.g.i.canvas!==t.canvas)throw Error("You must create a new task to reset the canvas.");return super.l(t,e)}close(){this.O.close(),super.close()}};yh.prototype.close=yh.prototype.close;var vh=class extends yh{constructor(t,e){super(new uh(t,e),"image_in","norm_rect_in",!1),this.j={detections:[]},Yn(t=this.h=new Ks,0,1,e=new Ws),ri(this.h,2,.5),ri(this.h,3,.3)}get baseOptions(){return Xn(this.h,Ws,1)}set baseOptions(t){Yn(this.h,0,1,t)}o(t){return"minDetectionConfidence"in t&&ri(this.h,2,t.minDetectionConfidence??.5),"minSuppressionThreshold"in t&&ri(this.h,3,t.minSuppressionThreshold??.3),this.l(t)}F(t,e){return this.j={detections:[]},fh(this,t,e),this.j}G(t,e,n){return this.j={detections:[]},gh(this,t,n,e),this.j}m(){var t=new Jr;Kr(t,"image_in"),Kr(t,"norm_rect_in"),qr(t,"detections");const e=new Mr;si(e,Js,this.h);const n=new zr;Nr(n,"mediapipe.tasks.vision.face_detector.FaceDetectorGraph"),Gr(n,"IMAGE:image_in"),Gr(n,"NORM_RECT:norm_rect_in"),$r(n,"DETECTIONS:detections"),n.o(e),Yr(t,n),this.g.attachProtoVectorListener("detections",((t,e)=>{for(const e of t)t=ms(e),this.j.detections.push(Yo(t));fa(this,e)})),this.g.attachEmptyPacketListener("detections",(t=>{fa(this,t)})),t=t.g(),this.setGraph(new Uint8Array(t),!0)}};vh.prototype.detectForVideo=vh.prototype.G,vh.prototype.detect=vh.prototype.F,vh.prototype.setOptions=vh.prototype.o,vh.createFromModelPath=async function(t,e){return dh(vh,t,{baseOptions:{modelAssetPath:e}})},vh.createFromModelBuffer=function(t,e){return dh(vh,t,{baseOptions:{modelAssetBuffer:e}})},vh.createFromOptions=function(t,e){return dh(vh,t,e)};var _h=hh([61,146],[146,91],[91,181],[181,84],[84,17],[17,314],[314,405],[405,321],[321,375],[375,291],[61,185],[185,40],[40,39],[39,37],[37,0],[0,267],[267,269],[269,270],[270,409],[409,291],[78,95],[95,88],[88,178],[178,87],[87,14],[14,317],[317,402],[402,318],[318,324],[324,308],[78,191],[191,80],[80,81],[81,82],[82,13],[13,312],[312,311],[311,310],[310,415],[415,308]),Ah=hh([263,249],[249,390],[390,373],[373,374],[374,380],[380,381],[381,382],[382,362],[263,466],[466,388],[388,387],[387,386],[386,385],[385,384],[384,398],[398,362]),bh=hh([276,283],[283,282],[282,295],[295,285],[300,293],[293,334],[334,296],[296,336]),wh=hh([474,475],[475,476],[476,477],[477,474]),Eh=hh([33,7],[7,163],[163,144],[144,145],[145,153],[153,154],[154,155],[155,133],[33,246],[246,161],[161,160],[160,159],[159,158],[158,157],[157,173],[173,133]),xh=hh([46,53],[53,52],[52,65],[65,55],[70,63],[63,105],[105,66],[66,107]),Th=hh([469,470],[470,471],[471,472],[472,469]),kh=hh([10,338],[338,297],[297,332],[332,284],[284,251],[251,389],[389,356],[356,454],[454,323],[323,361],[361,288],[288,397],[397,365],[365,379],[379,378],[378,400],[400,377],[377,152],[152,148],[148,176],[176,149],[149,150],[150,136],[136,172],[172,58],[58,132],[132,93],[93,234],[234,127],[127,162],[162,21],[21,54],[54,103],[103,67],[67,109],[109,10]),Lh=[..._h,...Ah,...bh,...Eh,...xh,...kh],Sh=hh([127,34],[34,139],[139,127],[11,0],[0,37],[37,11],[232,231],[231,120],[120,232],[72,37],[37,39],[39,72],[128,121],[121,47],[47,128],[232,121],[121,128],[128,232],[104,69],[69,67],[67,104],[175,171],[171,148],[148,175],[118,50],[50,101],[101,118],[73,39],[39,40],[40,73],[9,151],[151,108],[108,9],[48,115],[115,131],[131,48],[194,204],[204,211],[211,194],[74,40],[40,185],[185,74],[80,42],[42,183],[183,80],[40,92],[92,186],[186,40],[230,229],[229,118],[118,230],[202,212],[212,214],[214,202],[83,18],[18,17],[17,83],[76,61],[61,146],[146,76],[160,29],[29,30],[30,160],[56,157],[157,173],[173,56],[106,204],[204,194],[194,106],[135,214],[214,192],[192,135],[203,165],[165,98],[98,203],[21,71],[71,68],[68,21],[51,45],[45,4],[4,51],[144,24],[24,23],[23,144],[77,146],[146,91],[91,77],[205,50],[50,187],[187,205],[201,200],[200,18],[18,201],[91,106],[106,182],[182,91],[90,91],[91,181],[181,90],[85,84],[84,17],[17,85],[206,203],[203,36],[36,206],[148,171],[171,140],[140,148],[92,40],[40,39],[39,92],[193,189],[189,244],[244,193],[159,158],[158,28],[28,159],[247,246],[246,161],[161,247],[236,3],[3,196],[196,236],[54,68],[68,104],[104,54],[193,168],[168,8],[8,193],[117,228],[228,31],[31,117],[189,193],[193,55],[55,189],[98,97],[97,99],[99,98],[126,47],[47,100],[100,126],[166,79],[79,218],[218,166],[155,154],[154,26],[26,155],[209,49],[49,131],[131,209],[135,136],[136,150],[150,135],[47,126],[126,217],[217,47],[223,52],[52,53],[53,223],[45,51],[51,134],[134,45],[211,170],[170,140],[140,211],[67,69],[69,108],[108,67],[43,106],[106,91],[91,43],[230,119],[119,120],[120,230],[226,130],[130,247],[247,226],[63,53],[53,52],[52,63],[238,20],[20,242],[242,238],[46,70],[70,156],[156,46],[78,62],[62,96],[96,78],[46,53],[53,63],[63,46],[143,34],[34,227],[227,143],[123,117],[117,111],[111,123],[44,125],[125,19],[19,44],[236,134],[134,51],[51,236],[216,206],[206,205],[205,216],[154,153],[153,22],[22,154],[39,37],[37,167],[167,39],[200,201],[201,208],[208,200],[36,142],[142,100],[100,36],[57,212],[212,202],[202,57],[20,60],[60,99],[99,20],[28,158],[158,157],[157,28],[35,226],[226,113],[113,35],[160,159],[159,27],[27,160],[204,202],[202,210],[210,204],[113,225],[225,46],[46,113],[43,202],[202,204],[204,43],[62,76],[76,77],[77,62],[137,123],[123,116],[116,137],[41,38],[38,72],[72,41],[203,129],[129,142],[142,203],[64,98],[98,240],[240,64],[49,102],[102,64],[64,49],[41,73],[73,74],[74,41],[212,216],[216,207],[207,212],[42,74],[74,184],[184,42],[169,170],[170,211],[211,169],[170,149],[149,176],[176,170],[105,66],[66,69],[69,105],[122,6],[6,168],[168,122],[123,147],[147,187],[187,123],[96,77],[77,90],[90,96],[65,55],[55,107],[107,65],[89,90],[90,180],[180,89],[101,100],[100,120],[120,101],[63,105],[105,104],[104,63],[93,137],[137,227],[227,93],[15,86],[86,85],[85,15],[129,102],[102,49],[49,129],[14,87],[87,86],[86,14],[55,8],[8,9],[9,55],[100,47],[47,121],[121,100],[145,23],[23,22],[22,145],[88,89],[89,179],[179,88],[6,122],[122,196],[196,6],[88,95],[95,96],[96,88],[138,172],[172,136],[136,138],[215,58],[58,172],[172,215],[115,48],[48,219],[219,115],[42,80],[80,81],[81,42],[195,3],[3,51],[51,195],[43,146],[146,61],[61,43],[171,175],[175,199],[199,171],[81,82],[82,38],[38,81],[53,46],[46,225],[225,53],[144,163],[163,110],[110,144],[52,65],[65,66],[66,52],[229,228],[228,117],[117,229],[34,127],[127,234],[234,34],[107,108],[108,69],[69,107],[109,108],[108,151],[151,109],[48,64],[64,235],[235,48],[62,78],[78,191],[191,62],[129,209],[209,126],[126,129],[111,35],[35,143],[143,111],[117,123],[123,50],[50,117],[222,65],[65,52],[52,222],[19,125],[125,141],[141,19],[221,55],[55,65],[65,221],[3,195],[195,197],[197,3],[25,7],[7,33],[33,25],[220,237],[237,44],[44,220],[70,71],[71,139],[139,70],[122,193],[193,245],[245,122],[247,130],[130,33],[33,247],[71,21],[21,162],[162,71],[170,169],[169,150],[150,170],[188,174],[174,196],[196,188],[216,186],[186,92],[92,216],[2,97],[97,167],[167,2],[141,125],[125,241],[241,141],[164,167],[167,37],[37,164],[72,38],[38,12],[12,72],[38,82],[82,13],[13,38],[63,68],[68,71],[71,63],[226,35],[35,111],[111,226],[101,50],[50,205],[205,101],[206,92],[92,165],[165,206],[209,198],[198,217],[217,209],[165,167],[167,97],[97,165],[220,115],[115,218],[218,220],[133,112],[112,243],[243,133],[239,238],[238,241],[241,239],[214,135],[135,169],[169,214],[190,173],[173,133],[133,190],[171,208],[208,32],[32,171],[125,44],[44,237],[237,125],[86,87],[87,178],[178,86],[85,86],[86,179],[179,85],[84,85],[85,180],[180,84],[83,84],[84,181],[181,83],[201,83],[83,182],[182,201],[137,93],[93,132],[132,137],[76,62],[62,183],[183,76],[61,76],[76,184],[184,61],[57,61],[61,185],[185,57],[212,57],[57,186],[186,212],[214,207],[207,187],[187,214],[34,143],[143,156],[156,34],[79,239],[239,237],[237,79],[123,137],[137,177],[177,123],[44,1],[1,4],[4,44],[201,194],[194,32],[32,201],[64,102],[102,129],[129,64],[213,215],[215,138],[138,213],[59,166],[166,219],[219,59],[242,99],[99,97],[97,242],[2,94],[94,141],[141,2],[75,59],[59,235],[235,75],[24,110],[110,228],[228,24],[25,130],[130,226],[226,25],[23,24],[24,229],[229,23],[22,23],[23,230],[230,22],[26,22],[22,231],[231,26],[112,26],[26,232],[232,112],[189,190],[190,243],[243,189],[221,56],[56,190],[190,221],[28,56],[56,221],[221,28],[27,28],[28,222],[222,27],[29,27],[27,223],[223,29],[30,29],[29,224],[224,30],[247,30],[30,225],[225,247],[238,79],[79,20],[20,238],[166,59],[59,75],[75,166],[60,75],[75,240],[240,60],[147,177],[177,215],[215,147],[20,79],[79,166],[166,20],[187,147],[147,213],[213,187],[112,233],[233,244],[244,112],[233,128],[128,245],[245,233],[128,114],[114,188],[188,128],[114,217],[217,174],[174,114],[131,115],[115,220],[220,131],[217,198],[198,236],[236,217],[198,131],[131,134],[134,198],[177,132],[132,58],[58,177],[143,35],[35,124],[124,143],[110,163],[163,7],[7,110],[228,110],[110,25],[25,228],[356,389],[389,368],[368,356],[11,302],[302,267],[267,11],[452,350],[350,349],[349,452],[302,303],[303,269],[269,302],[357,343],[343,277],[277,357],[452,453],[453,357],[357,452],[333,332],[332,297],[297,333],[175,152],[152,377],[377,175],[347,348],[348,330],[330,347],[303,304],[304,270],[270,303],[9,336],[336,337],[337,9],[278,279],[279,360],[360,278],[418,262],[262,431],[431,418],[304,408],[408,409],[409,304],[310,415],[415,407],[407,310],[270,409],[409,410],[410,270],[450,348],[348,347],[347,450],[422,430],[430,434],[434,422],[313,314],[314,17],[17,313],[306,307],[307,375],[375,306],[387,388],[388,260],[260,387],[286,414],[414,398],[398,286],[335,406],[406,418],[418,335],[364,367],[367,416],[416,364],[423,358],[358,327],[327,423],[251,284],[284,298],[298,251],[281,5],[5,4],[4,281],[373,374],[374,253],[253,373],[307,320],[320,321],[321,307],[425,427],[427,411],[411,425],[421,313],[313,18],[18,421],[321,405],[405,406],[406,321],[320,404],[404,405],[405,320],[315,16],[16,17],[17,315],[426,425],[425,266],[266,426],[377,400],[400,369],[369,377],[322,391],[391,269],[269,322],[417,465],[465,464],[464,417],[386,257],[257,258],[258,386],[466,260],[260,388],[388,466],[456,399],[399,419],[419,456],[284,332],[332,333],[333,284],[417,285],[285,8],[8,417],[346,340],[340,261],[261,346],[413,441],[441,285],[285,413],[327,460],[460,328],[328,327],[355,371],[371,329],[329,355],[392,439],[439,438],[438,392],[382,341],[341,256],[256,382],[429,420],[420,360],[360,429],[364,394],[394,379],[379,364],[277,343],[343,437],[437,277],[443,444],[444,283],[283,443],[275,440],[440,363],[363,275],[431,262],[262,369],[369,431],[297,338],[338,337],[337,297],[273,375],[375,321],[321,273],[450,451],[451,349],[349,450],[446,342],[342,467],[467,446],[293,334],[334,282],[282,293],[458,461],[461,462],[462,458],[276,353],[353,383],[383,276],[308,324],[324,325],[325,308],[276,300],[300,293],[293,276],[372,345],[345,447],[447,372],[352,345],[345,340],[340,352],[274,1],[1,19],[19,274],[456,248],[248,281],[281,456],[436,427],[427,425],[425,436],[381,256],[256,252],[252,381],[269,391],[391,393],[393,269],[200,199],[199,428],[428,200],[266,330],[330,329],[329,266],[287,273],[273,422],[422,287],[250,462],[462,328],[328,250],[258,286],[286,384],[384,258],[265,353],[353,342],[342,265],[387,259],[259,257],[257,387],[424,431],[431,430],[430,424],[342,353],[353,276],[276,342],[273,335],[335,424],[424,273],[292,325],[325,307],[307,292],[366,447],[447,345],[345,366],[271,303],[303,302],[302,271],[423,266],[266,371],[371,423],[294,455],[455,460],[460,294],[279,278],[278,294],[294,279],[271,272],[272,304],[304,271],[432,434],[434,427],[427,432],[272,407],[407,408],[408,272],[394,430],[430,431],[431,394],[395,369],[369,400],[400,395],[334,333],[333,299],[299,334],[351,417],[417,168],[168,351],[352,280],[280,411],[411,352],[325,319],[319,320],[320,325],[295,296],[296,336],[336,295],[319,403],[403,404],[404,319],[330,348],[348,349],[349,330],[293,298],[298,333],[333,293],[323,454],[454,447],[447,323],[15,16],[16,315],[315,15],[358,429],[429,279],[279,358],[14,15],[15,316],[316,14],[285,336],[336,9],[9,285],[329,349],[349,350],[350,329],[374,380],[380,252],[252,374],[318,402],[402,403],[403,318],[6,197],[197,419],[419,6],[318,319],[319,325],[325,318],[367,364],[364,365],[365,367],[435,367],[367,397],[397,435],[344,438],[438,439],[439,344],[272,271],[271,311],[311,272],[195,5],[5,281],[281,195],[273,287],[287,291],[291,273],[396,428],[428,199],[199,396],[311,271],[271,268],[268,311],[283,444],[444,445],[445,283],[373,254],[254,339],[339,373],[282,334],[334,296],[296,282],[449,347],[347,346],[346,449],[264,447],[447,454],[454,264],[336,296],[296,299],[299,336],[338,10],[10,151],[151,338],[278,439],[439,455],[455,278],[292,407],[407,415],[415,292],[358,371],[371,355],[355,358],[340,345],[345,372],[372,340],[346,347],[347,280],[280,346],[442,443],[443,282],[282,442],[19,94],[94,370],[370,19],[441,442],[442,295],[295,441],[248,419],[419,197],[197,248],[263,255],[255,359],[359,263],[440,275],[275,274],[274,440],[300,383],[383,368],[368,300],[351,412],[412,465],[465,351],[263,467],[467,466],[466,263],[301,368],[368,389],[389,301],[395,378],[378,379],[379,395],[412,351],[351,419],[419,412],[436,426],[426,322],[322,436],[2,164],[164,393],[393,2],[370,462],[462,461],[461,370],[164,0],[0,267],[267,164],[302,11],[11,12],[12,302],[268,12],[12,13],[13,268],[293,300],[300,301],[301,293],[446,261],[261,340],[340,446],[330,266],[266,425],[425,330],[426,423],[423,391],[391,426],[429,355],[355,437],[437,429],[391,327],[327,326],[326,391],[440,457],[457,438],[438,440],[341,382],[382,362],[362,341],[459,457],[457,461],[461,459],[434,430],[430,394],[394,434],[414,463],[463,362],[362,414],[396,369],[369,262],[262,396],[354,461],[461,457],[457,354],[316,403],[403,402],[402,316],[315,404],[404,403],[403,315],[314,405],[405,404],[404,314],[313,406],[406,405],[405,313],[421,418],[418,406],[406,421],[366,401],[401,361],[361,366],[306,408],[408,407],[407,306],[291,409],[409,408],[408,291],[287,410],[410,409],[409,287],[432,436],[436,410],[410,432],[434,416],[416,411],[411,434],[264,368],[368,383],[383,264],[309,438],[438,457],[457,309],[352,376],[376,401],[401,352],[274,275],[275,4],[4,274],[421,428],[428,262],[262,421],[294,327],[327,358],[358,294],[433,416],[416,367],[367,433],[289,455],[455,439],[439,289],[462,370],[370,326],[326,462],[2,326],[326,370],[370,2],[305,460],[460,455],[455,305],[254,449],[449,448],[448,254],[255,261],[261,446],[446,255],[253,450],[450,449],[449,253],[252,451],[451,450],[450,252],[256,452],[452,451],[451,256],[341,453],[453,452],[452,341],[413,464],[464,463],[463,413],[441,413],[413,414],[414,441],[258,442],[442,441],[441,258],[257,443],[443,442],[442,257],[259,444],[444,443],[443,259],[260,445],[445,444],[444,260],[467,342],[342,445],[445,467],[459,458],[458,250],[250,459],[289,392],[392,290],[290,289],[290,328],[328,460],[460,290],[376,433],[433,435],[435,376],[250,290],[290,392],[392,250],[411,416],[416,433],[433,411],[341,463],[463,464],[464,341],[453,464],[464,465],[465,453],[357,465],[465,412],[412,357],[343,412],[412,399],[399,343],[360,363],[363,440],[440,360],[437,399],[399,456],[456,437],[420,456],[456,363],[363,420],[401,435],[435,288],[288,401],[372,383],[383,353],[353,372],[339,255],[255,249],[249,339],[448,261],[261,255],[255,448],[133,243],[243,190],[190,133],[133,155],[155,112],[112,133],[33,246],[246,247],[247,33],[33,130],[130,25],[25,33],[398,384],[384,286],[286,398],[362,398],[398,414],[414,362],[362,463],[463,341],[341,362],[263,359],[359,467],[467,263],[263,249],[249,255],[255,263],[466,467],[467,260],[260,466],[75,60],[60,166],[166,75],[238,239],[239,79],[79,238],[162,127],[127,139],[139,162],[72,11],[11,37],[37,72],[121,232],[232,120],[120,121],[73,72],[72,39],[39,73],[114,128],[128,47],[47,114],[233,232],[232,128],[128,233],[103,104],[104,67],[67,103],[152,175],[175,148],[148,152],[119,118],[118,101],[101,119],[74,73],[73,40],[40,74],[107,9],[9,108],[108,107],[49,48],[48,131],[131,49],[32,194],[194,211],[211,32],[184,74],[74,185],[185,184],[191,80],[80,183],[183,191],[185,40],[40,186],[186,185],[119,230],[230,118],[118,119],[210,202],[202,214],[214,210],[84,83],[83,17],[17,84],[77,76],[76,146],[146,77],[161,160],[160,30],[30,161],[190,56],[56,173],[173,190],[182,106],[106,194],[194,182],[138,135],[135,192],[192,138],[129,203],[203,98],[98,129],[54,21],[21,68],[68,54],[5,51],[51,4],[4,5],[145,144],[144,23],[23,145],[90,77],[77,91],[91,90],[207,205],[205,187],[187,207],[83,201],[201,18],[18,83],[181,91],[91,182],[182,181],[180,90],[90,181],[181,180],[16,85],[85,17],[17,16],[205,206],[206,36],[36,205],[176,148],[148,140],[140,176],[165,92],[92,39],[39,165],[245,193],[193,244],[244,245],[27,159],[159,28],[28,27],[30,247],[247,161],[161,30],[174,236],[236,196],[196,174],[103,54],[54,104],[104,103],[55,193],[193,8],[8,55],[111,117],[117,31],[31,111],[221,189],[189,55],[55,221],[240,98],[98,99],[99,240],[142,126],[126,100],[100,142],[219,166],[166,218],[218,219],[112,155],[155,26],[26,112],[198,209],[209,131],[131,198],[169,135],[135,150],[150,169],[114,47],[47,217],[217,114],[224,223],[223,53],[53,224],[220,45],[45,134],[134,220],[32,211],[211,140],[140,32],[109,67],[67,108],[108,109],[146,43],[43,91],[91,146],[231,230],[230,120],[120,231],[113,226],[226,247],[247,113],[105,63],[63,52],[52,105],[241,238],[238,242],[242,241],[124,46],[46,156],[156,124],[95,78],[78,96],[96,95],[70,46],[46,63],[63,70],[116,143],[143,227],[227,116],[116,123],[123,111],[111,116],[1,44],[44,19],[19,1],[3,236],[236,51],[51,3],[207,216],[216,205],[205,207],[26,154],[154,22],[22,26],[165,39],[39,167],[167,165],[199,200],[200,208],[208,199],[101,36],[36,100],[100,101],[43,57],[57,202],[202,43],[242,20],[20,99],[99,242],[56,28],[28,157],[157,56],[124,35],[35,113],[113,124],[29,160],[160,27],[27,29],[211,204],[204,210],[210,211],[124,113],[113,46],[46,124],[106,43],[43,204],[204,106],[96,62],[62,77],[77,96],[227,137],[137,116],[116,227],[73,41],[41,72],[72,73],[36,203],[203,142],[142,36],[235,64],[64,240],[240,235],[48,49],[49,64],[64,48],[42,41],[41,74],[74,42],[214,212],[212,207],[207,214],[183,42],[42,184],[184,183],[210,169],[169,211],[211,210],[140,170],[170,176],[176,140],[104,105],[105,69],[69,104],[193,122],[122,168],[168,193],[50,123],[123,187],[187,50],[89,96],[96,90],[90,89],[66,65],[65,107],[107,66],[179,89],[89,180],[180,179],[119,101],[101,120],[120,119],[68,63],[63,104],[104,68],[234,93],[93,227],[227,234],[16,15],[15,85],[85,16],[209,129],[129,49],[49,209],[15,14],[14,86],[86,15],[107,55],[55,9],[9,107],[120,100],[100,121],[121,120],[153,145],[145,22],[22,153],[178,88],[88,179],[179,178],[197,6],[6,196],[196,197],[89,88],[88,96],[96,89],[135,138],[138,136],[136,135],[138,215],[215,172],[172,138],[218,115],[115,219],[219,218],[41,42],[42,81],[81,41],[5,195],[195,51],[51,5],[57,43],[43,61],[61,57],[208,171],[171,199],[199,208],[41,81],[81,38],[38,41],[224,53],[53,225],[225,224],[24,144],[144,110],[110,24],[105,52],[52,66],[66,105],[118,229],[229,117],[117,118],[227,34],[34,234],[234,227],[66,107],[107,69],[69,66],[10,109],[109,151],[151,10],[219,48],[48,235],[235,219],[183,62],[62,191],[191,183],[142,129],[129,126],[126,142],[116,111],[111,143],[143,116],[118,117],[117,50],[50,118],[223,222],[222,52],[52,223],[94,19],[19,141],[141,94],[222,221],[221,65],[65,222],[196,3],[3,197],[197,196],[45,220],[220,44],[44,45],[156,70],[70,139],[139,156],[188,122],[122,245],[245,188],[139,71],[71,162],[162,139],[149,170],[170,150],[150,149],[122,188],[188,196],[196,122],[206,216],[216,92],[92,206],[164,2],[2,167],[167,164],[242,141],[141,241],[241,242],[0,164],[164,37],[37,0],[11,72],[72,12],[12,11],[12,38],[38,13],[13,12],[70,63],[63,71],[71,70],[31,226],[226,111],[111,31],[36,101],[101,205],[205,36],[203,206],[206,165],[165,203],[126,209],[209,217],[217,126],[98,165],[165,97],[97,98],[237,220],[220,218],[218,237],[237,239],[239,241],[241,237],[210,214],[214,169],[169,210],[140,171],[171,32],[32,140],[241,125],[125,237],[237,241],[179,86],[86,178],[178,179],[180,85],[85,179],[179,180],[181,84],[84,180],[180,181],[182,83],[83,181],[181,182],[194,201],[201,182],[182,194],[177,137],[137,132],[132,177],[184,76],[76,183],[183,184],[185,61],[61,184],[184,185],[186,57],[57,185],[185,186],[216,212],[212,186],[186,216],[192,214],[214,187],[187,192],[139,34],[34,156],[156,139],[218,79],[79,237],[237,218],[147,123],[123,177],[177,147],[45,44],[44,4],[4,45],[208,201],[201,32],[32,208],[98,64],[64,129],[129,98],[192,213],[213,138],[138,192],[235,59],[59,219],[219,235],[141,242],[242,97],[97,141],[97,2],[2,141],[141,97],[240,75],[75,235],[235,240],[229,24],[24,228],[228,229],[31,25],[25,226],[226,31],[230,23],[23,229],[229,230],[231,22],[22,230],[230,231],[232,26],[26,231],[231,232],[233,112],[112,232],[232,233],[244,189],[189,243],[243,244],[189,221],[221,190],[190,189],[222,28],[28,221],[221,222],[223,27],[27,222],[222,223],[224,29],[29,223],[223,224],[225,30],[30,224],[224,225],[113,247],[247,225],[225,113],[99,60],[60,240],[240,99],[213,147],[147,215],[215,213],[60,20],[20,166],[166,60],[192,187],[187,213],[213,192],[243,112],[112,244],[244,243],[244,233],[233,245],[245,244],[245,128],[128,188],[188,245],[188,114],[114,174],[174,188],[134,131],[131,220],[220,134],[174,217],[217,236],[236,174],[236,198],[198,134],[134,236],[215,177],[177,58],[58,215],[156,143],[143,124],[124,156],[25,110],[110,7],[7,25],[31,228],[228,25],[25,31],[264,356],[356,368],[368,264],[0,11],[11,267],[267,0],[451,452],[452,349],[349,451],[267,302],[302,269],[269,267],[350,357],[357,277],[277,350],[350,452],[452,357],[357,350],[299,333],[333,297],[297,299],[396,175],[175,377],[377,396],[280,347],[347,330],[330,280],[269,303],[303,270],[270,269],[151,9],[9,337],[337,151],[344,278],[278,360],[360,344],[424,418],[418,431],[431,424],[270,304],[304,409],[409,270],[272,310],[310,407],[407,272],[322,270],[270,410],[410,322],[449,450],[450,347],[347,449],[432,422],[422,434],[434,432],[18,313],[313,17],[17,18],[291,306],[306,375],[375,291],[259,387],[387,260],[260,259],[424,335],[335,418],[418,424],[434,364],[364,416],[416,434],[391,423],[423,327],[327,391],[301,251],[251,298],[298,301],[275,281],[281,4],[4,275],[254,373],[373,253],[253,254],[375,307],[307,321],[321,375],[280,425],[425,411],[411,280],[200,421],[421,18],[18,200],[335,321],[321,406],[406,335],[321,320],[320,405],[405,321],[314,315],[315,17],[17,314],[423,426],[426,266],[266,423],[396,377],[377,369],[369,396],[270,322],[322,269],[269,270],[413,417],[417,464],[464,413],[385,386],[386,258],[258,385],[248,456],[456,419],[419,248],[298,284],[284,333],[333,298],[168,417],[417,8],[8,168],[448,346],[346,261],[261,448],[417,413],[413,285],[285,417],[326,327],[327,328],[328,326],[277,355],[355,329],[329,277],[309,392],[392,438],[438,309],[381,382],[382,256],[256,381],[279,429],[429,360],[360,279],[365,364],[364,379],[379,365],[355,277],[277,437],[437,355],[282,443],[443,283],[283,282],[281,275],[275,363],[363,281],[395,431],[431,369],[369,395],[299,297],[297,337],[337,299],[335,273],[273,321],[321,335],[348,450],[450,349],[349,348],[359,446],[446,467],[467,359],[283,293],[293,282],[282,283],[250,458],[458,462],[462,250],[300,276],[276,383],[383,300],[292,308],[308,325],[325,292],[283,276],[276,293],[293,283],[264,372],[372,447],[447,264],[346,352],[352,340],[340,346],[354,274],[274,19],[19,354],[363,456],[456,281],[281,363],[426,436],[436,425],[425,426],[380,381],[381,252],[252,380],[267,269],[269,393],[393,267],[421,200],[200,428],[428,421],[371,266],[266,329],[329,371],[432,287],[287,422],[422,432],[290,250],[250,328],[328,290],[385,258],[258,384],[384,385],[446,265],[265,342],[342,446],[386,387],[387,257],[257,386],[422,424],[424,430],[430,422],[445,342],[342,276],[276,445],[422,273],[273,424],[424,422],[306,292],[292,307],[307,306],[352,366],[366,345],[345,352],[268,271],[271,302],[302,268],[358,423],[423,371],[371,358],[327,294],[294,460],[460,327],[331,279],[279,294],[294,331],[303,271],[271,304],[304,303],[436,432],[432,427],[427,436],[304,272],[272,408],[408,304],[395,394],[394,431],[431,395],[378,395],[395,400],[400,378],[296,334],[334,299],[299,296],[6,351],[351,168],[168,6],[376,352],[352,411],[411,376],[307,325],[325,320],[320,307],[285,295],[295,336],[336,285],[320,319],[319,404],[404,320],[329,330],[330,349],[349,329],[334,293],[293,333],[333,334],[366,323],[323,447],[447,366],[316,15],[15,315],[315,316],[331,358],[358,279],[279,331],[317,14],[14,316],[316,317],[8,285],[285,9],[9,8],[277,329],[329,350],[350,277],[253,374],[374,252],[252,253],[319,318],[318,403],[403,319],[351,6],[6,419],[419,351],[324,318],[318,325],[325,324],[397,367],[367,365],[365,397],[288,435],[435,397],[397,288],[278,344],[344,439],[439,278],[310,272],[272,311],[311,310],[248,195],[195,281],[281,248],[375,273],[273,291],[291,375],[175,396],[396,199],[199,175],[312,311],[311,268],[268,312],[276,283],[283,445],[445,276],[390,373],[373,339],[339,390],[295,282],[282,296],[296,295],[448,449],[449,346],[346,448],[356,264],[264,454],[454,356],[337,336],[336,299],[299,337],[337,338],[338,151],[151,337],[294,278],[278,455],[455,294],[308,292],[292,415],[415,308],[429,358],[358,355],[355,429],[265,340],[340,372],[372,265],[352,346],[346,280],[280,352],[295,442],[442,282],[282,295],[354,19],[19,370],[370,354],[285,441],[441,295],[295,285],[195,248],[248,197],[197,195],[457,440],[440,274],[274,457],[301,300],[300,368],[368,301],[417,351],[351,465],[465,417],[251,301],[301,389],[389,251],[394,395],[395,379],[379,394],[399,412],[412,419],[419,399],[410,436],[436,322],[322,410],[326,2],[2,393],[393,326],[354,370],[370,461],[461,354],[393,164],[164,267],[267,393],[268,302],[302,12],[12,268],[312,268],[268,13],[13,312],[298,293],[293,301],[301,298],[265,446],[446,340],[340,265],[280,330],[330,425],[425,280],[322,426],[426,391],[391,322],[420,429],[429,437],[437,420],[393,391],[391,326],[326,393],[344,440],[440,438],[438,344],[458,459],[459,461],[461,458],[364,434],[434,394],[394,364],[428,396],[396,262],[262,428],[274,354],[354,457],[457,274],[317,316],[316,402],[402,317],[316,315],[315,403],[403,316],[315,314],[314,404],[404,315],[314,313],[313,405],[405,314],[313,421],[421,406],[406,313],[323,366],[366,361],[361,323],[292,306],[306,407],[407,292],[306,291],[291,408],[408,306],[291,287],[287,409],[409,291],[287,432],[432,410],[410,287],[427,434],[434,411],[411,427],[372,264],[264,383],[383,372],[459,309],[309,457],[457,459],[366,352],[352,401],[401,366],[1,274],[274,4],[4,1],[418,421],[421,262],[262,418],[331,294],[294,358],[358,331],[435,433],[433,367],[367,435],[392,289],[289,439],[439,392],[328,462],[462,326],[326,328],[94,2],[2,370],[370,94],[289,305],[305,455],[455,289],[339,254],[254,448],[448,339],[359,255],[255,446],[446,359],[254,253],[253,449],[449,254],[253,252],[252,450],[450,253],[252,256],[256,451],[451,252],[256,341],[341,452],[452,256],[414,413],[413,463],[463,414],[286,441],[441,414],[414,286],[286,258],[258,441],[441,286],[258,257],[257,442],[442,258],[257,259],[259,443],[443,257],[259,260],[260,444],[444,259],[260,467],[467,445],[445,260],[309,459],[459,250],[250,309],[305,289],[289,290],[290,305],[305,290],[290,460],[460,305],[401,376],[376,435],[435,401],[309,250],[250,392],[392,309],[376,411],[411,433],[433,376],[453,341],[341,464],[464,453],[357,453],[453,465],[465,357],[343,357],[357,412],[412,343],[437,343],[343,399],[399,437],[344,360],[360,440],[440,344],[420,437],[437,456],[456,420],[360,420],[420,363],[363,360],[361,401],[401,288],[288,361],[265,372],[372,353],[353,265],[390,339],[339,249],[249,390],[339,448],[448,255],[255,339]);function Ch(t){t.j={faceLandmarks:[],faceBlendshapes:[],facialTransformationMatrixes:[]}}var Rh=class extends yh{constructor(t,e){super(new uh(t,e),"image_in","norm_rect",!1),this.j={faceLandmarks:[],faceBlendshapes:[],facialTransformationMatrixes:[]},this.outputFacialTransformationMatrixes=this.outputFaceBlendshapes=!1,Yn(t=this.h=new ro,0,1,e=new Ws),this.v=new no,Yn(this.h,0,3,this.v),this.s=new Ks,Yn(this.h,0,2,this.s),ii(this.s,4,1),ri(this.s,2,.5),ri(this.v,2,.5),ri(this.h,4,.5)}get baseOptions(){return Xn(this.h,Ws,1)}set baseOptions(t){Yn(this.h,0,1,t)}o(t){return"numFaces"in t&&ii(this.s,4,t.numFaces??1),"minFaceDetectionConfidence"in t&&ri(this.s,2,t.minFaceDetectionConfidence??.5),"minTrackingConfidence"in t&&ri(this.h,4,t.minTrackingConfidence??.5),"minFacePresenceConfidence"in t&&ri(this.v,2,t.minFacePresenceConfidence??.5),"outputFaceBlendshapes"in t&&(this.outputFaceBlendshapes=!!t.outputFaceBlendshapes),"outputFacialTransformationMatrixes"in t&&(this.outputFacialTransformationMatrixes=!!t.outputFacialTransformationMatrixes),this.l(t)}F(t,e){return Ch(this),fh(this,t,e),this.j}G(t,e,n){return Ch(this),gh(this,t,n,e),this.j}m(){var t=new Jr;Kr(t,"image_in"),Kr(t,"norm_rect"),qr(t,"face_landmarks");const e=new Mr;si(e,oo,this.h);const n=new zr;Nr(n,"mediapipe.tasks.vision.face_landmarker.FaceLandmarkerGraph"),Gr(n,"IMAGE:image_in"),Gr(n,"NORM_RECT:norm_rect"),$r(n,"NORM_LANDMARKS:face_landmarks"),n.o(e),Yr(t,n),this.g.attachProtoVectorListener("face_landmarks",((t,e)=>{for(const e of t)t=xs(e),this.j.faceLandmarks.push(Ko(t));fa(this,e)})),this.g.attachEmptyPacketListener("face_landmarks",(t=>{fa(this,t)})),this.outputFaceBlendshapes&&(qr(t,"blendshapes"),$r(n,"BLENDSHAPES:blendshapes"),this.g.attachProtoVectorListener("blendshapes",((t,e)=>{if(this.outputFaceBlendshapes)for(const e of t)t=ss(e),this.j.faceBlendshapes.push(Wo(t.g()??[]));fa(this,e)})),this.g.attachEmptyPacketListener("blendshapes",(t=>{fa(this,t)}))),this.outputFacialTransformationMatrixes&&(qr(t,"face_geometry"),$r(n,"FACE_GEOMETRY:face_geometry"),this.g.attachProtoVectorListener("face_geometry",((t,e)=>{if(this.outputFacialTransformationMatrixes)for(const e of t)(t=Xn(to(e),Ts,2))&&this.j.facialTransformationMatrixes.push({rows:ti(Zn(t,1))??0,columns:ti(Zn(t,2))??0,data:Fn(t,3,Oe).slice()??[]});fa(this,e)})),this.g.attachEmptyPacketListener("face_geometry",(t=>{fa(this,t)}))),t=t.g(),this.setGraph(new Uint8Array(t),!0)}};Rh.prototype.detectForVideo=Rh.prototype.G,Rh.prototype.detect=Rh.prototype.F,Rh.prototype.setOptions=Rh.prototype.o,Rh.createFromModelPath=function(t,e){return dh(Rh,t,{baseOptions:{modelAssetPath:e}})},Rh.createFromModelBuffer=function(t,e){return dh(Rh,t,{baseOptions:{modelAssetBuffer:e}})},Rh.createFromOptions=function(t,e){return dh(Rh,t,e)},Rh.FACE_LANDMARKS_LIPS=_h,Rh.FACE_LANDMARKS_LEFT_EYE=Ah,Rh.FACE_LANDMARKS_LEFT_EYEBROW=bh,Rh.FACE_LANDMARKS_LEFT_IRIS=wh,Rh.FACE_LANDMARKS_RIGHT_EYE=Eh,Rh.FACE_LANDMARKS_RIGHT_EYEBROW=xh,Rh.FACE_LANDMARKS_RIGHT_IRIS=Th,Rh.FACE_LANDMARKS_FACE_OVAL=kh,Rh.FACE_LANDMARKS_CONTOURS=Lh,Rh.FACE_LANDMARKS_TESSELATION=Sh;var Mh=class extends yh{constructor(t,e){super(new uh(t,e),"image_in","norm_rect",!0),Yn(t=this.j=new ao,0,1,e=new Ws)}get baseOptions(){return Xn(this.j,Ws,1)}set baseOptions(t){Yn(this.j,0,1,t)}o(t){return super.l(t)}Pa(t,e,n){const i="function"!=typeof e?e:{};if(this.h="function"==typeof e?e:n,fh(this,t,i??{}),!this.h)return this.s}m(){var t=new Jr;Kr(t,"image_in"),Kr(t,"norm_rect"),qr(t,"stylized_image");const e=new Mr;si(e,ho,this.j);const n=new zr;Nr(n,"mediapipe.tasks.vision.face_stylizer.FaceStylizerGraph"),Gr(n,"IMAGE:image_in"),Gr(n,"NORM_RECT:norm_rect"),$r(n,"STYLIZED_IMAGE:stylized_image"),n.o(e),Yr(t,n),this.g.W("stylized_image",((t,e)=>{var n=!this.h,i=t.data,r=t.width;const s=r*(t=t.height);if(i instanceof Uint8Array)if(i.length===3*s){const e=new Uint8ClampedArray(4*s);for(let t=0;t<s;++t)e[4*t]=i[3*t],e[4*t+1]=i[3*t+1],e[4*t+2]=i[3*t+2],e[4*t+3]=255;i=new ImageData(e,r,t)}else{if(i.length!==4*s)throw Error("Unsupported channel count: "+i.length/s);i=new ImageData(new Uint8ClampedArray(i.buffer,i.byteOffset,i.length),r,t)}else if(!(i instanceof WebGLTexture))throw Error(`Unsupported format: ${i.constructor.name}`);r=new oh([i],!1,!1,this.g.i.canvas,this.O,r,t),this.s=n=n?r.clone():r,this.h&&this.h(n),fa(this,e)})),this.g.attachEmptyPacketListener("stylized_image",(t=>{this.s=null,this.h&&this.h(null),fa(this,t)})),t=t.g(),this.setGraph(new Uint8Array(t),!0)}};Mh.prototype.stylize=Mh.prototype.Pa,Mh.prototype.setOptions=Mh.prototype.o,Mh.createFromModelPath=function(t,e){return dh(Mh,t,{baseOptions:{modelAssetPath:e}})},Mh.createFromModelBuffer=function(t,e){return dh(Mh,t,{baseOptions:{modelAssetBuffer:e}})},Mh.createFromOptions=function(t,e){return dh(Mh,t,e)};var Fh=hh([0,1],[1,2],[2,3],[3,4],[0,5],[5,6],[6,7],[7,8],[5,9],[9,10],[10,11],[11,12],[9,13],[13,14],[14,15],[15,16],[13,17],[0,17],[17,18],[18,19],[19,20]);function Dh(t){t.gestures=[],t.landmarks=[],t.worldLandmarks=[],t.handedness=[]}function Ih(t){return 0===t.gestures.length?{gestures:[],landmarks:[],worldLandmarks:[],handedness:[],handednesses:[]}:{gestures:t.gestures,landmarks:t.landmarks,worldLandmarks:t.worldLandmarks,handedness:t.handedness,handednesses:t.handedness}}function Ph(t,e=!0){const n=[];for(const r of t){var i=ss(r);t=[];for(const n of i.g())i=e&&null!=Zn(n,1)?ti(Zn(n,1)):-1,t.push({score:ei(n,2)??0,index:i,categoryName:Qn(n,3)??""??"",displayName:Qn(n,4)??""??""});n.push(t)}return n}var Oh=class extends yh{constructor(t,e){super(new uh(t,e),"image_in","norm_rect",!1),this.gestures=[],this.landmarks=[],this.worldLandmarks=[],this.handedness=[],Yn(t=this.j=new bo,0,1,e=new Ws),this.s=new _o,Yn(this.j,0,2,this.s),this.D=new yo,Yn(this.s,0,3,this.D),this.v=new go,Yn(this.s,0,2,this.v),this.h=new po,Yn(this.j,0,3,this.h),ri(this.v,2,.5),ri(this.s,4,.5),ri(this.D,2,.5)}get baseOptions(){return Xn(this.j,Ws,1)}set baseOptions(t){Yn(this.j,0,1,t)}o(t){if(ii(this.v,3,t.numHands??1),"minHandDetectionConfidence"in t&&ri(this.v,2,t.minHandDetectionConfidence??.5),"minTrackingConfidence"in t&&ri(this.s,4,t.minTrackingConfidence??.5),"minHandPresenceConfidence"in t&&ri(this.D,2,t.minHandPresenceConfidence??.5),t.cannedGesturesClassifierOptions){var e=new co,n=e,i=Ho(t.cannedGesturesClassifierOptions,Xn(this.h,co,3)?.h());Yn(n,0,2,i),Yn(this.h,0,3,e)}else void 0===t.cannedGesturesClassifierOptions&&Xn(this.h,co,3)?.g();return t.customGesturesClassifierOptions?(Yn(n=e=new co,0,2,i=Ho(t.customGesturesClassifierOptions,Xn(this.h,co,4)?.h())),Yn(this.h,0,4,e)):void 0===t.customGesturesClassifierOptions&&Xn(this.h,co,4)?.g(),this.l(t)}Ka(t,e){return Dh(this),fh(this,t,e),Ih(this)}La(t,e,n){return Dh(this),gh(this,t,n,e),Ih(this)}m(){var t=new Jr;Kr(t,"image_in"),Kr(t,"norm_rect"),qr(t,"hand_gestures"),qr(t,"hand_landmarks"),qr(t,"world_hand_landmarks"),qr(t,"handedness");const e=new Mr;si(e,xo,this.j);const n=new zr;Nr(n,"mediapipe.tasks.vision.gesture_recognizer.GestureRecognizerGraph"),Gr(n,"IMAGE:image_in"),Gr(n,"NORM_RECT:norm_rect"),$r(n,"HAND_GESTURES:hand_gestures"),$r(n,"LANDMARKS:hand_landmarks"),$r(n,"WORLD_LANDMARKS:world_hand_landmarks"),$r(n,"HANDEDNESS:handedness"),n.o(e),Yr(t,n),this.g.attachProtoVectorListener("hand_landmarks",((t,e)=>{for(const e of t){t=xs(e);const n=[];for(const e of Wn(t,bs,1))n.push({x:ei(e,1)??0,y:ei(e,2)??0,z:ei(e,3)??0,visibility:ei(e,4)??0});this.landmarks.push(n)}fa(this,e)})),this.g.attachEmptyPacketListener("hand_landmarks",(t=>{fa(this,t)})),this.g.attachProtoVectorListener("world_hand_landmarks",((t,e)=>{for(const e of t){t=As(e);const n=[];for(const e of Wn(t,ys,1))n.push({x:ei(e,1)??0,y:ei(e,2)??0,z:ei(e,3)??0,visibility:ei(e,4)??0});this.worldLandmarks.push(n)}fa(this,e)})),this.g.attachEmptyPacketListener("world_hand_landmarks",(t=>{fa(this,t)})),this.g.attachProtoVectorListener("hand_gestures",((t,e)=>{this.gestures.push(...Ph(t,!1)),fa(this,e)})),this.g.attachEmptyPacketListener("hand_gestures",(t=>{fa(this,t)})),this.g.attachProtoVectorListener("handedness",((t,e)=>{this.handedness.push(...Ph(t)),fa(this,e)})),this.g.attachEmptyPacketListener("handedness",(t=>{fa(this,t)})),t=t.g(),this.setGraph(new Uint8Array(t),!0)}};function Uh(t){return{landmarks:t.landmarks,worldLandmarks:t.worldLandmarks,handednesses:t.handedness,handedness:t.handedness}}Oh.prototype.recognizeForVideo=Oh.prototype.La,Oh.prototype.recognize=Oh.prototype.Ka,Oh.prototype.setOptions=Oh.prototype.o,Oh.createFromModelPath=function(t,e){return dh(Oh,t,{baseOptions:{modelAssetPath:e}})},Oh.createFromModelBuffer=function(t,e){return dh(Oh,t,{baseOptions:{modelAssetBuffer:e}})},Oh.createFromOptions=function(t,e){return dh(Oh,t,e)},Oh.HAND_CONNECTIONS=Fh;var Bh=class extends yh{constructor(t,e){super(new uh(t,e),"image_in","norm_rect",!1),this.landmarks=[],this.worldLandmarks=[],this.handedness=[],Yn(t=this.h=new _o,0,1,e=new Ws),this.s=new yo,Yn(this.h,0,3,this.s),this.j=new go,Yn(this.h,0,2,this.j),ii(this.j,3,1),ri(this.j,2,.5),ri(this.s,2,.5),ri(this.h,4,.5)}get baseOptions(){return Xn(this.h,Ws,1)}set baseOptions(t){Yn(this.h,0,1,t)}o(t){return"numHands"in t&&ii(this.j,3,t.numHands??1),"minHandDetectionConfidence"in t&&ri(this.j,2,t.minHandDetectionConfidence??.5),"minTrackingConfidence"in t&&ri(this.h,4,t.minTrackingConfidence??.5),"minHandPresenceConfidence"in t&&ri(this.s,2,t.minHandPresenceConfidence??.5),this.l(t)}F(t,e){return this.landmarks=[],this.worldLandmarks=[],this.handedness=[],fh(this,t,e),Uh(this)}G(t,e,n){return this.landmarks=[],this.worldLandmarks=[],this.handedness=[],gh(this,t,n,e),Uh(this)}m(){var t=new Jr;Kr(t,"image_in"),Kr(t,"norm_rect"),qr(t,"hand_landmarks"),qr(t,"world_hand_landmarks"),qr(t,"handedness");const e=new Mr;si(e,Eo,this.h);const n=new zr;Nr(n,"mediapipe.tasks.vision.hand_landmarker.HandLandmarkerGraph"),Gr(n,"IMAGE:image_in"),Gr(n,"NORM_RECT:norm_rect"),$r(n,"LANDMARKS:hand_landmarks"),$r(n,"WORLD_LANDMARKS:world_hand_landmarks"),$r(n,"HANDEDNESS:handedness"),n.o(e),Yr(t,n),this.g.attachProtoVectorListener("hand_landmarks",((t,e)=>{for(const e of t)t=xs(e),this.landmarks.push(Ko(t));fa(this,e)})),this.g.attachEmptyPacketListener("hand_landmarks",(t=>{fa(this,t)})),this.g.attachProtoVectorListener("world_hand_landmarks",((t,e)=>{for(const e of t)t=As(e),this.worldLandmarks.push(qo(t));fa(this,e)})),this.g.attachEmptyPacketListener("world_hand_landmarks",(t=>{fa(this,t)})),this.g.attachProtoVectorListener("handedness",((t,e)=>{var n=this.handedness,i=n.push;const r=[];for(const e of t){t=ss(e);const n=[];for(const e of t.g())n.push({score:ei(e,2)??0,index:ti(Zn(e,1))??-1,categoryName:Qn(e,3)??""??"",displayName:Qn(e,4)??""??""});r.push(n)}i.call(n,...r),fa(this,e)})),this.g.attachEmptyPacketListener("handedness",(t=>{fa(this,t)})),t=t.g(),this.setGraph(new Uint8Array(t),!0)}};Bh.prototype.detectForVideo=Bh.prototype.G,Bh.prototype.detect=Bh.prototype.F,Bh.prototype.setOptions=Bh.prototype.o,Bh.createFromModelPath=function(t,e){return dh(Bh,t,{baseOptions:{modelAssetPath:e}})},Bh.createFromModelBuffer=function(t,e){return dh(Bh,t,{baseOptions:{modelAssetBuffer:e}})},Bh.createFromOptions=function(t,e){return dh(Bh,t,e)},Bh.HAND_CONNECTIONS=Fh;var Nh=hh([0,1],[1,2],[2,3],[3,7],[0,4],[4,5],[5,6],[6,8],[9,10],[11,12],[11,13],[13,15],[15,17],[15,19],[15,21],[17,19],[12,14],[14,16],[16,18],[16,20],[16,22],[18,20],[11,23],[12,24],[23,24],[23,25],[24,26],[25,27],[26,28],[27,29],[28,30],[29,31],[30,32],[27,31],[28,32]);function Gh(t){t.h={faceLandmarks:[],faceBlendshapes:[],poseLandmarks:[],poseWorldLandmarks:[],poseSegmentationMasks:[],leftHandLandmarks:[],leftHandWorldLandmarks:[],rightHandLandmarks:[],rightHandWorldLandmarks:[]}}function $h(t){try{if(!t.D)return t.h;t.D(t.h)}finally{ya(t)}}function zh(t,e){t=xs(t),e.push(Ko(t))}var Vh=class extends yh{constructor(t,e){super(new uh(t,e),"input_frames_image",null,!1),this.h={faceLandmarks:[],faceBlendshapes:[],poseLandmarks:[],poseWorldLandmarks:[],poseSegmentationMasks:[],leftHandLandmarks:[],leftHandWorldLandmarks:[],rightHandLandmarks:[],rightHandWorldLandmarks:[]},this.outputPoseSegmentationMasks=this.outputFaceBlendshapes=!1,Yn(t=this.j=new Mo,0,1,e=new Ws),this.I=new yo,Yn(this.j,0,2,this.I),this.aa=new To,Yn(this.j,0,3,this.aa),this.s=new Ks,Yn(this.j,0,4,this.s),this.P=new no,Yn(this.j,0,5,this.P),this.v=new Lo,Yn(this.j,0,6,this.v),this.J=new Co,Yn(this.j,0,7,this.J),ri(this.s,2,.5),ri(this.s,3,.3),ri(this.P,2,.5),ri(this.v,2,.5),ri(this.v,3,.3),ri(this.J,2,.5),ri(this.I,2,.5)}get baseOptions(){return Xn(this.j,Ws,1)}set baseOptions(t){Yn(this.j,0,1,t)}o(t){return"minFaceDetectionConfidence"in t&&ri(this.s,2,t.minFaceDetectionConfidence??.5),"minFaceSuppressionThreshold"in t&&ri(this.s,3,t.minFaceSuppressionThreshold??.3),"minFacePresenceConfidence"in t&&ri(this.P,2,t.minFacePresenceConfidence??.5),"outputFaceBlendshapes"in t&&(this.outputFaceBlendshapes=!!t.outputFaceBlendshapes),"minPoseDetectionConfidence"in t&&ri(this.v,2,t.minPoseDetectionConfidence??.5),"minPoseSuppressionThreshold"in t&&ri(this.v,3,t.minPoseSuppressionThreshold??.3),"minPosePresenceConfidence"in t&&ri(this.J,2,t.minPosePresenceConfidence??.5),"outputPoseSegmentationMasks"in t&&(this.outputPoseSegmentationMasks=!!t.outputPoseSegmentationMasks),"minHandLandmarksConfidence"in t&&ri(this.I,2,t.minHandLandmarksConfidence??.5),this.l(t)}F(t,e,n){const i="function"!=typeof e?e:{};return this.D="function"==typeof e?e:n,Gh(this),fh(this,t,i),$h(this)}G(t,e,n,i){const r="function"!=typeof n?n:{};return this.D="function"==typeof n?n:i,Gh(this),gh(this,t,r,e),$h(this)}m(){var t=new Jr;Kr(t,"input_frames_image"),qr(t,"pose_landmarks"),qr(t,"pose_world_landmarks"),qr(t,"face_landmarks"),qr(t,"left_hand_landmarks"),qr(t,"left_hand_world_landmarks"),qr(t,"right_hand_landmarks"),qr(t,"right_hand_world_landmarks");const e=new Mr,n=new Ar;Bn(n,1,Ye("type.googleapis.com/mediapipe.tasks.vision.holistic_landmarker.proto.HolisticLandmarkerGraphOptions"),""),function(t,e){if(null!=e)if(Array.isArray(e))Ln(t,2,vn(e,An,void 0,void 0,!1));else{if(!("string"==typeof e||e instanceof at||Q(e)))throw Error("invalid value in Any.value field: "+e+" expected a ByteString, a base64 encoded string, a Uint8Array or a jspb array");Bn(t,2,Le(e,!1,!1),st())}}(n,this.j.g());const i=new zr;Nr(i,"mediapipe.tasks.vision.holistic_landmarker.HolisticLandmarkerGraph"),Jn(i,8,Ar,n),Gr(i,"IMAGE:input_frames_image"),$r(i,"POSE_LANDMARKS:pose_landmarks"),$r(i,"POSE_WORLD_LANDMARKS:pose_world_landmarks"),$r(i,"FACE_LANDMARKS:face_landmarks"),$r(i,"LEFT_HAND_LANDMARKS:left_hand_landmarks"),$r(i,"LEFT_HAND_WORLD_LANDMARKS:left_hand_world_landmarks"),$r(i,"RIGHT_HAND_LANDMARKS:right_hand_landmarks"),$r(i,"RIGHT_HAND_WORLD_LANDMARKS:right_hand_world_landmarks"),i.o(e),Yr(t,i),ga(this,t),this.g.attachProtoListener("pose_landmarks",((t,e)=>{zh(t,this.h.poseLandmarks),fa(this,e)})),this.g.attachEmptyPacketListener("pose_landmarks",(t=>{fa(this,t)})),this.g.attachProtoListener("pose_world_landmarks",((t,e)=>{var n=this.h.poseWorldLandmarks;t=As(t),n.push(qo(t)),fa(this,e)})),this.g.attachEmptyPacketListener("pose_world_landmarks",(t=>{fa(this,t)})),this.outputPoseSegmentationMasks&&($r(i,"POSE_SEGMENTATION_MASK:pose_segmentation_mask"),ma(this,"pose_segmentation_mask"),this.g.W("pose_segmentation_mask",((t,e)=>{this.h.poseSegmentationMasks=[mh(this,t,!0,!this.D)],fa(this,e)})),this.g.attachEmptyPacketListener("pose_segmentation_mask",(t=>{this.h.poseSegmentationMasks=[],fa(this,t)}))),this.g.attachProtoListener("face_landmarks",((t,e)=>{zh(t,this.h.faceLandmarks),fa(this,e)})),this.g.attachEmptyPacketListener("face_landmarks",(t=>{fa(this,t)})),this.outputFaceBlendshapes&&(qr(t,"extra_blendshapes"),$r(i,"FACE_BLENDSHAPES:extra_blendshapes"),this.g.attachProtoListener("extra_blendshapes",((t,e)=>{var n=this.h.faceBlendshapes;this.outputFaceBlendshapes&&(t=ss(t),n.push(Wo(t.g()??[]))),fa(this,e)})),this.g.attachEmptyPacketListener("extra_blendshapes",(t=>{fa(this,t)}))),this.g.attachProtoListener("left_hand_landmarks",((t,e)=>{zh(t,this.h.leftHandLandmarks),fa(this,e)})),this.g.attachEmptyPacketListener("left_hand_landmarks",(t=>{fa(this,t)})),this.g.attachProtoListener("left_hand_world_landmarks",((t,e)=>{var n=this.h.leftHandWorldLandmarks;t=As(t),n.push(qo(t)),fa(this,e)})),this.g.attachEmptyPacketListener("left_hand_world_landmarks",(t=>{fa(this,t)})),this.g.attachProtoListener("right_hand_landmarks",((t,e)=>{zh(t,this.h.rightHandLandmarks),fa(this,e)})),this.g.attachEmptyPacketListener("right_hand_landmarks",(t=>{fa(this,t)})),this.g.attachProtoListener("right_hand_world_landmarks",((t,e)=>{var n=this.h.rightHandWorldLandmarks;t=As(t),n.push(qo(t)),fa(this,e)})),this.g.attachEmptyPacketListener("right_hand_world_landmarks",(t=>{fa(this,t)})),t=t.g(),this.setGraph(new Uint8Array(t),!0)}};Vh.prototype.detectForVideo=Vh.prototype.G,Vh.prototype.detect=Vh.prototype.F,Vh.prototype.setOptions=Vh.prototype.o,Vh.createFromModelPath=function(t,e){return dh(Vh,t,{baseOptions:{modelAssetPath:e}})},Vh.createFromModelBuffer=function(t,e){return dh(Vh,t,{baseOptions:{modelAssetBuffer:e}})},Vh.createFromOptions=function(t,e){return dh(Vh,t,e)},Vh.HAND_CONNECTIONS=Fh,Vh.POSE_CONNECTIONS=Nh,Vh.FACE_LANDMARKS_LIPS=_h,Vh.FACE_LANDMARKS_LEFT_EYE=Ah,Vh.FACE_LANDMARKS_LEFT_EYEBROW=bh,Vh.FACE_LANDMARKS_LEFT_IRIS=wh,Vh.FACE_LANDMARKS_RIGHT_EYE=Eh,Vh.FACE_LANDMARKS_RIGHT_EYEBROW=xh,Vh.FACE_LANDMARKS_RIGHT_IRIS=Th,Vh.FACE_LANDMARKS_FACE_OVAL=kh,Vh.FACE_LANDMARKS_CONTOURS=Lh,Vh.FACE_LANDMARKS_TESSELATION=Sh;var jh=class extends yh{constructor(t,e){super(new uh(t,e),"input_image","norm_rect",!0),this.j={classifications:[]},Yn(t=this.h=new Fo,0,1,e=new Ws)}get baseOptions(){return Xn(this.h,Ws,1)}set baseOptions(t){Yn(this.h,0,1,t)}o(t){return Yn(this.h,0,2,Ho(t,Xn(this.h,Ns,2))),this.l(t)}ua(t,e){return this.j={classifications:[]},fh(this,t,e),this.j}va(t,e,n){return this.j={classifications:[]},gh(this,t,n,e),this.j}m(){var t=new Jr;Kr(t,"input_image"),Kr(t,"norm_rect"),qr(t,"classifications");const e=new Mr;si(e,Do,this.h);const n=new zr;Nr(n,"mediapipe.tasks.vision.image_classifier.ImageClassifierGraph"),Gr(n,"IMAGE:input_image"),Gr(n,"NORM_RECT:norm_rect"),$r(n,"CLASSIFICATIONS:classifications"),n.o(e),Yr(t,n),this.g.attachProtoListener("classifications",((t,e)=>{this.j=function(t){const e={classifications:Wn(t,Ss,1).map((t=>Wo(Xn(t,is,4)?.g()??[],ti(Zn(t,2)),Qn(t,3)??"")))};return null!=He(Tn(t,2))&&(e.timestampMs=ti(He(Tn(t,2)))),e}(Ms(t)),fa(this,e)})),this.g.attachEmptyPacketListener("classifications",(t=>{fa(this,t)})),t=t.g(),this.setGraph(new Uint8Array(t),!0)}};jh.prototype.classifyForVideo=jh.prototype.va,jh.prototype.classify=jh.prototype.ua,jh.prototype.setOptions=jh.prototype.o,jh.createFromModelPath=function(t,e){return dh(jh,t,{baseOptions:{modelAssetPath:e}})},jh.createFromModelBuffer=function(t,e){return dh(jh,t,{baseOptions:{modelAssetBuffer:e}})},jh.createFromOptions=function(t,e){return dh(jh,t,e)};var Xh=class extends yh{constructor(t,e){super(new uh(t,e),"image_in","norm_rect",!0),this.h=new Io,this.embeddings={embeddings:[]},Yn(t=this.h,0,1,e=new Ws)}get baseOptions(){return Xn(this.h,Ws,1)}set baseOptions(t){Yn(this.h,0,1,t)}o(t){var e=this.h,n=Xn(this.h,$s,2);return n=n?n.clone():new $s,void 0!==t.l2Normalize?ni(n,1,t.l2Normalize):"l2Normalize"in t&&Ln(n,1),void 0!==t.quantize?ni(n,2,t.quantize):"quantize"in t&&Ln(n,2),Yn(e,0,2,n),this.l(t)}Ba(t,e){return fh(this,t,e),this.embeddings}Ca(t,e,n){return gh(this,t,n,e),this.embeddings}m(){var t=new Jr;Kr(t,"image_in"),Kr(t,"norm_rect"),qr(t,"embeddings_out");const e=new Mr;si(e,Po,this.h);const n=new zr;Nr(n,"mediapipe.tasks.vision.image_embedder.ImageEmbedderGraph"),Gr(n,"IMAGE:image_in"),Gr(n,"NORM_RECT:norm_rect"),$r(n,"EMBEDDINGS:embeddings_out"),n.o(e),Yr(t,n),this.g.attachProtoListener("embeddings_out",((t,e)=>{t=Bs(t),this.embeddings=function(t){return{embeddings:Wn(t,Is,1).map((t=>{const e={headIndex:ti(Zn(t,3))??-1,headName:Qn(t,4)??""??""};if(void 0!==jn(t,Fs,$n(t,1)))t=Fn(t=Xn(t,Fs,$n(t,1)),1,Oe),e.floatEmbedding=t.slice();else{const n=new Uint8Array(0);e.quantizedEmbedding=Xn(t,Ds,$n(t,2))?.qa()?.h()??n}return e})),timestampMs:ti(He(Tn(t,2)))}}(t),fa(this,e)})),this.g.attachEmptyPacketListener("embeddings_out",(t=>{fa(this,t)})),t=t.g(),this.setGraph(new Uint8Array(t),!0)}};Xh.cosineSimilarity=function(t,e){if(t.floatEmbedding&&e.floatEmbedding)t=Zo(t.floatEmbedding,e.floatEmbedding);else{if(!t.quantizedEmbedding||!e.quantizedEmbedding)throw Error("Cannot compute cosine similarity between quantized and float embeddings.");t=Zo(Jo(t.quantizedEmbedding),Jo(e.quantizedEmbedding))}return t},Xh.prototype.embedForVideo=Xh.prototype.Ca,Xh.prototype.embed=Xh.prototype.Ba,Xh.prototype.setOptions=Xh.prototype.o,Xh.createFromModelPath=function(t,e){return dh(Xh,t,{baseOptions:{modelAssetPath:e}})},Xh.createFromModelBuffer=function(t,e){return dh(Xh,t,{baseOptions:{modelAssetBuffer:e}})},Xh.createFromOptions=function(t,e){return dh(Xh,t,e)};var Hh=class{constructor(t,e,n){this.confidenceMasks=t,this.categoryMask=e,this.qualityScores=n}close(){this.confidenceMasks?.forEach((t=>{t.close()})),this.categoryMask?.close()}};function Wh(t){t.categoryMask=void 0,t.confidenceMasks=void 0,t.qualityScores=void 0}function Yh(t){try{const e=new Hh(t.confidenceMasks,t.categoryMask,t.qualityScores);if(!t.j)return e;t.j(e)}finally{ya(t)}}Hh.prototype.close=Hh.prototype.close;var Kh=class extends yh{constructor(t,e){super(new uh(t,e),"image_in","norm_rect",!1),this.s=[],this.outputCategoryMask=!1,this.outputConfidenceMasks=!0,this.h=new Go,this.v=new Oo,Yn(this.h,0,3,this.v),Yn(t=this.h,0,1,e=new Ws)}get baseOptions(){return Xn(this.h,Ws,1)}set baseOptions(t){Yn(this.h,0,1,t)}o(t){return void 0!==t.displayNamesLocale?Ln(this.h,2,Ye(t.displayNamesLocale)):"displayNamesLocale"in t&&Ln(this.h,2),"outputCategoryMask"in t&&(this.outputCategoryMask=t.outputCategoryMask??!1),"outputConfidenceMasks"in t&&(this.outputConfidenceMasks=t.outputConfidenceMasks??!0),super.l(t)}K(){!function(t){const e=Wn(t.fa(),zr,1).filter((t=>(Qn(t,1)??"").includes("mediapipe.tasks.TensorsToSegmentationCalculator")));if(t.s=[],1<e.length)throw Error("The graph has more than one mediapipe.tasks.TensorsToSegmentationCalculator.");1===e.length&&(Xn(e[0],Mr,7)?.l()?.g()??new Map).forEach(((e,n)=>{t.s[Number(n)]=Qn(e,1)??""}))}(this)}ga(t,e,n){const i="function"!=typeof e?e:{};return this.j="function"==typeof e?e:n,Wh(this),fh(this,t,i),Yh(this)}Na(t,e,n,i){const r="function"!=typeof n?n:{};return this.j="function"==typeof n?n:i,Wh(this),gh(this,t,r,e),Yh(this)}Fa(){return this.s}m(){var t=new Jr;Kr(t,"image_in"),Kr(t,"norm_rect");const e=new Mr;si(e,$o,this.h);const n=new zr;Nr(n,"mediapipe.tasks.vision.image_segmenter.ImageSegmenterGraph"),Gr(n,"IMAGE:image_in"),Gr(n,"NORM_RECT:norm_rect"),n.o(e),Yr(t,n),ga(this,t),this.outputConfidenceMasks&&(qr(t,"confidence_masks"),$r(n,"CONFIDENCE_MASKS:confidence_masks"),ma(this,"confidence_masks"),this.g.da("confidence_masks",((t,e)=>{this.confidenceMasks=t.map((t=>mh(this,t,!0,!this.j))),fa(this,e)})),this.g.attachEmptyPacketListener("confidence_masks",(t=>{this.confidenceMasks=[],fa(this,t)}))),this.outputCategoryMask&&(qr(t,"category_mask"),$r(n,"CATEGORY_MASK:category_mask"),ma(this,"category_mask"),this.g.W("category_mask",((t,e)=>{this.categoryMask=mh(this,t,!1,!this.j),fa(this,e)})),this.g.attachEmptyPacketListener("category_mask",(t=>{this.categoryMask=void 0,fa(this,t)}))),qr(t,"quality_scores"),$r(n,"QUALITY_SCORES:quality_scores"),this.g.attachFloatVectorListener("quality_scores",((t,e)=>{this.qualityScores=t,fa(this,e)})),this.g.attachEmptyPacketListener("quality_scores",(t=>{this.categoryMask=void 0,fa(this,t)})),t=t.g(),this.setGraph(new Uint8Array(t),!0)}};Kh.prototype.getLabels=Kh.prototype.Fa,Kh.prototype.segmentForVideo=Kh.prototype.Na,Kh.prototype.segment=Kh.prototype.ga,Kh.prototype.setOptions=Kh.prototype.o,Kh.createFromModelPath=function(t,e){return dh(Kh,t,{baseOptions:{modelAssetPath:e}})},Kh.createFromModelBuffer=function(t,e){return dh(Kh,t,{baseOptions:{modelAssetBuffer:e}})},Kh.createFromOptions=function(t,e){return dh(Kh,t,e)};var qh=class{constructor(t,e,n){this.confidenceMasks=t,this.categoryMask=e,this.qualityScores=n}close(){this.confidenceMasks?.forEach((t=>{t.close()})),this.categoryMask?.close()}};qh.prototype.close=qh.prototype.close;var Jh=class extends oi{constructor(t){super(t)}},Zh=[0,er,-2],Qh=[0,Yi,-3,rr],tc=[0,Yi,-3,rr,Yi,-1],ec=[0,tc],nc=[0,ec,Zh],ic=[0,tc,Zh],rc=[0,tc,er,-1],sc=[0,rc,Zh],oc=[0,Yi,-3,rr,Zh,-1],ac=[0,Yi,-3,rr,fr],hc=class extends oi{constructor(t){super(t)}},cc=[0,Yi,-1,rr],lc=class extends oi{constructor(){super()}};lc.A=[1];var uc=class extends oi{constructor(t){super(t)}},dc=[1,2,3,4,5,6,7,8,9,10,14,15],pc=[0,dc,ur,tc,ur,ic,ur,ec,ur,nc,ur,cc,ur,ac,ur,Qh,ur,[0,hr,Yi,-2,rr,er,rr,-1,2,Yi,Zh],ur,rc,ur,sc,Yi,Zh,hr,ur,oc,ur,[0,Wi,cc]],fc=[0,hr,er,-1,rr],gc=class extends oi{constructor(){super()}};gc.A=[1],gc.prototype.g=_r([0,Wi,pc,hr,fc]);var mc=class extends yh{constructor(t,e){super(new uh(t,e),"image_in","norm_rect_in",!1),this.outputCategoryMask=!1,this.outputConfidenceMasks=!0,this.h=new Go,this.s=new Oo,Yn(this.h,0,3,this.s),Yn(t=this.h,0,1,e=new Ws)}get baseOptions(){return Xn(this.h,Ws,1)}set baseOptions(t){Yn(this.h,0,1,t)}o(t){return"outputCategoryMask"in t&&(this.outputCategoryMask=t.outputCategoryMask??!1),"outputConfidenceMasks"in t&&(this.outputConfidenceMasks=t.outputConfidenceMasks??!0),super.l(t)}ga(t,e,n,i){const r="function"!=typeof n?n:{};this.j="function"==typeof n?n:i,this.qualityScores=this.categoryMask=this.confidenceMasks=void 0,n=this.C+1,i=new gc;const s=new uc;var o=new Jh;if(ii(o,1,255),Yn(s,0,12,o),e.keypoint&&e.scribble)throw Error("Cannot provide both keypoint and scribble.");if(e.keypoint){var a=new hc;ni(a,3,!0),ri(a,1,e.keypoint.x),ri(a,2,e.keypoint.y),Kn(s,5,dc,a)}else{if(!e.scribble)throw Error("Must provide either a keypoint or a scribble.");for(a of(o=new lc,e.scribble))ni(e=new hc,3,!0),ri(e,1,a.x),ri(e,2,a.y),Jn(o,1,hc,e);Kn(s,15,dc,o)}Jn(i,1,uc,s),this.g.addProtoToStream(i.g(),"drishti.RenderData","roi_in",n),fh(this,t,r);t:{try{const t=new qh(this.confidenceMasks,this.categoryMask,this.qualityScores);if(!this.j){var h=t;break t}this.j(t)}finally{ya(this)}h=void 0}return h}m(){var t=new Jr;Kr(t,"image_in"),Kr(t,"roi_in"),Kr(t,"norm_rect_in");const e=new Mr;si(e,$o,this.h);const n=new zr;Nr(n,"mediapipe.tasks.vision.interactive_segmenter.InteractiveSegmenterGraph"),Gr(n,"IMAGE:image_in"),Gr(n,"ROI:roi_in"),Gr(n,"NORM_RECT:norm_rect_in"),n.o(e),Yr(t,n),ga(this,t),this.outputConfidenceMasks&&(qr(t,"confidence_masks"),$r(n,"CONFIDENCE_MASKS:confidence_masks"),ma(this,"confidence_masks"),this.g.da("confidence_masks",((t,e)=>{this.confidenceMasks=t.map((t=>mh(this,t,!0,!this.j))),fa(this,e)})),this.g.attachEmptyPacketListener("confidence_masks",(t=>{this.confidenceMasks=[],fa(this,t)}))),this.outputCategoryMask&&(qr(t,"category_mask"),$r(n,"CATEGORY_MASK:category_mask"),ma(this,"category_mask"),this.g.W("category_mask",((t,e)=>{this.categoryMask=mh(this,t,!1,!this.j),fa(this,e)})),this.g.attachEmptyPacketListener("category_mask",(t=>{this.categoryMask=void 0,fa(this,t)}))),qr(t,"quality_scores"),$r(n,"QUALITY_SCORES:quality_scores"),this.g.attachFloatVectorListener("quality_scores",((t,e)=>{this.qualityScores=t,fa(this,e)})),this.g.attachEmptyPacketListener("quality_scores",(t=>{this.categoryMask=void 0,fa(this,t)})),t=t.g(),this.setGraph(new Uint8Array(t),!0)}};mc.prototype.segment=mc.prototype.ga,mc.prototype.setOptions=mc.prototype.o,mc.createFromModelPath=function(t,e){return dh(mc,t,{baseOptions:{modelAssetPath:e}})},mc.createFromModelBuffer=function(t,e){return dh(mc,t,{baseOptions:{modelAssetBuffer:e}})},mc.createFromOptions=function(t,e){return dh(mc,t,e)};var yc=class extends yh{constructor(t,e){super(new uh(t,e),"input_frame_gpu","norm_rect",!1),this.j={detections:[]},Yn(t=this.h=new zo,0,1,e=new Ws)}get baseOptions(){return Xn(this.h,Ws,1)}set baseOptions(t){Yn(this.h,0,1,t)}o(t){return void 0!==t.displayNamesLocale?Ln(this.h,2,Ye(t.displayNamesLocale)):"displayNamesLocale"in t&&Ln(this.h,2),void 0!==t.maxResults?ii(this.h,3,t.maxResults):"maxResults"in t&&Ln(this.h,3),void 0!==t.scoreThreshold?ri(this.h,4,t.scoreThreshold):"scoreThreshold"in t&&Ln(this.h,4),void 0!==t.categoryAllowlist?Un(this.h,5,t.categoryAllowlist):"categoryAllowlist"in t&&Ln(this.h,5),void 0!==t.categoryDenylist?Un(this.h,6,t.categoryDenylist):"categoryDenylist"in t&&Ln(this.h,6),this.l(t)}F(t,e){return this.j={detections:[]},fh(this,t,e),this.j}G(t,e,n){return this.j={detections:[]},gh(this,t,n,e),this.j}m(){var t=new Jr;Kr(t,"input_frame_gpu"),Kr(t,"norm_rect"),qr(t,"detections");const e=new Mr;si(e,Vo,this.h);const n=new zr;Nr(n,"mediapipe.tasks.vision.ObjectDetectorGraph"),Gr(n,"IMAGE:input_frame_gpu"),Gr(n,"NORM_RECT:norm_rect"),$r(n,"DETECTIONS:detections"),n.o(e),Yr(t,n),this.g.attachProtoVectorListener("detections",((t,e)=>{for(const e of t)t=ms(e),this.j.detections.push(Yo(t));fa(this,e)})),this.g.attachEmptyPacketListener("detections",(t=>{fa(this,t)})),t=t.g(),this.setGraph(new Uint8Array(t),!0)}};yc.prototype.detectForVideo=yc.prototype.G,yc.prototype.detect=yc.prototype.F,yc.prototype.setOptions=yc.prototype.o,yc.createFromModelPath=async function(t,e){return dh(yc,t,{baseOptions:{modelAssetPath:e}})},yc.createFromModelBuffer=function(t,e){return dh(yc,t,{baseOptions:{modelAssetBuffer:e}})},yc.createFromOptions=function(t,e){return dh(yc,t,e)};var vc=class{constructor(t,e,n){this.landmarks=t,this.worldLandmarks=e,this.segmentationMasks=n}close(){this.segmentationMasks?.forEach((t=>{t.close()}))}};function _c(t){t.landmarks=[],t.worldLandmarks=[],t.segmentationMasks=void 0}function Ac(t){try{const e=new vc(t.landmarks,t.worldLandmarks,t.segmentationMasks);if(!t.s)return e;t.s(e)}finally{ya(t)}}vc.prototype.close=vc.prototype.close;var bc=class extends yh{constructor(t,e){super(new uh(t,e),"image_in","norm_rect",!1),this.landmarks=[],this.worldLandmarks=[],this.outputSegmentationMasks=!1,Yn(t=this.h=new jo,0,1,e=new Ws),this.v=new Co,Yn(this.h,0,3,this.v),this.j=new Lo,Yn(this.h,0,2,this.j),ii(this.j,4,1),ri(this.j,2,.5),ri(this.v,2,.5),ri(this.h,4,.5)}get baseOptions(){return Xn(this.h,Ws,1)}set baseOptions(t){Yn(this.h,0,1,t)}o(t){return"numPoses"in t&&ii(this.j,4,t.numPoses??1),"minPoseDetectionConfidence"in t&&ri(this.j,2,t.minPoseDetectionConfidence??.5),"minTrackingConfidence"in t&&ri(this.h,4,t.minTrackingConfidence??.5),"minPosePresenceConfidence"in t&&ri(this.v,2,t.minPosePresenceConfidence??.5),"outputSegmentationMasks"in t&&(this.outputSegmentationMasks=t.outputSegmentationMasks??!1),this.l(t)}F(t,e,n){const i="function"!=typeof e?e:{};return this.s="function"==typeof e?e:n,_c(this),fh(this,t,i),Ac(this)}G(t,e,n,i){const r="function"!=typeof n?n:{};return this.s="function"==typeof n?n:i,_c(this),gh(this,t,r,e),Ac(this)}m(){var t=new Jr;Kr(t,"image_in"),Kr(t,"norm_rect"),qr(t,"normalized_landmarks"),qr(t,"world_landmarks"),qr(t,"segmentation_masks");const e=new Mr;si(e,Xo,this.h);const n=new zr;Nr(n,"mediapipe.tasks.vision.pose_landmarker.PoseLandmarkerGraph"),Gr(n,"IMAGE:image_in"),Gr(n,"NORM_RECT:norm_rect"),$r(n,"NORM_LANDMARKS:normalized_landmarks"),$r(n,"WORLD_LANDMARKS:world_landmarks"),n.o(e),Yr(t,n),ga(this,t),this.g.attachProtoVectorListener("normalized_landmarks",((t,e)=>{this.landmarks=[];for(const e of t)t=xs(e),this.landmarks.push(Ko(t));fa(this,e)})),this.g.attachEmptyPacketListener("normalized_landmarks",(t=>{this.landmarks=[],fa(this,t)})),this.g.attachProtoVectorListener("world_landmarks",((t,e)=>{this.worldLandmarks=[];for(const e of t)t=As(e),this.worldLandmarks.push(qo(t));fa(this,e)})),this.g.attachEmptyPacketListener("world_landmarks",(t=>{this.worldLandmarks=[],fa(this,t)})),this.outputSegmentationMasks&&($r(n,"SEGMENTATION_MASK:segmentation_masks"),ma(this,"segmentation_masks"),this.g.da("segmentation_masks",((t,e)=>{this.segmentationMasks=t.map((t=>mh(this,t,!0,!this.s))),fa(this,e)})),this.g.attachEmptyPacketListener("segmentation_masks",(t=>{this.segmentationMasks=[],fa(this,t)}))),t=t.g(),this.setGraph(new Uint8Array(t),!0)}};bc.prototype.detectForVideo=bc.prototype.G,bc.prototype.detect=bc.prototype.F,bc.prototype.setOptions=bc.prototype.o,bc.createFromModelPath=function(t,e){return dh(bc,t,{baseOptions:{modelAssetPath:e}})},bc.createFromModelBuffer=function(t,e){return dh(bc,t,{baseOptions:{modelAssetBuffer:e}})},bc.createFromOptions=function(t,e){return dh(bc,t,e)},bc.POSE_CONNECTIONS=Nh;class wc{constructor(t){this.video=t}async initialize(){const t=await ia.forVisionTasks("https://cdn.jsdelivr.net/npm/@mediapipe/tasks-vision@0.10.0/wasm");this.faceDetector=await vh.createFromOptions(t,{baseOptions:{modelAssetPath:"https://storage.googleapis.com/mediapipe-models/face_detector/blaze_face_short_range/float16/1/blaze_face_short_range.tflite",delegate:"GPU"},runningMode:"VIDEO"})}detect(){return this.faceDetector.detectForVideo(this.video,Date.now()).detections}}class Ec{detectedFaces=[];prevFaceRatio=-1;faceRatioArray=new Array(30).fill(0);faceRatio=-1;defaultScale=4.5;scale=this.defaultScale;enableFaceDetection=!0;backgroundColor=[0,0,0];constructor(){this.uniLocations=[],this.cameraTexture=new v,this.hyperbolicTessellation=new E,this.videoFaceDetector=new wc(this.cameraTexture.video),this.translation=new _(0,0)}processDetection(){if(0===this.detectedFaces.length)return;let t=-1;for(const e of this.detectedFaces)t=Math.max(t,e.boundingBox.height);this.prevFaceRatio=this.faceRatio,this.faceRatio=t/this.cameraTexture.height,this.faceRatio=Math.round(100*this.faceRatio)/100,this.faceRatioArray.push(this.faceRatio),this.faceRatioArray.shift(),this.faceRatio=this.faceRatioArray.reduce(((t,e)=>t+e),0)/this.faceRatioArray.length;const e=this.defaultScale-5*(this.faceRatio-.3);Math.abs(e-this.scale)<.015?this.scale=e:e<this.scale?this.scale-=.01:this.scale+=.01}async initialize(t,e){this.gl=t,this.cameraTexture.connectToCamera(t),await this.videoFaceDetector.initialize(),this.uniLocations=[],this.uniLocations.push(t.getUniformLocation(e,"u_translation")),this.uniLocations.push(t.getUniformLocation(e,"u_scale")),this.uniLocations.push(t.getUniformLocation(e,"u_cameraTexture")),this.uniLocations.push(t.getUniformLocation(e,"u_cameraResolution")),this.uniLocations.push(t.getUniformLocation(e,"u_circle1")),this.uniLocations.push(t.getUniformLocation(e,"u_circle2")),this.uniLocations.push(t.getUniformLocation(e,"u_backgroundColor")),this.uniLocations.push(t.getUniformLocation(e,"u_cornerUpperRight"));for(let n=0;n<this.cameraTexture.textures.length;n++)this.uniLocations.push(t.getUniformLocation(e,`u_videoFrames[${n}]`))}animate(t){let e=t/100;const n=617;e=e%n*2,e>=n&&(e=n-(e-n)),this.hyperbolicTessellation.bendY=-e/1e3,this.hyperbolicTessellation.compute()}async onUpdate(t){await this.cameraTexture.updateTexture(t),this.cameraTexture.isPlayingVideo&&this.enableFaceDetection&&(this.detectedFaces=this.videoFaceDetector.detect(),this.processDetection())}setUniformValues(t){let e=0;this.gl.uniform2f(this.uniLocations[e++],this.translation.x,this.translation.y),this.gl.uniform1f(this.uniLocations[e++],this.scale),t.activeTexture(t.TEXTURE0),t.bindTexture(t.TEXTURE_2D,this.cameraTexture.texture),this.gl.uniform1i(this.uniLocations[e++],0),this.gl.uniform2f(this.uniLocations[e++],this.cameraTexture.width,this.cameraTexture.height),this.gl.uniform3f(this.uniLocations[e++],this.hyperbolicTessellation.c1.center.x,this.hyperbolicTessellation.c1.center.y,this.hyperbolicTessellation.c1.r),this.gl.uniform3f(this.uniLocations[e++],this.hyperbolicTessellation.c2.center.x,this.hyperbolicTessellation.c2.center.y,this.hyperbolicTessellation.c2.r),this.gl.uniform3f(this.uniLocations[e++],this.backgroundColor[0],this.backgroundColor[1],this.backgroundColor[2]),this.gl.uniform2f(this.uniLocations[e++],this.hyperbolicTessellation.corner.x,this.hyperbolicTessellation.corner.y);for(let n=0;n<5;n++)t.activeTexture(t.TEXTURE0+n+1),t.bindTexture(t.TEXTURE_2D,this.cameraTexture.textures[n]),this.gl.uniform1i(this.uniLocations[e++],n+1)}}const xc=n(228),Tc=n(902);class kc{uniLocations;constructor(t){this.canvas=t,this.isRendering=!1}initialize(){this.gl=y.GetWebGL2Context(this.canvas),this.vertexBuffer=y.CreateSquareVbo(this.gl),this.renderProgram=this.gl.createProgram(),y.AttachShader(this.gl,xc,this.renderProgram,this.gl.VERTEX_SHADER),y.AttachShader(this.gl,Tc,this.renderProgram,this.gl.FRAGMENT_SHADER),y.LinkProgram(this.gl,this.renderProgram),this.renderVAttrib=this.gl.getAttribLocation(this.renderProgram,"a_vertex"),this.gl.enableVertexAttribArray(this.renderVAttrib),this.initializeUniormLocations()}initializeUniormLocations(){this.uniLocations=[],this.uniLocations.push(this.gl.getUniformLocation(this.renderProgram,"u_resolution"))}setUniformValues(t,e){let n=0;this.gl.uniform2f(this.uniLocations[n++],t,e)}render(t){this.gl.viewport(0,0,this.canvas.width,this.canvas.height),this.gl.useProgram(this.renderProgram),this.setUniformValues(this.canvas.width,this.canvas.height),t.setUniformValues(this.gl),this.gl.bindBuffer(this.gl.ARRAY_BUFFER,this.vertexBuffer),this.gl.vertexAttribPointer(this.renderVAttrib,2,this.gl.FLOAT,!1,0,0),this.gl.drawArrays(this.gl.TRIANGLE_STRIP,0,4),this.gl.flush()}}window.addEventListener("load",(async()=>{const t=new URL(decodeURIComponent(document.location.href)).searchParams,e=document.querySelector("#canvas"),n=()=>{const t=e.parentElement;e.style.width=t.clientWidth+"px",e.style.height=t.clientHeight+"px",e.width=t.clientWidth,e.height=t.clientHeight};n();const i=new kc(e),r=new Ec;if(i.initialize(),await r.initialize(i.gl,i.renderProgram),"true"===t.get("debug")){const t=new m;t.add(r,"defaultScale",0,10,.1).listen().onChange((t=>{r.scale=t})),t.add(r.cameraTexture,"frameDelayMillis",0,1e3,1).listen(),t.add(r,"enableFaceDetection").listen().onChange((()=>{r.scale=r.defaultScale})),t.addColor(r,"backgroundColor").listen(),t.add(r,"faceRatio",0,1).listen().disable(),t.add(r,"scale",0,5).listen().disable()}if(null!==t.get("defaultScale")){const e=parseFloat(t.get("defaultScale"));r.defaultScale=e}const s=Date.now();let o=Date.now();const a=async()=>{Date.now()-o>16.666666666666668&&(r.animate(Date.now()-s),await r.onUpdate(i.gl),i.render(r),o=Date.now()),window.requestAnimationFrame(a)};a();let h=setTimeout(n,100);window.addEventListener("resize",(()=>{window.clearTimeout(h),window.setTimeout(n,500)}))}))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,